{"repository_name":"github.com/naqvis/containerregistry.cr","body":"[![Build Status](https://travis-ci.org/naqvis/containerregistry.cr.svg?branch=master)](https://travis-ci.org/naqvis/containerregistry.cr)\n[![GitHub release](https://img.shields.io/github/release/naqvis/containerregistry.cr.svg)](https://github.com/naqvis/containerregistry.cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://naqvis.github.io/containerregistry.cr/)\n\n# Crystal - Container Registry Shard\n\n`containerregistry.cr` shard is a library for working with container registries. It's largely based on the [Go library of the same name](https://github.com/google/go-containerregistry).\n\nThe following diagram shows the main types that this library handles.\n![OCI image representation](images/ociimage.jpeg)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     containerregistry:\n       github: naqvis/containerregistry.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"containerregistry\"\n```\nRefer to [`opal`](https://github.com/naqvis/opal) for CLI and usage\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/containerregistry.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n","program":{"html_id":"github.com/naqvis/containerregistry.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/naqvis/containerregistry.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn","path":"Authn.html","kind":"module","full_name":"Authn","name":"Authn","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"authn/authn.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/authn.cr"},{"filename":"authn/keychain.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/keychain.cr"},{"filename":"authn/multikeychain.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/multikeychain.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ANONYMOUS","name":"ANONYMOUS","value":"Anonymous.new","doc":"Singleton Authenticator for providing anonymous auth.","summary":"<p>Singleton Authenticator for providing anonymous auth.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Module Authn defines different methods of authentication for talking to a container registry.","summary":"<p>Module Authn defines different methods of authentication for talking to a container registry.</p>","class_methods":[{"id":"multi_keychain(*kcs:Keychain)-class-method","html_id":"multi_keychain(*kcs:Keychain)-class-method","name":"multi_keychain","doc":null,"summary":null,"abstract":false,"args":[{"name":"kcs","doc":null,"default_value":"","external_name":"kcs","restriction":"Keychain"}],"args_string":"(*kcs : Keychain)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/multikeychain.cr#L5","def":{"name":"multi_keychain","args":[{"name":"kcs","doc":null,"default_value":"","external_name":"kcs","restriction":"Keychain"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"multi = MultiKeychain.new\nkcs.each do |kc|\n  multi.add(kc)\nend\nmulti\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Anonymous","path":"Authn/Anonymous.html","kind":"class","full_name":"Authn::Anonymous","name":"Anonymous","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/anon.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/anon.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"anonymous implements Authenticator for anonymous authentication.","summary":"<p>anonymous implements Authenticator for anonymous authentication.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/anon.cr#L5","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":"Implement anonymous authentication.","summary":"<p>Implement anonymous authentication.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/anon.cr#L9","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"\""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Auth","path":"Authn/Auth.html","kind":"class","full_name":"Authn::Auth","name":"Auth","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/auth.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/auth.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"auth implements Authenticator for an \"auth\" entry of the docker config.","summary":"<p>auth implements Authenticator for an \"auth\" entry of the docker config.</p>","class_methods":[],"constructors":[{"id":"new(token:String)-class-method","html_id":"new(token:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/auth.cr#L5","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/auth.cr#L8","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Basic #{@token}\""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","path":"Authn/Authenticator.html","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator","abstract":true,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/authn.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/authn.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Anonymous","kind":"class","full_name":"Authn::Anonymous","name":"Anonymous"},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Auth","kind":"class","full_name":"Authn::Auth","name":"Auth"},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Basic","kind":"class","full_name":"Authn::Basic","name":"Basic"},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Bearer","kind":"class","full_name":"Authn::Bearer","name":"Bearer"},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Helper","kind":"class","full_name":"Authn::Helper","name":"Helper"},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Token","kind":"class","full_name":"Authn::Token","name":"Token"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"Interface for providing User Credentials for use with a Docker Registry.","summary":"<p>Interface for providing User Credentials for use with a Docker Registry.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"authorization:String-instance-method","html_id":"authorization:String-instance-method","name":"authorization","doc":"Produces a value suitable for use in the Authorization header.","summary":"<p>Produces a value suitable for use in the Authorization header.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/authn.cr#L6","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Basic","path":"Authn/Basic.html","kind":"class","full_name":"Authn::Basic","name":"Basic","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/basic.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/basic.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"Basic implements Authenticator for basic authentication.","summary":"<p>Basic implements Authenticator for basic authentication.</p>","class_methods":[],"constructors":[{"id":"new(username:String,password:String)-class-method","html_id":"new(username:String,password:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"username","doc":null,"default_value":"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(username : String, password : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/basic.cr#L12","def":{"name":"new","args":[{"name":"username","doc":null,"default_value":"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(username, password)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_27:JSON::PullParser)-class-method","html_id":"new(__temp_27:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_27","doc":null,"default_value":"","external_name":"__temp_27","restriction":"::JSON::PullParser"}],"args_string":"(__temp_27 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_27","doc":null,"default_value":"","external_name":"__temp_27","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_27)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/basic.cr#L15","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"delimited = \"#{@username}:#{@password}\"\nencoded = Base64.strict_encode(delimited)\n\"Basic #{encoded}\"\n"}},{"id":"password:String-instance-method","html_id":"password:String-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@password"}},{"id":"password=(_password:String)-instance-method","html_id":"password=(_password:String)-instance-method","name":"password=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_password","doc":null,"default_value":"","external_name":"_password","restriction":"String"}],"args_string":"(_password : String)","source_link":null,"def":{"name":"password=","args":[{"name":"_password","doc":null,"default_value":"","external_name":"_password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password = _password"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _username = @username\n  if _username.nil?\n  else\n    json.field(\"Username\") do\n      _username.to_json(json)\n    end\n  end\n  _password = @password\n  if _password.nil?\n  else\n    json.field(\"Secret\") do\n      _password.to_json(json)\n    end\n  end\nend"}},{"id":"username:String-instance-method","html_id":"username:String-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@username"}},{"id":"username=(_username:String)-instance-method","html_id":"username=(_username:String)-instance-method","name":"username=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"args_string":"(_username : String)","source_link":null,"def":{"name":"username=","args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username = _username"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Bearer","path":"Authn/Bearer.html","kind":"class","full_name":"Authn::Bearer","name":"Bearer","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/bearer.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/bearer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"Bearer implements Authenticator for bearer authentication.","summary":"<p>Bearer implements Authenticator for bearer authentication.</p>","class_methods":[],"constructors":[{"id":"new(__temp_34:JSON::PullParser)-class-method","html_id":"new(__temp_34:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_34","doc":null,"default_value":"","external_name":"__temp_34","restriction":"::JSON::PullParser"}],"args_string":"(__temp_34 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_34","doc":null,"default_value":"","external_name":"__temp_34","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_34)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(token:String)-class-method","html_id":"new(token:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/bearer.cr#L10","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/bearer.cr#L13","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Bearer #{token}\""}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _token = @token\n  if _token.nil?\n  else\n    json.field(\"token\") do\n      _token.to_json(json)\n    end\n  end\nend"}},{"id":"token:String-instance-method","html_id":"token:String-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@token"}},{"id":"token=(_token:String)-instance-method","html_id":"token=(_token:String)-instance-method","name":"token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"args_string":"(_token : String)","source_link":null,"def":{"name":"token=","args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token = _token"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/DefaultKeychain","path":"Authn/DefaultKeychain.html","kind":"class","full_name":"Authn::DefaultKeychain","name":"DefaultKeychain","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Keychain","kind":"class","full_name":"Authn::Keychain","name":"Keychain"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Keychain","kind":"class","full_name":"Authn::Keychain","name":"Keychain"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/keychain.cr","line_number":17,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/keychain.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"FORMATS","name":"FORMATS","value":"[\"%s\", \"https://%s\", \"http://%s\", \"https://%s/v1/\", \"http://%s/v1/\", \"https://%s/v2/\", \"http://%s/v2/\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(registry:Name::Registry):Authenticator-instance-method","html_id":"resolve(registry:Name::Registry):Authenticator-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"args_string":"(registry : Name::Registry) : Authenticator","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/keychain.cr#L47","def":{"name":"resolve","args":[{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Authenticator","visibility":"Public","body":"begin\n  contents = File.read(get_config_file)\nrescue exception\n  Authn::ANONYMOUS\nelse\n  begin\n    cfg = Cfg.from_json(contents)\n  rescue exception\n    Authn::ANONYMOUS\n  else\n    parse_cfg(cfg, registry)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Helper","path":"Authn/Helper.html","kind":"class","full_name":"Authn::Helper","name":"Helper","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/helper.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/helper.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MAGIC_NOT_FOUND_MESSAGE","name":"MAGIC_NOT_FOUND_MESSAGE","value":"\"credentials not found in native keychain\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"This provider wraps a particularly named credential helper.","summary":"<p>This provider wraps a particularly named credential helper.</p>","class_methods":[],"constructors":[{"id":"new(name:String,registry:Name::Registry)-class-method","html_id":"new(name:String,registry:Name::Registry)-class-method","name":"new","doc":"Args:\n name: the name of the helper, as it appears in the Docker config.\n registry: the registry for which we're invoking the helper.","summary":"<p>Args:  name: the name of the helper, as it appears in the Docker config.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"args_string":"(name : String, registry : Name::Registry)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/helper.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, registry)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/helper.cr#L16","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"command = \"docker-credential-#{@name}\"\nhas_command = (Process.run(\"command -v #{command}\", shell: true)).success?\nif !has_command\n  raise(Exception.new(\"executable not found: #{command}\"))\nend\noutput = IO::Memory.new\nreg = \"https://#{@registry}\"\ninput = IO::Memory.new(reg)\nstatus = Process.run(command, [\"get\"], input: input, output: output)\nmsg = output.to_s\nif status.success?\n  (Authn::Basic.from_json(msg)).authorization\nelse\n  if msg.strip == MAGIC_NOT_FOUND_MESSAGE\n    V1::Logger.info(\"Credentials not found, falling back to anonymous auth.\")\n    Authn::ANONYMOUS.authorization\n  else\n    raise(Exception.new(\"Error fetching credential for #{@registry}, exit status: #{status.exit_code}\\n#{msg}\"))\n  end\nend\n"}},{"id":"registry:String-instance-method","html_id":"registry:String-instance-method","name":"registry","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/helper.cr#L9","def":{"name":"registry","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@registry"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Keychain","path":"Authn/Keychain.html","kind":"class","full_name":"Authn::Keychain","name":"Keychain","abstract":true,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/keychain.cr","line_number":7,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/keychain.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/DefaultKeychain","kind":"class","full_name":"Authn::DefaultKeychain","name":"DefaultKeychain"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"Interface for resolving an image reference to a credential.","summary":"<p>Interface for resolving an image reference to a credential.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(registry:Name::Registry):Authn::Authenticator-instance-method","html_id":"resolve(registry:Name::Registry):Authn::Authenticator-instance-method","name":"resolve","doc":"Returns:\n  a Provider suitable for use with registry operations.","summary":"<p>Returns:   a Provider suitable for use with registry operations.</p>","abstract":true,"args":[{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"args_string":"(registry : Name::Registry) : Authn::Authenticator","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/keychain.cr#L14","def":{"name":"resolve","args":[{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":"Name::Registry"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Authn::Authenticator","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Token","path":"Authn/Token.html","kind":"class","full_name":"Authn::Token","name":"Token","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Authn/Authenticator","kind":"class","full_name":"Authn::Authenticator","name":"Authenticator"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"authn/token.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/token.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Authn","kind":"module","full_name":"Authn","name":"Authn"},"doc":"Implementation for providing a transaction's X-Docker-Token as creds.","summary":"<p>Implementation for providing a transaction's X-Docker-Token as creds.</p>","class_methods":[],"constructors":[{"id":"new(token:String)-class-method","html_id":"new(token:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/token.cr#L5","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"authorization-instance-method","html_id":"authorization-instance-method","name":"authorization","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/authn/token.cr#L8","def":{"name":"authorization","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Token #{@token}\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/Containerregistry","path":"Containerregistry.html","kind":"module","full_name":"Containerregistry","name":"Containerregistry","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"containerregistry.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/containerregistry.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Crystal` library for working with container registries.\nIt's largely based on the [Python library of the same name](https://github.com/google/containerregistry).","summary":"<p><code>Crystal</code> library for working with container registries.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name","path":"Name.html","kind":"module","full_name":"Name","name":"Name","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"name/registry.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr"},{"filename":"name/repository.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr"},{"filename":"name/ref.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr"},{"filename":"name/tag.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr"},{"filename":"name/digest.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr"},{"filename":"name/name.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/name.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_REGISTRY","name":"DEFAULT_REGISTRY","value":"\"index.docker.io\"","doc":"DefaultRegistry is Docker Hub, assumed when a hostname is omitted.","summary":"<p>DefaultRegistry is Docker Hub, assumed when a hostname is omitted.</p>"},{"id":"DEFAULT_REGISTRY_ALIAS","name":"DEFAULT_REGISTRY_ALIAS","value":"\"docker.io\"","doc":null,"summary":null},{"id":"RFC1918_CIDR","name":"RFC1918_CIDR","value":"[\"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/BadNameException","path":"Name/BadNameException.html","kind":"class","full_name":"Name::BadNameException","name":"BadNameException","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"name/registry.cr","line_number":11,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":"Exceptions when a bad docker name is supplied.","summary":"<p>Exceptions when a bad docker name is supplied.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Digest","path":"Name/Digest.html","kind":"class","full_name":"Name::Digest","name":"Digest","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","kind":"class","full_name":"Name::Repository","name":"Repository"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","kind":"class","full_name":"Name::Repository","name":"Repository"},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Registry","kind":"class","full_name":"Name::Registry","name":"Registry"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"name/digest.cr","line_number":7,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DIGEST_CHARS","name":"DIGEST_CHARS","value":"\"sh:0123456789abcdef\"","doc":"These have the form: sha256:<hex string>","summary":"<p>These have the form: sha256:&lt;hex string></p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":"Stores a docker repository digest in a structured form","summary":"<p>Stores a docker repository digest in a structured form</p>","class_methods":[],"constructors":[{"id":"new(name:String,strict=true)-class-method","html_id":"new(name:String,strict=true)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":""}],"args_string":"(name : String, strict = <span class=\"n\">true</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L13","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @digest == (other.@digest)\nelse\n  return false\nend\nif @strict == (other.@strict)\nelse\n  return false\nend\ntrue\n"}},{"id":"as_repository:Name::Repository-instance-method","html_id":"as_repository:Name::Repository-instance-method","name":"as_repository","doc":"Construct a new Repository object from the string representation\nour parent class (Repository) produces.  This is a convenience\nmethod to allow consumers to stringify the repository portion of\na tag or digest without their own format string.\nWe have already validated, and we don't persist strictness.","summary":"<p>Construct a new Repository object from the string representation our parent class (Repository) produces.</p>","abstract":false,"args":[],"args_string":" : Name::Repository","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L42","def":{"name":"as_repository","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@repo"}},{"id":"digest:String-instance-method","html_id":"digest:String-instance-method","name":"digest","doc":"returns the digest component of the Digest","summary":"<p>returns the digest component of the Digest</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L51","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@digest"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @digest.hash(hasher)\nhasher = @strict.hash(hasher)\nhasher\n"}},{"id":"identifier:String-instance-method","html_id":"identifier:String-instance-method","name":"identifier","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L46","def":{"name":"identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@digest"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L55","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{super()}@#{@digest}\""}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/digest.cr#L33","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Reference","path":"Name/Reference.html","kind":"module","full_name":"Name::Reference","name":"Reference","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"name/ref.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":null,"summary":null,"class_methods":[{"id":"parse_reference(str:String,strict=false)-class-method","html_id":"parse_reference(str:String,strict=false)-class-method","name":"parse_reference","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"args_string":"(str : String, strict = <span class=\"n\">false</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr#L14","def":{"name":"parse_reference","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[Name::Tag, Name::Digest].each_with_index do |cls, _|\n  begin\n    return cls.new(str)\n  rescue ex\n  end\nend\nraise(Exception.new(\"'#{str}' is not a valid Tag or Digest\"))\n"}}],"constructors":[],"instance_methods":[{"id":"as_repository:Repository-instance-method","html_id":"as_repository:Repository-instance-method","name":"as_repository","doc":"Context accesses the Repository context of the reference.","summary":"<p>Context accesses the Repository context of the reference.</p>","abstract":true,"args":[],"args_string":" : Repository","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr#L6","def":{"name":"as_repository","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Repository","visibility":"Public","body":""}},{"id":"identifier:String-instance-method","html_id":"identifier:String-instance-method","name":"identifier","doc":"Identifier accesses the type-specific portion of the reference.","summary":"<p>Identifier accesses the type-specific portion of the reference.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr#L8","def":{"name":"identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Name is the fully-qualified reference name.","summary":"<p>Name is the fully-qualified reference name.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr#L10","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"scope(action:String):String-instance-method","html_id":"scope(action:String):String-instance-method","name":"scope","doc":"Scope is the scope needed to access this reference.","summary":"<p>Scope is the scope needed to access this reference.</p>","abstract":true,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"args_string":"(action : String) : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/ref.cr#L12","def":{"name":"scope","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/References","path":"Name/References.html","kind":"alias","full_name":"Name::References","name":"References","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"name/name.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/name.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"Name::Repository+","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Registry","path":"Name/Registry.html","kind":"class","full_name":"Name::Registry","name":"Registry","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"name/registry.cr","line_number":15,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","kind":"class","full_name":"Name::Repository","name":"Repository"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":"Stores a docker registry name in a structured form.","summary":"<p>Stores a docker registry name in a structured form.</p>","class_methods":[],"constructors":[{"id":"new(name,insecure=false,strict=true)-class-method","html_id":"new(name,insecure=false,strict=true)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"insecure","doc":null,"default_value":"false","external_name":"insecure","restriction":""},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":""}],"args_string":"(name, insecure = <span class=\"n\">false</span>, strict = <span class=\"n\">true</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L18","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"insecure","doc":null,"default_value":"false","external_name":"insecure","restriction":""},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, insecure, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @registry == (other.@registry)\nelse\n  return false\nend\nif @insecure == (other.@insecure)\nelse\n  return false\nend\nif @strict == (other.@strict)\nelse\n  return false\nend\ntrue\n"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @registry.hash(hasher)\nhasher = @insecure.hash(hasher)\nhasher = @strict.hash(hasher)\nhasher\n"}},{"id":"insecure:Bool-instance-method","html_id":"insecure:Bool-instance-method","name":"insecure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L16","def":{"name":"insecure","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@insecure"}},{"id":"reg_name-instance-method","html_id":"reg_name-instance-method","name":"reg_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L59","def":{"name":"reg_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@registry.blank? ? DEFAULT_REGISTRY : @registry"}},{"id":"registry:String-instance-method","html_id":"registry:String-instance-method","name":"registry","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L16","def":{"name":"registry","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@registry"}},{"id":"rfc1918?-instance-method","html_id":"rfc1918?-instance-method","name":"rfc1918?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L65","def":{"name":"rfc1918?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ip_str = (reg_name.split(\":\"))[0]\nip = Net::IP.parse(ip_str)\nif ip.nil?\n  return false\nelse\n  RFC1918_CIDR.each do |cidr|\n    _, net = Net.parse_cidr(cidr)\n    if net\n      if net.contains?(ip)\n        return true\n      end\n    end\n  end\nend\nfalse\n"}},{"id":"scheme-instance-method","html_id":"scheme-instance-method","name":"scheme","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L36","def":{"name":"scheme","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"re_local = /.*\\.local(?:host)?(?::\\d{1,5})?$/\nre_loopback = /127\\.0\\.0\\.1/\nre_ipv6_loopback = /::1/\ncase\nwhen insecure\n  \"http\"\nwhen rfc1918?\n  \"http\"\nwhen @registry.starts_with?(\"localhost:\")\n  \"http\"\nwhen re_local.match(@registry)\n  \"http\"\nwhen re_loopback.match(@registry)\n  \"http\"\nwhen re_ipv6_loopback.match(@registry)\n  \"http\"\nelse\n  \"https\"\nend\n"}},{"id":"scope(action:String)-instance-method","html_id":"scope(action:String)-instance-method","name":"scope","doc":null,"summary":null,"abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"args_string":"(action : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L31","def":{"name":"scope","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"registry:catalog:*\""}},{"id":"strict:Bool-instance-method","html_id":"strict:Bool-instance-method","name":"strict","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L16","def":{"name":"strict","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@strict"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/registry.cr#L55","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reg_name"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","path":"Name/Repository.html","kind":"class","full_name":"Name::Repository","name":"Repository","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Name/Registry","kind":"class","full_name":"Name::Registry","name":"Registry"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/Registry","kind":"class","full_name":"Name::Registry","name":"Registry"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"name/repository.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_NAMESPACE","name":"DEFAULT_NAMESPACE","value":"\"library\"","doc":null,"summary":null},{"id":"REPOSITORY_CHARS","name":"REPOSITORY_CHARS","value":"\"abcdefghijklmnopqrstuvwxyz0123456789_-./\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/Digest","kind":"class","full_name":"Name::Digest","name":"Digest"},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Tag","kind":"class","full_name":"Name::Tag","name":"Tag"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":"Stores a docker repository name in a structured form.","summary":"<p>Stores a docker repository name in a structured form.</p>","class_methods":[],"constructors":[{"id":"new(name:String,strict=false)-class-method","html_id":"new(name:String,strict=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"args_string":"(name : String, strict = <span class=\"n\">false</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L12","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @repository == (other.@repository)\nelse\n  return false\nend\nif @strict == (other.@strict)\nelse\n  return false\nend\ntrue\n"}},{"id":"as_repository-instance-method","html_id":"as_repository-instance-method","name":"as_repository","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L71","def":{"name":"as_repository","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @repository.hash(hasher)\nhasher = @strict.hash(hasher)\nhasher\n"}},{"id":"identifier:String-instance-method","html_id":"identifier:String-instance-method","name":"identifier","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L67","def":{"name":"identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@repository"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L40","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"base = reg_name\nif !base.blank?\n  \"#{base}/#{repo_str}\"\nelse\n  repo_str\nend\n"}},{"id":"registry:Name::Registry-instance-method","html_id":"registry:Name::Registry-instance-method","name":"registry","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Name::Registry","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L58","def":{"name":"registry","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reg"}},{"id":"repo_str-instance-method","html_id":"repo_str-instance-method","name":"repo_str","doc":"Returns the repository component of the Repository","summary":"<p>Returns the repository component of the Repository</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L50","def":{"name":"repo_str","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if implicit_namespace?\n  \"#{DEFAULT_NAMESPACE}/#{@repository}\"\nelse\n  @repository\nend"}},{"id":"scope(action)-instance-method","html_id":"scope(action)-instance-method","name":"scope","doc":"scope returns the scope required to perform the given action on the registry.","summary":"<p>scope returns the scope required to perform the given action on the registry.</p>","abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":""}],"args_string":"(action)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L63","def":{"name":"scope","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"repository:#{repo_str}:#{action}\""}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns the name from which the Repository was dervied.","summary":"<p>Returns the name from which the Repository was dervied.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/repository.cr#L36","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Tag","path":"Name/Tag.html","kind":"class","full_name":"Name::Tag","name":"Tag","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","kind":"class","full_name":"Name::Repository","name":"Repository"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Name/Repository","kind":"class","full_name":"Name::Repository","name":"Repository"},{"html_id":"github.com/naqvis/containerregistry.cr/Name/Registry","kind":"class","full_name":"Name::Registry","name":"Registry"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"name/tag.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_TAG","name":"DEFAULT_TAG","value":"\"latest\"","doc":null,"summary":null},{"id":"TAG_CHARS","name":"TAG_CHARS","value":"\"abcdefghijklmnopqrstuvwxyz0123456789_-.ABCDEFGHIJKLMNOPQRSTUVWXYZ\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Name","kind":"module","full_name":"Name","name":"Name"},"doc":"Stores a docker repository tag in a structured form.","summary":"<p>Stores a docker repository tag in a structured form.</p>","class_methods":[],"constructors":[{"id":"new(name:String,strict=false)-class-method","html_id":"new(name:String,strict=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"args_string":"(name : String, strict = <span class=\"n\">false</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L15","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"false","external_name":"strict","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @tag == (other.@tag)\nelse\n  return false\nend\nif @strict == (other.@strict)\nelse\n  return false\nend\ntrue\n"}},{"id":"as_repository:Name::Repository-instance-method","html_id":"as_repository:Name::Repository-instance-method","name":"as_repository","doc":"Construct a new Repository object from the string representation\nour parent class (Repository) produces.  This is a convenience\nmethod to allow consumers to stringify the repository portion of\na tag or digest without their own format string.\nWe have already validated, and we don't persist strictness.","summary":"<p>Construct a new Repository object from the string representation our parent class (Repository) produces.</p>","abstract":false,"args":[],"args_string":" : Name::Repository","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L63","def":{"name":"as_repository","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@repo"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @tag.hash(hasher)\nhasher = @strict.hash(hasher)\nhasher\n"}},{"id":"identifier-instance-method","html_id":"identifier-instance-method","name":"identifier","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L45","def":{"name":"identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tag"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L49","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{super()}:#{tag}\""}},{"id":"scope(action:String)-instance-method","html_id":"scope(action:String)-instance-method","name":"scope","doc":"scope returns teh scope required to perform the given action on the tag.","summary":"<p>scope returns teh scope required to perform the given action on the tag.</p>","abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"args_string":"(action : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L54","def":{"name":"scope","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(action)"}},{"id":"tag-instance-method","html_id":"tag-instance-method","name":"tag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L37","def":{"name":"tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag.blank? ? DEFAULT_TAG : @tag"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/name/tag.cr#L41","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/Net","path":"Net.html","kind":"module","full_name":"Net","name":"Net","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"net/base.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr"},{"filename":"net/parser.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr"},{"filename":"net/ip.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"BIG","name":"BIG","value":"16777215","doc":"Bigger than we need, not too big to worry about overflow","summary":"<p>Bigger than we need, not too big to worry about overflow</p>"},{"id":"CLASS_A_MASK","name":"CLASS_A_MASK","value":"Net.ipv4_mask(255, 0, 0, 0)","doc":"Default route masks for IPv4","summary":"<p>Default route masks for IPv4</p>"},{"id":"CLASS_B_MASK","name":"CLASS_B_MASK","value":"Net.ipv4_mask(255, 255, 0, 0)","doc":null,"summary":null},{"id":"CLASS_C_MASK","name":"CLASS_C_MASK","value":"Net.ipv4_mask(255, 255, 255, 0)","doc":null,"summary":null},{"id":"IPV4_ALLROUTER","name":"IPV4_ALLROUTER","value":"ipv4(224, 0, 0, 2)","doc":"all systems","summary":"<p>all systems</p>"},{"id":"IPV4_ALLSYS","name":"IPV4_ALLSYS","value":"ipv4(224, 0, 0, 1)","doc":"limited broadcast","summary":"<p>limited broadcast</p>"},{"id":"IPV4_BCAST","name":"IPV4_BCAST","value":"ipv4(255, 255, 255, 255)","doc":"Well-known IPv4 addresses","summary":"<p>Well-known IPv4 addresses</p>"},{"id":"IPV4_ZERO","name":"IPV4_ZERO","value":"ipv4(0, 0, 0, 0)","doc":"ALL ROUTERS","summary":"<p>ALL ROUTERS</p>"},{"id":"IPV4LEN","name":"IPV4LEN","value":"4","doc":"IP address lenghts in bytes","summary":"<p>IP address lenghts in bytes</p>"},{"id":"IPV6_INTERFACE_LOCAL_ALL_NODES","name":"IPV6_INTERFACE_LOCAL_ALL_NODES","value":"IP[255, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]","doc":null,"summary":null},{"id":"IPV6_LINK_LOCAL_ALL_NODES","name":"IPV6_LINK_LOCAL_ALL_NODES","value":"IP[255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]","doc":null,"summary":null},{"id":"IPV6_LINK_LOCAL_ALL_ROUTERS","name":"IPV6_LINK_LOCAL_ALL_ROUTERS","value":"IP[255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]","doc":null,"summary":null},{"id":"IPV6_LOOPBACK","name":"IPV6_LOOPBACK","value":"IP[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]","doc":null,"summary":null},{"id":"IPV6_UNSPECIFIED","name":"IPV6_UNSPECIFIED","value":"IP[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","doc":null,"summary":null},{"id":"IPV6_ZERO","name":"IPV6_ZERO","value":"IP[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","doc":"Well-known IPv6 addresses","summary":"<p>Well-known IPv6 addresses</p>"},{"id":"IPV6LEN","name":"IPV6LEN","value":"16","doc":null,"summary":null},{"id":"V4_IN_V6PREFIX","name":"V4_IN_V6PREFIX","value":"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255] of Byte","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"all_ff?(b:Bytes)-instance-method","html_id":"all_ff?(b:Bytes)-instance-method","name":"all_ff?","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(b : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L73","def":{"name":"all_ff?","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.all? do |a|\n  a == 255\nend"}},{"id":"cidr_mask(ones:Int,bits:Int):IPMask?-instance-method","html_id":"cidr_mask(ones:Int,bits:Int):IPMask?-instance-method","name":"cidr_mask","doc":"cidr_mask returns an IPMask consisting of `ones' 1 bits\nfollowed by 0s up to a total length of `bits' bits.\nFor a mask of this form, cidr_mask is the inverse of IPMask.Size.","summary":"<p>cidr_mask returns an IPMask consisting of `ones' 1 bits followed by 0s up to a total length of `bits' bits.</p>","abstract":false,"args":[{"name":"ones","doc":null,"default_value":"","external_name":"ones","restriction":"Int"},{"name":"bits","doc":null,"default_value":"","external_name":"bits","restriction":"Int"}],"args_string":"(ones : Int, bits : Int) : IPMask?","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L418","def":{"name":"cidr_mask","args":[{"name":"ones","doc":null,"default_value":"","external_name":"ones","restriction":"Int"},{"name":"bits","doc":null,"default_value":"","external_name":"bits","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IPMask | ::Nil","visibility":"Public","body":"if (bits != (8 * IPV4LEN)) && (bits != (8 * IPV6LEN))\n  return nil\nend\nif ones < 0 || ones > bits\n  return nil\nend\nl = bits // 8\nm = IPMask.new(l)\nn = ones\n0.upto(l - 1) do |i|\n  if n >= 8\n    m[i] = 255_u8\n    n = n - 8\n    next\n  end\n  m[i] = ~(255 >> n).to_u8\n  n = 0\nend\nm\n"}},{"id":"dtoi(s:String)-instance-method","html_id":"dtoi(s:String)-instance-method","name":"dtoi","doc":"decimal to integer, returns number, characters consumed, success","summary":"<p>decimal to integer, returns number, characters consumed, success</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L130","def":{"name":"dtoi","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = i = 0\nwhile (i < s.size && '0' <= s[i]) && s[i] <= '9'\n  n = (n * 10) + (s[i] - '0')\n  if n >= BIG\n    return {BIG, i, false}\n  end\n  i = i + 1\nend\nif i == 0\n  return {0, 0, false}\nend\n{n, i, true}\n"}},{"id":"ipv4(a:Byte,b:Byte,c:Byte,d:Byte):IP-instance-method","html_id":"ipv4(a:Byte,b:Byte,c:Byte,d:Byte):IP-instance-method","name":"ipv4","doc":"ipv4 returns the IP address (in 16-byte form) of the\nipv4 address a.b.c.d.","summary":"<p>ipv4 returns the IP address (in 16-byte form) of the ipv4 address a.b.c.d.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Byte"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Byte"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Byte"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Byte"}],"args_string":"(a : Byte, b : Byte, c : Byte, d : Byte) : IP","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L389","def":{"name":"ipv4","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Byte"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Byte"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Byte"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Byte"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP","visibility":"Public","body":"ip = IP.new(IPV6LEN)\nV4_IN_V6PREFIX.size.times do |i|\n  ip[i] = V4_IN_V6PREFIX[i]\nend\nip[12] = a\nip[13] = b\nip[14] = c\nip[15] = d\nip\n"}},{"id":"ipv4_mask(a:Byte,b:Byte,c:Byte,d:Byte):IPMask-instance-method","html_id":"ipv4_mask(a:Byte,b:Byte,c:Byte,d:Byte):IPMask-instance-method","name":"ipv4_mask","doc":"IPv4Mask returns the IP mask (in 4-byte form) of the\nIPv4 mask a.b.c.d.","summary":"<p>IPv4Mask returns the IP mask (in 4-byte form) of the IPv4 mask a.b.c.d.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Byte"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Byte"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Byte"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Byte"}],"args_string":"(a : Byte, b : Byte, c : Byte, d : Byte) : IPMask","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L404","def":{"name":"ipv4_mask","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Byte"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Byte"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Byte"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Byte"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IPMask","visibility":"Public","body":"mask = IPMask.new(IPV4LEN)\nmask[0] = a\nmask[1] = b\nmask[2] = c\nmask[3] = d\nmask\n"}},{"id":"parse_cidr(s:String)-instance-method","html_id":"parse_cidr(s:String)-instance-method","name":"parse_cidr","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L449","def":{"name":"parse_cidr","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = s.index('/')\nif (i = idx)\n  addr, mask = s[0, i], s[(i + 1)..]\n  iplen = IPV4LEN\n  ip = IP.parse_ipv4(addr)\n  if ip.nil?\n    iplen = IPV6LEN\n    ip = IP.parse_ipv6(addr)\n  else\n    n, i, ok = dtoi(mask)\n    if (((ip.nil? || (!ok)) || (i != mask.size)) || n < 0) || n > (8 * iplen)\n      return {nil, nil}\n    else\n      m = cidr_mask(n, 8 * iplen)\n      if m.nil?\n        return {ip, nil}\n      else\n        nip = ip.mask(m)\n        if nip.nil?\n          return {ip, nil}\n        else\n          return {ip, IPNet.new(ip: nip, mask: m)}\n        end\n      end\n    end\n  end\nend\nraise(\"invalid CIDR address. #{s}\")\n"}},{"id":"simple_mask_length(mask:IPMask)-instance-method","html_id":"simple_mask_length(mask:IPMask)-instance-method","name":"simple_mask_length","doc":"If mask is a sequence of 1 bits followed by 0 bits,\nreturns the number of 1 bits.","summary":"<p>If mask is a sequence of 1 bits followed by 0 bits, returns the number of 1 bits.</p>","abstract":false,"args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"IPMask"}],"args_string":"(mask : IPMask)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L41","def":{"name":"simple_mask_length","args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"IPMask"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = 0\nmask.each_with_index do |v, i|\n  if v == 255\n    n = n + 8\n    next\n  end\n  while (v & 128) != 0\n    n = n + 1\n    v = v << 1\n  end\n  if v != 0\n    return -1\n  end\n  i = i + 1\n  while i < mask.size\n    if mask[i] != 0\n      return -1\n    end\n    i = i + 1\n  end\n  break\nend\nn\n"}},{"id":"to_hex(i:UInt32)-instance-method","html_id":"to_hex(i:UInt32)-instance-method","name":"to_hex","doc":"convert i to a hexadecimal string. Leading zeros are not printed.","summary":"<p>convert i to a hexadecimal string.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"UInt32"}],"args_string":"(i : UInt32)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L78","def":{"name":"to_hex","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hex_digit = \"0123456789abcdef\"\nif i == 0\n  return \"0\"\nend\nstr = String.build do |dst|\n  7.downto(0) do |j|\n    v = i >> (j * 4).to_u32\n    if v > 0\n      dst << hex_digit[v & 15]\n    end\n  end\nend\nstr\n"}},{"id":"ubtoa(dst:Bytes,start:Int,v:UInt8)-instance-method","html_id":"ubtoa(dst:Bytes,start:Int,v:UInt8)-instance-method","name":"ubtoa","doc":"ubtoa encodes the string form of the integer v to dst and\nreturns the number of bytes written to dst. The caller must\nensure that dst has sufficient length","summary":"<p>ubtoa encodes the string form of the integer v to dst and returns the number of bytes written to dst.</p>","abstract":false,"args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"UInt8"}],"args_string":"(dst : Bytes, start : Int, v : UInt8)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L93","def":{"name":"ubtoa","args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":"Bytes"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if v < 10\n  dst[start] = v + '0'.ord\n  return 1\nelse\n  if v < 100\n    dst[start + 1] = (v % 10) + '0'.ord\n    dst[start] = (v // 10) + '0'.ord\n    return 2\n  end\nend\ndst[start + 2] = (v % 10) + '0'.ord\ndst[start + 1] = ((v // 10) % 10) + '0'.ord\ndst[start] = (v // 100) + '0'.ord\n3\n"}},{"id":"uitoa(val:UInt)-instance-method","html_id":"uitoa(val:UInt)-instance-method","name":"uitoa","doc":"Convert unsigned integer to decimal string.","summary":"<p>Convert unsigned integer to decimal string.</p>","abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"UInt"}],"args_string":"(val : UInt)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L110","def":{"name":"uitoa","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"UInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if val == 0\n  return \"0\"\nend\nbuf = Bytes.new(20)\ni = buf.size - 1\nwhile val >= 10\n  q = val // 10\n  buf[i] = (('0'.ord + val) - (q * 10)).to_u8\n  i = i - 1\n  val = q\nend\nbuf[i] = ('0'.ord + val).to_u8\nString.new(buf[i..])\n"}},{"id":"xtoi(s:String)-instance-method","html_id":"xtoi(s:String)-instance-method","name":"xtoi","doc":"Hexadecimal to integer. Returns number, characters consumed, success","summary":"<p>Hexadecimal to integer.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L142","def":{"name":"xtoi","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = i = 0\nwhile i < s.size\n  if '0' <= s[i] && s[i] <= '9'\n    n = n * 16\n    n = n + (s[i] - '0').to_i\n  else\n    if 'a' <= s[i] && s[i] <= 'f'\n      n = n * 16\n      n = n + ((s[i] - 'a').to_i + 10)\n    else\n      if 'A' <= s[i] && s[i] <= 'F'\n        n = n * 16\n        n = n + ((s[i] - 'A').to_i + 10)\n      else\n        break\n      end\n    end\n  end\n  if n >= BIG\n    return {0, i, false}\n  end\n  i = i + 1\nend\nif i == 0\n  return {0, i, false}\nend\n{n, i, true}\n"}},{"id":"zeros?(p:IP)-instance-method","html_id":"zeros?(p:IP)-instance-method","name":"zeros?","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"IP"}],"args_string":"(p : IP)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/parser.cr#L69","def":{"name":"zeros?","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"IP"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"p.all? do |a|\n  a == 0\nend"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/Net/Byte","path":"Net/Byte.html","kind":"alias","full_name":"Net::Byte","name":"Byte","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"net/ip.cr","line_number":304,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Net/IP","path":"Net/IP.html","kind":"class","full_name":"Net::IP","name":"IP","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPBase","kind":"class","full_name":"Net::IPBase","name":"IPBase"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPBase","kind":"class","full_name":"Net::IPBase","name":"IPBase"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"net/ip.cr","line_number":18,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MAX_IPV4_STRING_LEN","name":"MAX_IPV4_STRING_LEN","value":"\"255.255.255.255\".size","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"},"doc":"An IP is a single IP address, a slice of bytes.\nFunctions in this package accept either 4-byte (IPv4)\nor 16-byte (IPv6) slices as input.\n\nNote that in this documentation, referring to an\nIP address as an IPv4 address or an IPv6 address\nis a semantic property of the address, not just the\nlength of the byte slice: a 16-byte slice can still\nbe an IPv4 address.","summary":"<p>An IP is a single IP address, a slice of bytes.</p>","class_methods":[{"id":"parse(s:String)-class-method","html_id":"parse(s:String)-class-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L27","def":{"name":"parse","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if s.blank?\n  return nil\nend\ns.chars.each do |c|\n  case c\n  when '.'\n    return parse_ipv4(s)\n  when ':'\n    return parse_ipv6(s)\n  end\nend\nnil\n"}}],"constructors":[],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L103","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size != other.size\n  if (size == IPV4LEN) && (other.size == IPV6LEN)\n    return self._buffer == other[12..]\n  else\n    if (other.size == IPV4LEN) && (size == IPV6LEN)\n      return other._buffer == self[12..]\n    else\n      return false\n    end\n  end\nend\nself._buffer == other._buffer\n"}},{"id":"default_mask-instance-method","html_id":"default_mask-instance-method","name":"default_mask","doc":"default_mask returns the default IP mask for the IP address ip.\nOnly IPv4 addresses have default masks; default_mask returns\nnil if ip is not a valid IPv4 address.","summary":"<p>default_mask returns the default IP mask for the IP address ip.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L91","def":{"name":"default_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (ip = to4) && ip.nil?\n  return nil\nend\ncase\nwhen self[0] < 128\n  CLASS_A_MASK\nwhen self[0] < 192\n  CLASS_B_MASK\nelse\n  CLASS_C_MASK\nend\n"}},{"id":"interface_local_multicast?-instance-method","html_id":"interface_local_multicast?-instance-method","name":"interface_local_multicast?","doc":"reports whether ip is an interface-local multicast address.","summary":"<p>reports whether ip is an interface-local multicast address.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L63","def":{"name":"interface_local_multicast?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((size == IPV6LEN) && (self[0] == 255)) && ((self[1] & 255) == 1)"}},{"id":"loopback?-instance-method","html_id":"loopback?-instance-method","name":"loopback?","doc":"reports whether ip is a loopback address.","summary":"<p>reports whether ip is a loopback address.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L47","def":{"name":"loopback?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (ip4 = to4)\n  return ip4[0] == 127\nend\nself == IPV6_LOOPBACK\n"}},{"id":"mask(m:IPMask)-instance-method","html_id":"mask(m:IPMask)-instance-method","name":"mask","doc":"mask returns the result of masking the IP address ip with mask.","summary":"<p>mask returns the result of masking the IP address ip with mask.</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"IPMask"}],"args_string":"(m : IPMask)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L117","def":{"name":"mask","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"IPMask"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((m.size == IPV6LEN) && (size == IPV4LEN)) && (Net.all_ff?(m[0, 12]))\n  m = m[12..]\nend\nif ((m.size == IPV4LEN) && (size == IPV6LEN)) && (self[0, 12].to_a == V4_IN_V6PREFIX)\n  self._buffer=(self[12..])\nend\nn = size\nif n != m.size\n  return nil\nend\nres = IP.new(n)\n0.upto(n - 1) do |i|\n  res[i] = self[i] & m[i]\nend\nres\n"}},{"id":"multicast?-instance-method","html_id":"multicast?-instance-method","name":"multicast?","doc":"reports whether ip is a multicast address.","summary":"<p>reports whether ip is a multicast address.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L55","def":{"name":"multicast?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (ip4 = to4)\n  return (ip4[0] & 240) == 224\nend\n(size == IPV6LEN) && (self[0] == 255)\n"}},{"id":"to16-instance-method","html_id":"to16-instance-method","name":"to16","doc":"converts the IP address ip to a 16-byte representation.\nif ip is not an IP address (it is the wrong length), returns nil","summary":"<p>converts the IP address ip to a 16-byte representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L82","def":{"name":"to16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size == IPV4LEN\n  return Net.ipv4(self[0], self[1], self[2], self[3])\nend\nif size == IPV6LEN\n  return self\nend\nnil\n"}},{"id":"to4-instance-method","html_id":"to4-instance-method","name":"to4","doc":"converts the IPv4 address ip to a 4-byte representation.\nIf ip is not an IPV4 address, returns nil","summary":"<p>converts the IPv4 address ip to a 4-byte representation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L69","def":{"name":"to4","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size == IPV4LEN\n  return self\nend\nif (((size == IPV6LEN) && self[0, 10].all? do |b|\n  b == 0\nend) && (self[10] == 255)) && (self[11] == 255)\n  self._buffer=(self[12...16])\n  return self\nend\nnil\n"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L237","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"p = _buffer\nif size == 0\n  return \"<nil>\"\nend\nif (p4 = to4) && (p4.size == IPV4LEN)\n  b = Bytes.new(MAX_IPV4_STRING_LEN)\n  n = Net.ubtoa(b, 0, p4[0])\n  b[n] = '.'.ord.to_u8\n  n = n + 1\n  n = n + (Net.ubtoa(b, n, p4[1]))\n  b[n] = '.'.ord.to_u8\n  n = n + 1\n  n = n + (Net.ubtoa(b, n, p4[2]))\n  b[n] = '.'.ord.to_u8\n  n = n + 1\n  n = n + (Net.ubtoa(b, n, p4[3]))\n  return String.new(b[0, n])\nend\nif p.size == IPV6LEN\n  return \"?\" + hexstring\nend\ne0 = -1\ne1 = -1\ni = 0\nwhile i < IPV6LEN\n  j = i\n  while (j < IPV6LEN && (p[j] == 0)) && (p[j + 1] == 0)\n    j = j + 2\n  end\n  if j > i && (j - i) > (e1 - e0)\n    e0 = i\n    e1 = j\n    i = j\n  end\n  i = i + 2\nend\nif (e1 - e0) <= 2\n  e0 = -1\n  e1 = -1\nend\nstr = String.build do |s|\n  i = 0\n  while i < IPV6LEN\n    if i == e0\n      s << \"::\"\n      i = e1\n      if i >= IPV6LEN\n        break\n      end\n    else\n      if i > 0\n        s << \":\"\n      end\n    end\n    s << (Net.to_hex((p[i].to_u32 << 8) | p[i + 1].to_u32))\n    i = i + 2\n  end\nend\nstr\n"}},{"id":"unspecified?-instance-method","html_id":"unspecified?-instance-method","name":"unspecified?","doc":"reports whether ip is an unspecified address, either\nthe IPV4 address 0.0.0.0 or the IPV6 address ::","summary":"<p>reports whether ip is an unspecified address, either the IPV4 address 0.0.0.0 or the IPV6 address ::</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L42","def":{"name":"unspecified?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self == IPV4_ZERO) || (self == IPV6_UNSPECIFIED)"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPBase","path":"Net/IPBase.html","kind":"class","full_name":"Net::IPBase","name":"IPBase","abstract":true,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"net/base.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/Net/IP","kind":"class","full_name":"Net::IP","name":"IP"},{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPMask","kind":"class","full_name":"Net::IPMask","name":"IPMask"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"},"doc":null,"summary":null,"class_methods":[{"id":"empty-class-method","html_id":"empty-class-method","name":"empty","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L13","def":{"name":"empty","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(Pointer(UInt8).null, 0)"}}],"constructors":[{"id":"new(ptr:Pointer(UInt8),size:Int)-class-method","html_id":"new(ptr:Pointer(UInt8),size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ptr","doc":null,"default_value":"","external_name":"ptr","restriction":"Pointer(UInt8)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(ptr : Pointer(UInt8), size : Int)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L17","def":{"name":"new","args":[{"name":"ptr","doc":null,"default_value":"","external_name":"ptr","restriction":"Pointer(UInt8)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ptr, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L21","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pointer = Pointer(UInt8).malloc(size)\nnew(pointer, size)\n"}},{"id":"new(size:Int,&block)-class-method","html_id":"new(size:Int,&amp;block)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L26","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"pointer = Pointer.malloc(size) do |i|\n  yield i.to_u8\nend\nnew(pointer, size)\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @buffer == (other.@buffer)\nelse\n  return false\nend\ntrue\n"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @buffer.hash(hasher)\nhasher\n"}}],"macros":[{"id":"[](*nums)-macro","html_id":"[](*nums)-macro","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"args_string":"(*nums)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L5","def":{"name":"[]","args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"      \n%ptr\n = Pointer(UInt8).malloc(\n{{ nums.size }}\n)\n        \n{% for arg, i in nums %}\n        %ptr[{{ i }}] = UInt8.new({{ arg }})\n        {% end %}\n\n      IP.new(\n%ptr\n, \n{{ nums.size }}\n )\n    \n"}},{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/base.cr#L42","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @buffer.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPMask","path":"Net/IPMask.html","kind":"class","full_name":"Net::IPMask","name":"IPMask","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPBase","kind":"class","full_name":"Net::IPBase","name":"IPBase"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPBase","kind":"class","full_name":"Net::IPBase","name":"IPBase"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"net/ip.cr","line_number":307,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"},"doc":"IPMask is an IP address","summary":"<p>IPMask is an IP address</p>","class_methods":[{"id":"parse(s:String)-class-method","html_id":"parse(s:String)-class-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L317","def":{"name":"parse","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ip = IP.parse(s)\nif ip\n  res = IPMask.new(ip.size)\n  res._buffer=(ip._buffer)\n  return res\nend\nnil\n"}}],"constructors":[],"instance_methods":[{"id":"mask_size-instance-method","html_id":"mask_size-instance-method","name":"mask_size","doc":"mask_size returns the number of leading ones and total bits in the mask.\nIf the mask is not in the canonical form--ones followed by zeros--then\nmask_size returns 0, 0.","summary":"<p>mask_size returns the number of leading ones and total bits in the mask.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L311","def":{"name":"mask_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ones, bits = Net.simple_mask_length(self), size * 8\nif ones == -1\n  return {0, 0}\nend\n{ones, bits}\n"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"returns the hexadecimal form of mask, with no punctuation.","summary":"<p>returns the hexadecimal form of mask, with no punctuation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L328","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if size == 0\n  return \"<nil>\"\nend\nhexstring\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/Net/IPNet","path":"Net/IPNet.html","kind":"class","full_name":"Net::IPNet","name":"IPNet","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"net/ip.cr","line_number":336,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/Net","kind":"module","full_name":"Net","name":"Net"},"doc":"An IPNet represents an IP network","summary":"<p>An IPNet represents an IP network</p>","class_methods":[],"constructors":[{"id":"new(ip,mask)-class-method","html_id":"new(ip,mask)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ip","doc":null,"default_value":"","external_name":"ip","restriction":""},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":""}],"args_string":"(ip, mask)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L340","def":{"name":"new","args":[{"name":"ip","doc":null,"default_value":"","external_name":"ip","restriction":""},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ip, mask)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"contains?(ip:IP)-instance-method","html_id":"contains?(ip:IP)-instance-method","name":"contains?","doc":"reports whether the network includes ip","summary":"<p>reports whether the network includes ip</p>","abstract":false,"args":[{"name":"ip","doc":null,"default_value":"","external_name":"ip","restriction":"IP"}],"args_string":"(ip : IP)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L344","def":{"name":"contains?","args":[{"name":"ip","doc":null,"default_value":"","external_name":"ip","restriction":"IP"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nn, m = Net.network_number_and_mask(self)\nif (x = ip.to4)\n  ip = x\nend\nl = ip.size\nif l != (Net.len(nn))\n  return false\nend\n0.upto(l - 1) do |i|\n  nv = Net.get_val(nn, i)\n  mv = Net.get_val(m, i)\n  pv = Net.get_val(ip, i)\n  if (nv & mv) != (pv & mv)\n    return false\n  end\nend\ntrue\n"}},{"id":"ip:IP-instance-method","html_id":"ip:IP-instance-method","name":"ip","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IP","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L339","def":{"name":"ip","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP","visibility":"Public","body":"@ip"}},{"id":"mask:IPMask-instance-method","html_id":"mask:IPMask-instance-method","name":"mask","doc":"network number","summary":"<p>network number</p>","abstract":false,"args":[],"args_string":" : IPMask","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L340","def":{"name":"mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IPMask","visibility":"Public","body":"@mask"}},{"id":"network-instance-method","html_id":"network-instance-method","name":"network","doc":"network returns the address's network name, \"ip+net\"","summary":"<p>network returns the address's network name, \"ip+net\"</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L365","def":{"name":"network","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"ip+net\""}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"to_s returns the CIDR notation of n like \"192.0.2.1/24\"\nor \"2001:db8::/48\" as defined in RFC 4632 and RFC 4291.\nIf the mask is not in the canonical form, it returns the\nstring which consists of an IP address, followed by a slash\ncharacter and a mask expressed as hexadecimal form with no\npunctuation like \"198.51.100.1/c000ff00\".","summary":"<p>to_s returns the CIDR notation of n like \"192.0.2.1/24\" or \"2001:db8::/48\" as defined in RFC 4632 and RFC 4291.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/net/ip.cr#L375","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nn, m = Net.network_number_and_mask(self)\nif nn.nil? || m.nil?\n  return \"<nil>\"\nend\nl = Net.simple_mask_length(m)\nif l == -1\n  return (nn.to_s + \"/\") + m.to_s\nend\n(nn.to_s + \"/\") + (Net.uitoa(l.to_u32))\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1","path":"V1.html","kind":"module","full_name":"V1","name":"V1","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/hash.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr"},{"filename":"v1/config.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"},{"filename":"v1/manifest.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"parse_config_file(r:IO)-class-method","html_id":"parse_config_file(r:IO)-class-method","name":"parse_config_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L133","def":{"name":"parse_config_file","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"str = r.gets_to_end\nConfigFile.from_json(str)\n"}},{"id":"parse_index_manifest(r:IO)-class-method","html_id":"parse_index_manifest(r:IO)-class-method","name":"parse_index_manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr#L58","def":{"name":"parse_index_manifest","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IndexManifest.from_json(r.gets_to_end)"}},{"id":"parse_manifest(r:IO)-class-method","html_id":"parse_manifest(r:IO)-class-method","name":"parse_manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr#L54","def":{"name":"parse_manifest","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Manifest.from_json(r.gets_to_end)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache","path":"V1/Cache.html","kind":"module","full_name":"V1::Cache","name":"Cache","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/cache/cache.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr"},{"filename":"v1/cache/fs.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr"},{"filename":"v1/cache/ro.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Cache encapsulates methods to interact with cached layers.","summary":"<p>Cache encapsulates methods to interact with cached layers.</p>","class_methods":[{"id":"image(i:V1::Image,c:Cacher)-class-method","html_id":"image(i:V1::Image,c:Cacher)-class-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"V1::Image"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Cacher"}],"args_string":"(i : V1::Image, c : Cacher)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr#L28","def":{"name":"image","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"V1::Image"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Cacher"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Image.new(i, c)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/Cacher","path":"V1/Cache/Cacher.html","kind":"class","full_name":"V1::Cache::Cacher","name":"Cacher","abstract":true,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/cache/cache.cr","line_number":7,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/FileSystemCache","kind":"class","full_name":"V1::Cache::FileSystemCache","name":"FileSystemCache"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/ReadOnly","kind":"class","full_name":"V1::Cache::ReadOnly","name":"ReadOnly"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache","kind":"module","full_name":"V1::Cache","name":"Cache"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"delete(h:V1::Hash)-instance-method","html_id":"delete(h:V1::Hash)-instance-method","name":"delete","doc":"delete  removes the Layer with the given Hash from the Cache.","summary":"<p>delete  removes the Layer with the given Hash from the Cache.</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr#L25","def":{"name":"delete","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get(h:V1::Hash):V1::Layer-instance-method","html_id":"get(h:V1::Hash):V1::Layer-instance-method","name":"get","doc":"get returns the Layer cached by the given hash, or\nraises NotFound exception if no such layer was found","summary":"<p>get returns the Layer cached by the given hash, or raises NotFound exception if no such layer was found</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : V1::Layer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr#L22","def":{"name":"get","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":""}},{"id":"put(l:V1::Layer):V1::Layer-instance-method","html_id":"put(l:V1::Layer):V1::Layer-instance-method","name":"put","doc":null,"summary":null,"abstract":true,"args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"args_string":"(l : V1::Layer) : V1::Layer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr#L18","def":{"name":"put","args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/FileSystemCache","path":"V1/Cache/FileSystemCache.html","kind":"class","full_name":"V1::Cache::FileSystemCache","name":"FileSystemCache","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/Cacher","kind":"class","full_name":"V1::Cache::Cacher","name":"Cacher"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/Cacher","kind":"class","full_name":"V1::Cache::Cacher","name":"Cacher"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/cache/fs.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache","kind":"module","full_name":"V1::Cache","name":"Cache"},"doc":"Cacher implementation backed by files.","summary":"<p>Cacher implementation backed by files.</p>","class_methods":[],"constructors":[{"id":"new(path)-class-method","html_id":"new(path)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr#L8","def":{"name":"new","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete(h:V1::Hash)-instance-method","html_id":"delete(h:V1::Hash)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr#L28","def":{"name":"delete","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  FileUtils.rm_r(Path[@path, h.to_s].to_s)\nrescue Errno\n  raise(LayerNotFound.new(\"layer was not found\"))\nend"}},{"id":"get(h:V1::Hash)-instance-method","html_id":"get(h:V1::Hash)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr#L22","def":{"name":"get","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  Tarball::Layer.from_file(Path[@path, h.to_s].to_s)\nrescue Errno\n  raise(LayerNotFound.new(\"layer was not found\"))\nend"}},{"id":"put(l:V1::Layer)-instance-method","html_id":"put(l:V1::Layer)-instance-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"args_string":"(l : V1::Layer)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/fs.cr#L11","def":{"name":"put","args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"digest = l.digest\ndiff_id = l.diff_id\nLayer.new(layer: l, path: @path, digest: digest, diff_id: diff_id)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/LayerNotFound","path":"V1/Cache/LayerNotFound.html","kind":"class","full_name":"V1::Cache::LayerNotFound","name":"LayerNotFound","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/cache/cache.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/cache.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache","kind":"module","full_name":"V1::Cache","name":"Cache"},"doc":"Exception raised by get when no layer with given hash is found","summary":"<p>Exception raised by get when no layer with given hash is found</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/ReadOnly","path":"V1/Cache/ReadOnly.html","kind":"class","full_name":"V1::Cache::ReadOnly","name":"ReadOnly","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/Cacher","kind":"class","full_name":"V1::Cache::Cacher","name":"Cacher"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache/Cacher","kind":"class","full_name":"V1::Cache::Cacher","name":"Cacher"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/cache/ro.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Cache","kind":"module","full_name":"V1::Cache","name":"Cache"},"doc":"ReadOnly returns a read-only implementation of the given Cache.\nput and delete operations are a no-op","summary":"<p>ReadOnly returns a read-only implementation of the given Cache.</p>","class_methods":[],"constructors":[{"id":"new(cache)-class-method","html_id":"new(cache)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"cache","doc":null,"default_value":"","external_name":"cache","restriction":""}],"args_string":"(cache)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr#L7","def":{"name":"new","args":[{"name":"cache","doc":null,"default_value":"","external_name":"cache","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(cache)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete(h:V1::Hash)-instance-method","html_id":"delete(h:V1::Hash)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr#L18","def":{"name":"delete","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get(h:V1::Hash)-instance-method","html_id":"get(h:V1::Hash)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr#L14","def":{"name":"get","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache.get(h)"}},{"id":"put(l:V1::Layer)-instance-method","html_id":"put(l:V1::Layer)-instance-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"args_string":"(l : V1::Layer)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/cache/ro.cr#L10","def":{"name":"put","args":[{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":"V1::Layer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Config","path":"V1/Config.html","kind":"struct","full_name":"V1::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/config.cr","line_number":103,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_115:JSON::PullParser)-class-method","html_id":"new(__temp_115:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_115","doc":null,"default_value":"","external_name":"__temp_115","restriction":"::JSON::PullParser"}],"args_string":"(__temp_115 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_115","doc":null,"default_value":"","external_name":"__temp_115","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_115)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L130","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args_escaped:Bool?-instance-method","html_id":"args_escaped:Bool?-instance-method","name":"args_escaped","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"args_escaped","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@args_escaped"}},{"id":"args_escaped=(_args_escaped:Bool?)-instance-method","html_id":"args_escaped=(_args_escaped:Bool?)-instance-method","name":"args_escaped=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_args_escaped","doc":null,"default_value":"","external_name":"_args_escaped","restriction":"Bool | ::Nil"}],"args_string":"(_args_escaped : Bool?)","source_link":null,"def":{"name":"args_escaped=","args":[{"name":"_args_escaped","doc":null,"default_value":"","external_name":"_args_escaped","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@args_escaped = _args_escaped"}},{"id":"attach_stderr:Bool?-instance-method","html_id":"attach_stderr:Bool?-instance-method","name":"attach_stderr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"attach_stderr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@attach_stderr"}},{"id":"attach_stderr=(_attach_stderr:Bool?)-instance-method","html_id":"attach_stderr=(_attach_stderr:Bool?)-instance-method","name":"attach_stderr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_attach_stderr","doc":null,"default_value":"","external_name":"_attach_stderr","restriction":"Bool | ::Nil"}],"args_string":"(_attach_stderr : Bool?)","source_link":null,"def":{"name":"attach_stderr=","args":[{"name":"_attach_stderr","doc":null,"default_value":"","external_name":"_attach_stderr","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attach_stderr = _attach_stderr"}},{"id":"attach_stdin:Bool?-instance-method","html_id":"attach_stdin:Bool?-instance-method","name":"attach_stdin","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"attach_stdin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@attach_stdin"}},{"id":"attach_stdin=(_attach_stdin:Bool?)-instance-method","html_id":"attach_stdin=(_attach_stdin:Bool?)-instance-method","name":"attach_stdin=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_attach_stdin","doc":null,"default_value":"","external_name":"_attach_stdin","restriction":"Bool | ::Nil"}],"args_string":"(_attach_stdin : Bool?)","source_link":null,"def":{"name":"attach_stdin=","args":[{"name":"_attach_stdin","doc":null,"default_value":"","external_name":"_attach_stdin","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attach_stdin = _attach_stdin"}},{"id":"attach_stdou:Bool?-instance-method","html_id":"attach_stdou:Bool?-instance-method","name":"attach_stdou","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"attach_stdou","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@attach_stdou"}},{"id":"attach_stdou=(_attach_stdou:Bool?)-instance-method","html_id":"attach_stdou=(_attach_stdou:Bool?)-instance-method","name":"attach_stdou=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_attach_stdou","doc":null,"default_value":"","external_name":"_attach_stdou","restriction":"Bool | ::Nil"}],"args_string":"(_attach_stdou : Bool?)","source_link":null,"def":{"name":"attach_stdou=","args":[{"name":"_attach_stdou","doc":null,"default_value":"","external_name":"_attach_stdou","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attach_stdou = _attach_stdou"}},{"id":"cmd:Array(String)?-instance-method","html_id":"cmd:Array(String)?-instance-method","name":"cmd","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"cmd","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@cmd"}},{"id":"cmd=(_cmd:Array(String)?)-instance-method","html_id":"cmd=(_cmd:Array(String)?)-instance-method","name":"cmd=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_cmd","doc":null,"default_value":"","external_name":"_cmd","restriction":"Array(String) | ::Nil"}],"args_string":"(_cmd : Array(String)?)","source_link":null,"def":{"name":"cmd=","args":[{"name":"_cmd","doc":null,"default_value":"","external_name":"_cmd","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cmd = _cmd"}},{"id":"domain_name:String?-instance-method","html_id":"domain_name:String?-instance-method","name":"domain_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"domain_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@domain_name"}},{"id":"domain_name=(_domain_name:String?)-instance-method","html_id":"domain_name=(_domain_name:String?)-instance-method","name":"domain_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_domain_name","doc":null,"default_value":"","external_name":"_domain_name","restriction":"String | ::Nil"}],"args_string":"(_domain_name : String?)","source_link":null,"def":{"name":"domain_name=","args":[{"name":"_domain_name","doc":null,"default_value":"","external_name":"_domain_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@domain_name = _domain_name"}},{"id":"entry_point:Array(String)?-instance-method","html_id":"entry_point:Array(String)?-instance-method","name":"entry_point","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"entry_point","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@entry_point"}},{"id":"entry_point=(_entry_point:Array(String)?)-instance-method","html_id":"entry_point=(_entry_point:Array(String)?)-instance-method","name":"entry_point=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_entry_point","doc":null,"default_value":"","external_name":"_entry_point","restriction":"Array(String) | ::Nil"}],"args_string":"(_entry_point : Array(String)?)","source_link":null,"def":{"name":"entry_point=","args":[{"name":"_entry_point","doc":null,"default_value":"","external_name":"_entry_point","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@entry_point = _entry_point"}},{"id":"env:Array(String)?-instance-method","html_id":"env:Array(String)?-instance-method","name":"env","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"env","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@env"}},{"id":"env=(_env:Array(String)?)-instance-method","html_id":"env=(_env:Array(String)?)-instance-method","name":"env=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_env","doc":null,"default_value":"","external_name":"_env","restriction":"Array(String) | ::Nil"}],"args_string":"(_env : Array(String)?)","source_link":null,"def":{"name":"env=","args":[{"name":"_env","doc":null,"default_value":"","external_name":"_env","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@env = _env"}},{"id":"exposed_ports:::Hash(String,JSON::Any)?-instance-method","html_id":"exposed_ports:::Hash(String,JSON::Any)?-instance-method","name":"exposed_ports","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, JSON::Any)?","source_link":null,"def":{"name":"exposed_ports","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, JSON::Any) | ::Nil","visibility":"Public","body":"@exposed_ports"}},{"id":"exposed_ports=(_exposed_ports:::Hash(String,JSON::Any)?)-instance-method","html_id":"exposed_ports=(_exposed_ports:::Hash(String,JSON::Any)?)-instance-method","name":"exposed_ports=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_exposed_ports","doc":null,"default_value":"","external_name":"_exposed_ports","restriction":"::Hash(String, JSON::Any) | ::Nil"}],"args_string":"(_exposed_ports : ::Hash(String, JSON::Any)?)","source_link":null,"def":{"name":"exposed_ports=","args":[{"name":"_exposed_ports","doc":null,"default_value":"","external_name":"_exposed_ports","restriction":"::Hash(String, JSON::Any) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exposed_ports = _exposed_ports"}},{"id":"health_check:HealthConfig?-instance-method","html_id":"health_check:HealthConfig?-instance-method","name":"health_check","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HealthConfig?","source_link":null,"def":{"name":"health_check","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HealthConfig | ::Nil","visibility":"Public","body":"@health_check"}},{"id":"health_check=(_health_check:HealthConfig?)-instance-method","html_id":"health_check=(_health_check:HealthConfig?)-instance-method","name":"health_check=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_health_check","doc":null,"default_value":"","external_name":"_health_check","restriction":"HealthConfig | ::Nil"}],"args_string":"(_health_check : HealthConfig?)","source_link":null,"def":{"name":"health_check=","args":[{"name":"_health_check","doc":null,"default_value":"","external_name":"_health_check","restriction":"HealthConfig | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@health_check = _health_check"}},{"id":"hostname:String?-instance-method","html_id":"hostname:String?-instance-method","name":"hostname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"hostname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@hostname"}},{"id":"hostname=(_hostname:String?)-instance-method","html_id":"hostname=(_hostname:String?)-instance-method","name":"hostname=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_hostname","doc":null,"default_value":"","external_name":"_hostname","restriction":"String | ::Nil"}],"args_string":"(_hostname : String?)","source_link":null,"def":{"name":"hostname=","args":[{"name":"_hostname","doc":null,"default_value":"","external_name":"_hostname","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hostname = _hostname"}},{"id":"image:String?-instance-method","html_id":"image:String?-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@image"}},{"id":"image=(_image:String?)-instance-method","html_id":"image=(_image:String?)-instance-method","name":"image=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_image","doc":null,"default_value":"","external_name":"_image","restriction":"String | ::Nil"}],"args_string":"(_image : String?)","source_link":null,"def":{"name":"image=","args":[{"name":"_image","doc":null,"default_value":"","external_name":"_image","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image = _image"}},{"id":"labels:::Hash(String,String)?-instance-method","html_id":"labels:::Hash(String,String)?-instance-method","name":"labels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, String)?","source_link":null,"def":{"name":"labels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, String) | ::Nil","visibility":"Public","body":"@labels"}},{"id":"labels=(_labels:::Hash(String,String)?)-instance-method","html_id":"labels=(_labels:::Hash(String,String)?)-instance-method","name":"labels=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_labels","doc":null,"default_value":"","external_name":"_labels","restriction":"::Hash(String, String) | ::Nil"}],"args_string":"(_labels : ::Hash(String, String)?)","source_link":null,"def":{"name":"labels=","args":[{"name":"_labels","doc":null,"default_value":"","external_name":"_labels","restriction":"::Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@labels = _labels"}},{"id":"mac_address:String?-instance-method","html_id":"mac_address:String?-instance-method","name":"mac_address","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"mac_address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@mac_address"}},{"id":"mac_address=(_mac_address:String?)-instance-method","html_id":"mac_address=(_mac_address:String?)-instance-method","name":"mac_address=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mac_address","doc":null,"default_value":"","external_name":"_mac_address","restriction":"String | ::Nil"}],"args_string":"(_mac_address : String?)","source_link":null,"def":{"name":"mac_address=","args":[{"name":"_mac_address","doc":null,"default_value":"","external_name":"_mac_address","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mac_address = _mac_address"}},{"id":"network_disabled:Bool?-instance-method","html_id":"network_disabled:Bool?-instance-method","name":"network_disabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"network_disabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@network_disabled"}},{"id":"network_disabled=(_network_disabled:Bool?)-instance-method","html_id":"network_disabled=(_network_disabled:Bool?)-instance-method","name":"network_disabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_network_disabled","doc":null,"default_value":"","external_name":"_network_disabled","restriction":"Bool | ::Nil"}],"args_string":"(_network_disabled : Bool?)","source_link":null,"def":{"name":"network_disabled=","args":[{"name":"_network_disabled","doc":null,"default_value":"","external_name":"_network_disabled","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@network_disabled = _network_disabled"}},{"id":"on_build:Array(String)?-instance-method","html_id":"on_build:Array(String)?-instance-method","name":"on_build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"on_build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@on_build"}},{"id":"on_build=(_on_build:Array(String)?)-instance-method","html_id":"on_build=(_on_build:Array(String)?)-instance-method","name":"on_build=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_on_build","doc":null,"default_value":"","external_name":"_on_build","restriction":"Array(String) | ::Nil"}],"args_string":"(_on_build : Array(String)?)","source_link":null,"def":{"name":"on_build=","args":[{"name":"_on_build","doc":null,"default_value":"","external_name":"_on_build","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_build = _on_build"}},{"id":"open_stdin:Bool?-instance-method","html_id":"open_stdin:Bool?-instance-method","name":"open_stdin","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"open_stdin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@open_stdin"}},{"id":"open_stdin=(_open_stdin:Bool?)-instance-method","html_id":"open_stdin=(_open_stdin:Bool?)-instance-method","name":"open_stdin=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_open_stdin","doc":null,"default_value":"","external_name":"_open_stdin","restriction":"Bool | ::Nil"}],"args_string":"(_open_stdin : Bool?)","source_link":null,"def":{"name":"open_stdin=","args":[{"name":"_open_stdin","doc":null,"default_value":"","external_name":"_open_stdin","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@open_stdin = _open_stdin"}},{"id":"shell:Array(String)?-instance-method","html_id":"shell:Array(String)?-instance-method","name":"shell","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"shell","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@shell"}},{"id":"shell=(_shell:Array(String)?)-instance-method","html_id":"shell=(_shell:Array(String)?)-instance-method","name":"shell=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_shell","doc":null,"default_value":"","external_name":"_shell","restriction":"Array(String) | ::Nil"}],"args_string":"(_shell : Array(String)?)","source_link":null,"def":{"name":"shell=","args":[{"name":"_shell","doc":null,"default_value":"","external_name":"_shell","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shell = _shell"}},{"id":"stdin_once:Bool?-instance-method","html_id":"stdin_once:Bool?-instance-method","name":"stdin_once","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"stdin_once","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@stdin_once"}},{"id":"stdin_once=(_stdin_once:Bool?)-instance-method","html_id":"stdin_once=(_stdin_once:Bool?)-instance-method","name":"stdin_once=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_stdin_once","doc":null,"default_value":"","external_name":"_stdin_once","restriction":"Bool | ::Nil"}],"args_string":"(_stdin_once : Bool?)","source_link":null,"def":{"name":"stdin_once=","args":[{"name":"_stdin_once","doc":null,"default_value":"","external_name":"_stdin_once","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@stdin_once = _stdin_once"}},{"id":"stop_signal:String?-instance-method","html_id":"stop_signal:String?-instance-method","name":"stop_signal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"stop_signal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@stop_signal"}},{"id":"stop_signal=(_stop_signal:String?)-instance-method","html_id":"stop_signal=(_stop_signal:String?)-instance-method","name":"stop_signal=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_stop_signal","doc":null,"default_value":"","external_name":"_stop_signal","restriction":"String | ::Nil"}],"args_string":"(_stop_signal : String?)","source_link":null,"def":{"name":"stop_signal=","args":[{"name":"_stop_signal","doc":null,"default_value":"","external_name":"_stop_signal","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@stop_signal = _stop_signal"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _attach_stderr = @attach_stderr\n  if _attach_stderr.nil?\n  else\n    json.field(\"attach_stderr\") do\n      _attach_stderr.to_json(json)\n    end\n  end\n  _attach_stdin = @attach_stdin\n  if _attach_stdin.nil?\n  else\n    json.field(\"attach_stdin\") do\n      _attach_stdin.to_json(json)\n    end\n  end\n  _attach_stdou = @attach_stdou\n  if _attach_stdou.nil?\n  else\n    json.field(\"attach_stdou\") do\n      _attach_stdou.to_json(json)\n    end\n  end\n  _cmd = @cmd\n  if _cmd.nil?\n  else\n    json.field(\"cmd\") do\n      _cmd.to_json(json)\n    end\n  end\n  _health_check = @health_check\n  if _health_check.nil?\n  else\n    json.field(\"health_check\") do\n      _health_check.to_json(json)\n    end\n  end\n  _domain_name = @domain_name\n  if _domain_name.nil?\n  else\n    json.field(\"domain_name\") do\n      _domain_name.to_json(json)\n    end\n  end\n  _entry_point = @entry_point\n  if _entry_point.nil?\n  else\n    json.field(\"entry_point\") do\n      _entry_point.to_json(json)\n    end\n  end\n  _env = @env\n  if _env.nil?\n  else\n    json.field(\"env\") do\n      _env.to_json(json)\n    end\n  end\n  _hostname = @hostname\n  if _hostname.nil?\n  else\n    json.field(\"hostname\") do\n      _hostname.to_json(json)\n    end\n  end\n  _image = @image\n  if _image.nil?\n  else\n    json.field(\"image\") do\n      _image.to_json(json)\n    end\n  end\n  _labels = @labels\n  if _labels.nil?\n  else\n    json.field(\"labels\") do\n      _labels.to_json(json)\n    end\n  end\n  _on_build = @on_build\n  if _on_build.nil?\n  else\n    json.field(\"on_build\") do\n      _on_build.to_json(json)\n    end\n  end\n  _open_stdin = @open_stdin\n  if _open_stdin.nil?\n  else\n    json.field(\"open_stdin\") do\n      _open_stdin.to_json(json)\n    end\n  end\n  _stdin_once = @stdin_once\n  if _stdin_once.nil?\n  else\n    json.field(\"stdin_once\") do\n      _stdin_once.to_json(json)\n    end\n  end\n  _tty = @tty\n  if _tty.nil?\n  else\n    json.field(\"tty\") do\n      _tty.to_json(json)\n    end\n  end\n  _volumes = @volumes\n  if _volumes.nil?\n  else\n    json.field(\"volumes\") do\n      _volumes.to_json(json)\n    end\n  end\n  _working_dir = @working_dir\n  if _working_dir.nil?\n  else\n    json.field(\"working_dir\") do\n      _working_dir.to_json(json)\n    end\n  end\n  _exposed_ports = @exposed_ports\n  if _exposed_ports.nil?\n  else\n    json.field(\"exposed_ports\") do\n      _exposed_ports.to_json(json)\n    end\n  end\n  _args_escaped = @args_escaped\n  if _args_escaped.nil?\n  else\n    json.field(\"args_escaped\") do\n      _args_escaped.to_json(json)\n    end\n  end\n  _network_disabled = @network_disabled\n  if _network_disabled.nil?\n  else\n    json.field(\"network_disabled\") do\n      _network_disabled.to_json(json)\n    end\n  end\n  _mac_address = @mac_address\n  if _mac_address.nil?\n  else\n    json.field(\"mac_address\") do\n      _mac_address.to_json(json)\n    end\n  end\n  _stop_signal = @stop_signal\n  if _stop_signal.nil?\n  else\n    json.field(\"stop_signal\") do\n      _stop_signal.to_json(json)\n    end\n  end\n  _shell = @shell\n  if _shell.nil?\n  else\n    json.field(\"shell\") do\n      _shell.to_json(json)\n    end\n  end\nend"}},{"id":"tty:Bool?-instance-method","html_id":"tty:Bool?-instance-method","name":"tty","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"tty","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@tty"}},{"id":"tty=(_tty:Bool?)-instance-method","html_id":"tty=(_tty:Bool?)-instance-method","name":"tty=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_tty","doc":null,"default_value":"","external_name":"_tty","restriction":"Bool | ::Nil"}],"args_string":"(_tty : Bool?)","source_link":null,"def":{"name":"tty=","args":[{"name":"_tty","doc":null,"default_value":"","external_name":"_tty","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tty = _tty"}},{"id":"volumes:::Hash(String,JSON::Any)?-instance-method","html_id":"volumes:::Hash(String,JSON::Any)?-instance-method","name":"volumes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, JSON::Any)?","source_link":null,"def":{"name":"volumes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, JSON::Any) | ::Nil","visibility":"Public","body":"@volumes"}},{"id":"volumes=(_volumes:::Hash(String,JSON::Any)?)-instance-method","html_id":"volumes=(_volumes:::Hash(String,JSON::Any)?)-instance-method","name":"volumes=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_volumes","doc":null,"default_value":"","external_name":"_volumes","restriction":"::Hash(String, JSON::Any) | ::Nil"}],"args_string":"(_volumes : ::Hash(String, JSON::Any)?)","source_link":null,"def":{"name":"volumes=","args":[{"name":"_volumes","doc":null,"default_value":"","external_name":"_volumes","restriction":"::Hash(String, JSON::Any) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@volumes = _volumes"}},{"id":"working_dir:String?-instance-method","html_id":"working_dir:String?-instance-method","name":"working_dir","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"working_dir","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@working_dir"}},{"id":"working_dir=(_working_dir:String?)-instance-method","html_id":"working_dir=(_working_dir:String?)-instance-method","name":"working_dir=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_working_dir","doc":null,"default_value":"","external_name":"_working_dir","restriction":"String | ::Nil"}],"args_string":"(_working_dir : String?)","source_link":null,"def":{"name":"working_dir=","args":[{"name":"_working_dir","doc":null,"default_value":"","external_name":"_working_dir","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@working_dir = _working_dir"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/ConfigFile","path":"V1/ConfigFile.html","kind":"struct","full_name":"V1::ConfigFile","name":"ConfigFile","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/config.cr","line_number":10,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"ConfigFile is the configuration file that holds the metadata describing\nhow to launch a container. See:\nhttps:#github.com/opencontainers/image-spec/blob/master/config.md","summary":"<p>ConfigFile is the configuration file that holds the metadata describing how to launch a container.</p>","class_methods":[],"constructors":[{"id":"new(__temp_57:JSON::PullParser)-class-method","html_id":"new(__temp_57:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_57","doc":null,"default_value":"","external_name":"__temp_57","restriction":"::JSON::PullParser"}],"args_string":"(__temp_57 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_57","doc":null,"default_value":"","external_name":"__temp_57","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_57)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rootfs,config=Config.new,architecture=&quot;amd64&quot;,os=&quot;linux&quot;,author=nil,container=nil,created=nil,docker_version=nil,history=nil,container_config=nil,os_version=nil)-class-method","html_id":"new(rootfs,config=Config.new,architecture=&amp;quot;amd64&amp;quot;,os=&amp;quot;linux&amp;quot;,author=nil,container=nil,created=nil,docker_version=nil,history=nil,container_config=nil,os_version=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rootfs","doc":null,"default_value":"","external_name":"rootfs","restriction":""},{"name":"config","doc":null,"default_value":"Config.new","external_name":"config","restriction":""},{"name":"architecture","doc":null,"default_value":"\"amd64\"","external_name":"architecture","restriction":""},{"name":"os","doc":null,"default_value":"\"linux\"","external_name":"os","restriction":""},{"name":"author","doc":null,"default_value":"nil","external_name":"author","restriction":""},{"name":"container","doc":null,"default_value":"nil","external_name":"container","restriction":""},{"name":"created","doc":null,"default_value":"nil","external_name":"created","restriction":""},{"name":"docker_version","doc":null,"default_value":"nil","external_name":"docker_version","restriction":""},{"name":"history","doc":null,"default_value":"nil","external_name":"history","restriction":""},{"name":"container_config","doc":null,"default_value":"nil","external_name":"container_config","restriction":""},{"name":"os_version","doc":null,"default_value":"nil","external_name":"os_version","restriction":""}],"args_string":"(rootfs, config = <span class=\"t\">Config</span>.<span class=\"k\">new</span>, architecture = <span class=\"s\">&quot;amd64&quot;</span>, os = <span class=\"s\">&quot;linux&quot;</span>, author = <span class=\"n\">nil</span>, container = <span class=\"n\">nil</span>, created = <span class=\"n\">nil</span>, docker_version = <span class=\"n\">nil</span>, history = <span class=\"n\">nil</span>, container_config = <span class=\"n\">nil</span>, os_version = <span class=\"n\">nil</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L25","def":{"name":"new","args":[{"name":"rootfs","doc":null,"default_value":"","external_name":"rootfs","restriction":""},{"name":"config","doc":null,"default_value":"Config.new","external_name":"config","restriction":""},{"name":"architecture","doc":null,"default_value":"\"amd64\"","external_name":"architecture","restriction":""},{"name":"os","doc":null,"default_value":"\"linux\"","external_name":"os","restriction":""},{"name":"author","doc":null,"default_value":"nil","external_name":"author","restriction":""},{"name":"container","doc":null,"default_value":"nil","external_name":"container","restriction":""},{"name":"created","doc":null,"default_value":"nil","external_name":"created","restriction":""},{"name":"docker_version","doc":null,"default_value":"nil","external_name":"docker_version","restriction":""},{"name":"history","doc":null,"default_value":"nil","external_name":"history","restriction":""},{"name":"container_config","doc":null,"default_value":"nil","external_name":"container_config","restriction":""},{"name":"os_version","doc":null,"default_value":"nil","external_name":"os_version","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rootfs, config, architecture, os, author, container, created, docker_version, history, container_config, os_version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"architecture:String-instance-method","html_id":"architecture:String-instance-method","name":"architecture","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"architecture","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@architecture"}},{"id":"architecture=(_architecture:String)-instance-method","html_id":"architecture=(_architecture:String)-instance-method","name":"architecture=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_architecture","doc":null,"default_value":"","external_name":"_architecture","restriction":"String"}],"args_string":"(_architecture : String)","source_link":null,"def":{"name":"architecture=","args":[{"name":"_architecture","doc":null,"default_value":"","external_name":"_architecture","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@architecture = _architecture"}},{"id":"author:String?-instance-method","html_id":"author:String?-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@author"}},{"id":"author=(_author:String?)-instance-method","html_id":"author=(_author:String?)-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"String | ::Nil"}],"args_string":"(_author : String?)","source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"config:Config-instance-method","html_id":"config:Config-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Config","source_link":null,"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config","visibility":"Public","body":"@config"}},{"id":"config=(_config:Config)-instance-method","html_id":"config=(_config:Config)-instance-method","name":"config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"Config"}],"args_string":"(_config : Config)","source_link":null,"def":{"name":"config=","args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config = _config"}},{"id":"container:String?-instance-method","html_id":"container:String?-instance-method","name":"container","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@container"}},{"id":"container=(_container:String?)-instance-method","html_id":"container=(_container:String?)-instance-method","name":"container=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_container","doc":null,"default_value":"","external_name":"_container","restriction":"String | ::Nil"}],"args_string":"(_container : String?)","source_link":null,"def":{"name":"container=","args":[{"name":"_container","doc":null,"default_value":"","external_name":"_container","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container = _container"}},{"id":"container_config:Config?-instance-method","html_id":"container_config:Config?-instance-method","name":"container_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Config?","source_link":null,"def":{"name":"container_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config | ::Nil","visibility":"Public","body":"@container_config"}},{"id":"container_config=(_container_config:Config?)-instance-method","html_id":"container_config=(_container_config:Config?)-instance-method","name":"container_config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_container_config","doc":null,"default_value":"","external_name":"_container_config","restriction":"Config | ::Nil"}],"args_string":"(_container_config : Config?)","source_link":null,"def":{"name":"container_config=","args":[{"name":"_container_config","doc":null,"default_value":"","external_name":"_container_config","restriction":"Config | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container_config = _container_config"}},{"id":"created:Time?-instance-method","html_id":"created:Time?-instance-method","name":"created","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"def":{"name":"created","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time | ::Nil","visibility":"Public","body":"@created"}},{"id":"created=(_created:Time?)-instance-method","html_id":"created=(_created:Time?)-instance-method","name":"created=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_created","doc":null,"default_value":"","external_name":"_created","restriction":"Time | ::Nil"}],"args_string":"(_created : Time?)","source_link":null,"def":{"name":"created=","args":[{"name":"_created","doc":null,"default_value":"","external_name":"_created","restriction":"Time | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@created = _created"}},{"id":"docker_version:String?-instance-method","html_id":"docker_version:String?-instance-method","name":"docker_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"docker_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@docker_version"}},{"id":"docker_version=(_docker_version:String?)-instance-method","html_id":"docker_version=(_docker_version:String?)-instance-method","name":"docker_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_docker_version","doc":null,"default_value":"","external_name":"_docker_version","restriction":"String | ::Nil"}],"args_string":"(_docker_version : String?)","source_link":null,"def":{"name":"docker_version=","args":[{"name":"_docker_version","doc":null,"default_value":"","external_name":"_docker_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@docker_version = _docker_version"}},{"id":"history:Array(History)?-instance-method","html_id":"history:Array(History)?-instance-method","name":"history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(History)?","source_link":null,"def":{"name":"history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(History) | ::Nil","visibility":"Public","body":"@history"}},{"id":"history=(_history:Array(History)?)-instance-method","html_id":"history=(_history:Array(History)?)-instance-method","name":"history=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_history","doc":null,"default_value":"","external_name":"_history","restriction":"Array(History) | ::Nil"}],"args_string":"(_history : Array(History)?)","source_link":null,"def":{"name":"history=","args":[{"name":"_history","doc":null,"default_value":"","external_name":"_history","restriction":"Array(History) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@history = _history"}},{"id":"os:String-instance-method","html_id":"os:String-instance-method","name":"os","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"os","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@os"}},{"id":"os=(_os:String)-instance-method","html_id":"os=(_os:String)-instance-method","name":"os=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"args_string":"(_os : String)","source_link":null,"def":{"name":"os=","args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os = _os"}},{"id":"os_version:String?-instance-method","html_id":"os_version:String?-instance-method","name":"os_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"os_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@os_version"}},{"id":"os_version=(_os_version:String?)-instance-method","html_id":"os_version=(_os_version:String?)-instance-method","name":"os_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os_version","doc":null,"default_value":"","external_name":"_os_version","restriction":"String | ::Nil"}],"args_string":"(_os_version : String?)","source_link":null,"def":{"name":"os_version=","args":[{"name":"_os_version","doc":null,"default_value":"","external_name":"_os_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os_version = _os_version"}},{"id":"rootfs:RootFS-instance-method","html_id":"rootfs:RootFS-instance-method","name":"rootfs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : RootFS","source_link":null,"def":{"name":"rootfs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RootFS","visibility":"Public","body":"@rootfs"}},{"id":"rootfs=(_rootfs:RootFS)-instance-method","html_id":"rootfs=(_rootfs:RootFS)-instance-method","name":"rootfs=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_rootfs","doc":null,"default_value":"","external_name":"_rootfs","restriction":"RootFS"}],"args_string":"(_rootfs : RootFS)","source_link":null,"def":{"name":"rootfs=","args":[{"name":"_rootfs","doc":null,"default_value":"","external_name":"_rootfs","restriction":"RootFS"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rootfs = _rootfs"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _architecture = @architecture\n  if _architecture.nil?\n  else\n    json.field(\"architecture\") do\n      _architecture.to_json(json)\n    end\n  end\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\n  _container = @container\n  if _container.nil?\n  else\n    json.field(\"container\") do\n      _container.to_json(json)\n    end\n  end\n  _created = @created\n  if _created.nil?\n  else\n    json.field(\"created\") do\n      _created.to_json(json)\n    end\n  end\n  _docker_version = @docker_version\n  if _docker_version.nil?\n  else\n    json.field(\"docker_version\") do\n      _docker_version.to_json(json)\n    end\n  end\n  _history = @history\n  if _history.nil?\n  else\n    json.field(\"history\") do\n      _history.to_json(json)\n    end\n  end\n  _os = @os\n  if _os.nil?\n  else\n    json.field(\"os\") do\n      _os.to_json(json)\n    end\n  end\n  _rootfs = @rootfs\n  if _rootfs.nil?\n  else\n    json.field(\"rootfs\") do\n      _rootfs.to_json(json)\n    end\n  end\n  _config = @config\n  if _config.nil?\n  else\n    json.field(\"config\") do\n      _config.to_json(json)\n    end\n  end\n  _container_config = @container_config\n  if _container_config.nil?\n  else\n    json.field(\"container_config\") do\n      _container_config.to_json(json)\n    end\n  end\n  _os_version = @os_version\n  if _os_version.nil?\n  else\n    json.field(\"os_version\") do\n      _os_version.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Descriptor","path":"V1/Descriptor.html","kind":"struct","full_name":"V1::Descriptor","name":"Descriptor","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/manifest.cr","line_number":38,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Descriptor holds a reference from the manifest to one of its constituent elements.","summary":"<p>Descriptor holds a reference from the manifest to one of its constituent elements.</p>","class_methods":[],"constructors":[{"id":"new(media_type,digest:V1::Hash,size:Int)-class-method","html_id":"new(media_type,digest:V1::Hash,size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"media_type","doc":null,"default_value":"","external_name":"media_type","restriction":""},{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":"V1::Hash"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(media_type, digest : V1::Hash, size : Int)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr#L48","def":{"name":"new","args":[{"name":"media_type","doc":null,"default_value":"","external_name":"media_type","restriction":""},{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":"V1::Hash"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(media_type, digest, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_203:JSON::PullParser)-class-method","html_id":"new(__temp_203:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_203","doc":null,"default_value":"","external_name":"__temp_203","restriction":"::JSON::PullParser"}],"args_string":"(__temp_203 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_203","doc":null,"default_value":"","external_name":"__temp_203","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_203)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"annotations:::Hash(String,String)?-instance-method","html_id":"annotations:::Hash(String,String)?-instance-method","name":"annotations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, String)?","source_link":null,"def":{"name":"annotations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, String) | ::Nil","visibility":"Public","body":"@annotations"}},{"id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","html_id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","name":"annotations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"args_string":"(_annotations : ::Hash(String, String)?)","source_link":null,"def":{"name":"annotations=","args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@annotations = _annotations"}},{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Hash","source_link":null,"def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":"@digest"}},{"id":"digest=(_digest:V1::Hash)-instance-method","html_id":"digest=(_digest:V1::Hash)-instance-method","name":"digest=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_digest","doc":null,"default_value":"","external_name":"_digest","restriction":"V1::Hash"}],"args_string":"(_digest : V1::Hash)","source_link":null,"def":{"name":"digest=","args":[{"name":"_digest","doc":null,"default_value":"","external_name":"_digest","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@digest = _digest"}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Types::MediaType","source_link":null,"def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":"@media_type"}},{"id":"media_type=(_media_type:Types::MediaType)-instance-method","html_id":"media_type=(_media_type:Types::MediaType)-instance-method","name":"media_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType"}],"args_string":"(_media_type : Types::MediaType)","source_link":null,"def":{"name":"media_type=","args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@media_type = _media_type"}},{"id":"platform:Platform-instance-method","html_id":"platform:Platform-instance-method","name":"platform","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Platform","source_link":null,"def":{"name":"platform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Platform","visibility":"Public","body":"@platform"}},{"id":"platform=(_platform:Platform)-instance-method","html_id":"platform=(_platform:Platform)-instance-method","name":"platform=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_platform","doc":null,"default_value":"","external_name":"_platform","restriction":"Platform"}],"args_string":"(_platform : Platform)","source_link":null,"def":{"name":"platform=","args":[{"name":"_platform","doc":null,"default_value":"","external_name":"_platform","restriction":"Platform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@platform = _platform"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}},{"id":"size=(_size:Int64)-instance-method","html_id":"size=(_size:Int64)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_size","doc":null,"default_value":"","external_name":"_size","restriction":"Int64"}],"args_string":"(_size : Int64)","source_link":null,"def":{"name":"size=","args":[{"name":"_size","doc":null,"default_value":"","external_name":"_size","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = _size"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _media_type = @media_type\n  if _media_type.nil?\n  else\n    json.field(\"mediaType\") do\n      if _media_type\n        Types::MediaType.to_json(_media_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _size = @size\n  if _size.nil?\n  else\n    json.field(\"size\") do\n      _size.to_json(json)\n    end\n  end\n  _digest = @digest\n  if _digest.nil?\n  else\n    json.field(\"digest\") do\n      if _digest\n        V1::Hash.to_json(_digest, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _urls = @urls\n  if _urls.nil?\n  else\n    json.field(\"urls\") do\n      _urls.to_json(json)\n    end\n  end\n  _annotations = @annotations\n  if _annotations.nil?\n  else\n    json.field(\"annotations\") do\n      _annotations.to_json(json)\n    end\n  end\n  _platform = @platform\n  if _platform.nil?\n  else\n    json.field(\"platform\") do\n      _platform.to_json(json)\n    end\n  end\nend"}},{"id":"urls:Array(String)?-instance-method","html_id":"urls:Array(String)?-instance-method","name":"urls","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"urls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@urls"}},{"id":"urls=(_urls:Array(String)?)-instance-method","html_id":"urls=(_urls:Array(String)?)-instance-method","name":"urls=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_urls","doc":null,"default_value":"","external_name":"_urls","restriction":"Array(String) | ::Nil"}],"args_string":"(_urls : Array(String)?)","source_link":null,"def":{"name":"urls=","args":[{"name":"_urls","doc":null,"default_value":"","external_name":"_urls","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@urls = _urls"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Duration","path":"V1/Duration.html","kind":"alias","full_name":"V1::Duration","name":"Duration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/config.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"Int64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Empty","path":"V1/Empty.html","kind":"module","full_name":"V1::Empty","name":"Empty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/empty/empty.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/empty/empty.cr"},{"filename":"v1/empty/image.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/empty/image.cr"},{"filename":"v1/empty/index.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/empty/index.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IMAGE","name":"IMAGE","value":"Random.image(0, 0)","doc":"image is a singleton empty image, think: FROM scratch","summary":"<p>image is a singleton empty image, think: FROM scratch</p>"},{"id":"INDEX","name":"INDEX","value":"EmptyIndex.new","doc":"INDEX is a singleton empty index, think FROM: scratch.","summary":"<p>INDEX is a singleton empty index, think FROM: scratch.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Empty provides an implementation of v1.Image equivalent to \"FROM scratch\".","summary":"<p>Module Empty provides an implementation of v1.Image equivalent to \"FROM scratch\".</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Hash","path":"V1/Hash.html","kind":"struct","full_name":"V1::Hash","name":"Hash","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/hash.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Hash is an unqualified digest of some content, e.g. sha256:deadbeef","summary":"<p>Hash is an unqualified digest of some content, e.g.</p>","class_methods":[{"id":"empty-class-method","html_id":"empty-class-method","name":"empty","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L20","def":{"name":"empty","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"sha256\", \"b1d4e2e6ccaf0081ea23a20da8b8fbb49682937bf853a7fdab851beb6e1bab81\")"}},{"id":"from_json(pull:JSON::PullParser)-class-method","html_id":"from_json(pull:JSON::PullParser)-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L28","def":{"name":"from_json","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string = pull.read_string\nnew(string)\n"}},{"id":"hasher(name:String)-class-method","html_id":"hasher(name:String)-class-method","name":"hasher","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L53","def":{"name":"hasher","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case name\nwhen \"sha256\"\n  OpenSSL::DigestIO.new(IO::Memory.new, \"SHA256\", OpenSSL::DigestIO::DigestMode::Write)\nelse\n  raise(Exception.new(\"unsupported hash: #{name}\"))\nend"}},{"id":"sha256(r:IO)-class-method","html_id":"sha256(r:IO)-class-method","name":"sha256","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L41","def":{"name":"sha256","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = OpenSSL::DigestIO.new(r, \"SHA256\")\nbuffer = Bytes.new(32 * 1024)\nsize = 0_i64\nwhile (n = io.read(buffer)) && n > 0\n  size = size + n\n  clear(buffer)\nend\n{Hash.new(\"sha256\", io.digest.hexstring), size}\n"}},{"id":"to_json(h:Hash,json:JSON::Builder)-class-method","html_id":"to_json(h:Hash,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(h : Hash, json : JSON::Builder)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L37","def":{"name":"to_json","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(h.to_s)"}},{"id":"to_json(json:JSON::Builder)-class-method","html_id":"to_json(json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L33","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(self.to_s)"}}],"constructors":[{"id":"new(algorithm,hex)-class-method","html_id":"new(algorithm,hex)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"algorithm","doc":null,"default_value":"","external_name":"algorithm","restriction":""},{"name":"hex","doc":null,"default_value":"","external_name":"hex","restriction":""}],"args_string":"(algorithm, hex)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L9","def":{"name":"new","args":[{"name":"algorithm","doc":null,"default_value":"","external_name":"algorithm","restriction":""},{"name":"hex","doc":null,"default_value":"","external_name":"hex","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(algorithm, hex)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(h:String)-class-method","html_id":"new(h:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"String"}],"args_string":"(h : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L12","def":{"name":"new","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(h)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L24","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pull.read_string"}}],"instance_methods":[{"id":"algorithm:String-instance-method","html_id":"algorithm:String-instance-method","name":"algorithm","doc":"Algorithm holds the algorithm used to compute the hash.","summary":"<p>Algorithm holds the algorithm used to compute the hash.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L7","def":{"name":"algorithm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@algorithm"}},{"id":"hex:String-instance-method","html_id":"hex:String-instance-method","name":"hex","doc":"Hex holds the hex portion of the content hash.","summary":"<p>Hex holds the hex portion of the content hash.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L9","def":{"name":"hex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@hex"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/hash.cr#L16","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@algorithm}:#{hex}\""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/HealthConfig","path":"V1/HealthConfig.html","kind":"struct","full_name":"V1::HealthConfig","name":"HealthConfig","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/config.cr","line_number":80,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"HealthConfig holds configuration settings for the HEALTHCHECK feature.\nTest is the test to perform to check that the container is healthy.\nAn empty slice means to inherit the default.\nThe options are:\n{} : inherit healthcheck\n{\"NONE\"} : disable healthcheck\n{\"CMD\", args...} : exec arguments directly\n{\"CMD-SHELL\", command} : run command with system's default shell","summary":"<p>HealthConfig holds configuration settings for the HEALTHCHECK feature.</p>","class_methods":[],"constructors":[{"id":"new(__temp_102:JSON::PullParser)-class-method","html_id":"new(__temp_102:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_102","doc":null,"default_value":"","external_name":"__temp_102","restriction":"::JSON::PullParser"}],"args_string":"(__temp_102 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_102","doc":null,"default_value":"","external_name":"__temp_102","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_102)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"interval:Duration?-instance-method","html_id":"interval:Duration?-instance-method","name":"interval","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Duration?","source_link":null,"def":{"name":"interval","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Duration | ::Nil","visibility":"Public","body":"@interval"}},{"id":"interval=(_interval:Duration?)-instance-method","html_id":"interval=(_interval:Duration?)-instance-method","name":"interval=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_interval","doc":null,"default_value":"","external_name":"_interval","restriction":"Duration | ::Nil"}],"args_string":"(_interval : Duration?)","source_link":null,"def":{"name":"interval=","args":[{"name":"_interval","doc":null,"default_value":"","external_name":"_interval","restriction":"Duration | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@interval = _interval"}},{"id":"retries:Int32?-instance-method","html_id":"retries:Int32?-instance-method","name":"retries","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"def":{"name":"retries","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@retries"}},{"id":"retries=(_retries:Int32?)-instance-method","html_id":"retries=(_retries:Int32?)-instance-method","name":"retries=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_retries","doc":null,"default_value":"","external_name":"_retries","restriction":"Int32 | ::Nil"}],"args_string":"(_retries : Int32?)","source_link":null,"def":{"name":"retries=","args":[{"name":"_retries","doc":null,"default_value":"","external_name":"_retries","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@retries = _retries"}},{"id":"start_period:Duration?-instance-method","html_id":"start_period:Duration?-instance-method","name":"start_period","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Duration?","source_link":null,"def":{"name":"start_period","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Duration | ::Nil","visibility":"Public","body":"@start_period"}},{"id":"start_period=(_start_period:Duration?)-instance-method","html_id":"start_period=(_start_period:Duration?)-instance-method","name":"start_period=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_start_period","doc":null,"default_value":"","external_name":"_start_period","restriction":"Duration | ::Nil"}],"args_string":"(_start_period : Duration?)","source_link":null,"def":{"name":"start_period=","args":[{"name":"_start_period","doc":null,"default_value":"","external_name":"_start_period","restriction":"Duration | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@start_period = _start_period"}},{"id":"test:Array(String)?-instance-method","html_id":"test:Array(String)?-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"test","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@test"}},{"id":"test=(_test:Array(String)?)-instance-method","html_id":"test=(_test:Array(String)?)-instance-method","name":"test=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_test","doc":null,"default_value":"","external_name":"_test","restriction":"Array(String) | ::Nil"}],"args_string":"(_test : Array(String)?)","source_link":null,"def":{"name":"test=","args":[{"name":"_test","doc":null,"default_value":"","external_name":"_test","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@test = _test"}},{"id":"timeout:Duration?-instance-method","html_id":"timeout:Duration?-instance-method","name":"timeout","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Duration?","source_link":null,"def":{"name":"timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Duration | ::Nil","visibility":"Public","body":"@timeout"}},{"id":"timeout=(_timeout:Duration?)-instance-method","html_id":"timeout=(_timeout:Duration?)-instance-method","name":"timeout=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_timeout","doc":null,"default_value":"","external_name":"_timeout","restriction":"Duration | ::Nil"}],"args_string":"(_timeout : Duration?)","source_link":null,"def":{"name":"timeout=","args":[{"name":"_timeout","doc":null,"default_value":"","external_name":"_timeout","restriction":"Duration | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timeout = _timeout"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _test = @test\n  if _test.nil?\n  else\n    json.field(\"test\") do\n      _test.to_json(json)\n    end\n  end\n  _interval = @interval\n  if _interval.nil?\n  else\n    json.field(\"interval\") do\n      _interval.to_json(json)\n    end\n  end\n  _timeout = @timeout\n  if _timeout.nil?\n  else\n    json.field(\"timeout\") do\n      _timeout.to_json(json)\n    end\n  end\n  _start_period = @start_period\n  if _start_period.nil?\n  else\n    json.field(\"start_period\") do\n      _start_period.to_json(json)\n    end\n  end\n  _retries = @retries\n  if _retries.nil?\n  else\n    json.field(\"retries\") do\n      _retries.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/History","path":"V1/History.html","kind":"struct","full_name":"V1::History","name":"History","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/config.cr","line_number":32,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"History is one entry of a list recording how this container image was built.","summary":"<p>History is one entry of a list recording how this container image was built.</p>","class_methods":[],"constructors":[{"id":"new(__temp_82:JSON::PullParser)-class-method","html_id":"new(__temp_82:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_82","doc":null,"default_value":"","external_name":"__temp_82","restriction":"::JSON::PullParser"}],"args_string":"(__temp_82 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_82","doc":null,"default_value":"","external_name":"__temp_82","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_82)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(author=&quot;&quot;,created=nil,created_by=&quot;&quot;,comment=&quot;&quot;,empty_layer=false)-class-method","html_id":"new(author=&amp;quot;&amp;quot;,created=nil,created_by=&amp;quot;&amp;quot;,comment=&amp;quot;&amp;quot;,empty_layer=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"author","doc":null,"default_value":"\"\"","external_name":"author","restriction":""},{"name":"created","doc":null,"default_value":"nil","external_name":"created","restriction":""},{"name":"created_by","doc":null,"default_value":"\"\"","external_name":"created_by","restriction":""},{"name":"comment","doc":null,"default_value":"\"\"","external_name":"comment","restriction":""},{"name":"empty_layer","doc":null,"default_value":"false","external_name":"empty_layer","restriction":""}],"args_string":"(author = <span class=\"s\">&quot;&quot;</span>, created = <span class=\"n\">nil</span>, created_by = <span class=\"s\">&quot;&quot;</span>, comment = <span class=\"s\">&quot;&quot;</span>, empty_layer = <span class=\"n\">false</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L41","def":{"name":"new","args":[{"name":"author","doc":null,"default_value":"\"\"","external_name":"author","restriction":""},{"name":"created","doc":null,"default_value":"nil","external_name":"created","restriction":""},{"name":"created_by","doc":null,"default_value":"\"\"","external_name":"created_by","restriction":""},{"name":"comment","doc":null,"default_value":"\"\"","external_name":"comment","restriction":""},{"name":"empty_layer","doc":null,"default_value":"false","external_name":"empty_layer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(author, created, created_by, comment, empty_layer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"author:String?-instance-method","html_id":"author:String?-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@author"}},{"id":"author=(_author:String?)-instance-method","html_id":"author=(_author:String?)-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"String | ::Nil"}],"args_string":"(_author : String?)","source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"comment:String?-instance-method","html_id":"comment:String?-instance-method","name":"comment","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"comment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@comment"}},{"id":"comment=(_comment:String?)-instance-method","html_id":"comment=(_comment:String?)-instance-method","name":"comment=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_comment","doc":null,"default_value":"","external_name":"_comment","restriction":"String | ::Nil"}],"args_string":"(_comment : String?)","source_link":null,"def":{"name":"comment=","args":[{"name":"_comment","doc":null,"default_value":"","external_name":"_comment","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@comment = _comment"}},{"id":"created:Time?-instance-method","html_id":"created:Time?-instance-method","name":"created","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"def":{"name":"created","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time | ::Nil","visibility":"Public","body":"@created"}},{"id":"created=(_created:Time?)-instance-method","html_id":"created=(_created:Time?)-instance-method","name":"created=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_created","doc":null,"default_value":"","external_name":"_created","restriction":"Time | ::Nil"}],"args_string":"(_created : Time?)","source_link":null,"def":{"name":"created=","args":[{"name":"_created","doc":null,"default_value":"","external_name":"_created","restriction":"Time | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@created = _created"}},{"id":"created_by:String?-instance-method","html_id":"created_by:String?-instance-method","name":"created_by","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"created_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@created_by"}},{"id":"created_by=(_created_by:String?)-instance-method","html_id":"created_by=(_created_by:String?)-instance-method","name":"created_by=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_created_by","doc":null,"default_value":"","external_name":"_created_by","restriction":"String | ::Nil"}],"args_string":"(_created_by : String?)","source_link":null,"def":{"name":"created_by=","args":[{"name":"_created_by","doc":null,"default_value":"","external_name":"_created_by","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@created_by = _created_by"}},{"id":"empty_layer:Bool?-instance-method","html_id":"empty_layer:Bool?-instance-method","name":"empty_layer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"def":{"name":"empty_layer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"@empty_layer"}},{"id":"empty_layer=(_empty_layer:Bool?)-instance-method","html_id":"empty_layer=(_empty_layer:Bool?)-instance-method","name":"empty_layer=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_empty_layer","doc":null,"default_value":"","external_name":"_empty_layer","restriction":"Bool | ::Nil"}],"args_string":"(_empty_layer : Bool?)","source_link":null,"def":{"name":"empty_layer=","args":[{"name":"_empty_layer","doc":null,"default_value":"","external_name":"_empty_layer","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@empty_layer = _empty_layer"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\n  _created = @created\n  if _created.nil?\n  else\n    json.field(\"created\") do\n      _created.to_json(json)\n    end\n  end\n  _created_by = @created_by\n  if _created_by.nil?\n  else\n    json.field(\"created_by\") do\n      _created_by.to_json(json)\n    end\n  end\n  _comment = @comment\n  if _comment.nil?\n  else\n    json.field(\"comment\") do\n      _comment.to_json(json)\n    end\n  end\n  _empty_layer = @empty_layer\n  if _empty_layer.nil?\n  else\n    json.field(\"empty_layer\") do\n      _empty_layer.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Image","path":"V1/Image.html","kind":"module","full_name":"V1::Image","name":"Image","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/image.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/MountableImage","kind":"class","full_name":"V1::Remote::MountableImage","name":"MountableImage"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"config_file:V1::ConfigFile-instance-method","html_id":"config_file:V1::ConfigFile-instance-method","name":"config_file","doc":"config_file returns this image's config file.","summary":"<p>config_file returns this image's config file.</p>","abstract":true,"args":[],"args_string":" : V1::ConfigFile","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L12","def":{"name":"config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::ConfigFile","visibility":"Public","body":""}},{"id":"config_name:V1::Hash-instance-method","html_id":"config_name:V1::Hash-instance-method","name":"config_name","doc":"config_name returns the hash of the image config file","summary":"<p>config_name returns the hash of the image config file</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L10","def":{"name":"config_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":"digest returns the sha256 of this image's manifest","summary":"<p>digest returns the sha256 of this image's manifest</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L18","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"layer_by_diff_id(h:V1::Hash):V1::Layer-instance-method","html_id":"layer_by_diff_id(h:V1::Hash):V1::Layer-instance-method","name":"layer_by_diff_id","doc":"layer_by_diff_id is an analog to layer_by_digest, looking up by \"diff id\"\n(the uncompressed hash).","summary":"<p>layer_by_diff_id is an analog to layer_by_digest, looking up by \"diff id\" (the uncompressed hash).</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : V1::Layer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L30","def":{"name":"layer_by_diff_id","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":""}},{"id":"layer_by_digest(h:V1::Hash):V1::Layer-instance-method","html_id":"layer_by_digest(h:V1::Hash):V1::Layer-instance-method","name":"layer_by_digest","doc":"layer_by_digest returns a Layer for interacting with a particular layer of\nthe image, looking it up by \"digest\" (the compressed hash).","summary":"<p>layer_by_digest returns a Layer for interacting with a particular layer of the image, looking it up by \"digest\" (the compressed hash).</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : V1::Layer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L26","def":{"name":"layer_by_digest","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":""}},{"id":"layers:Array(V1::Layer)-instance-method","html_id":"layers:Array(V1::Layer)-instance-method","name":"layers","doc":"Layers returns the ordered collection of filesystem layers that comprise this image.\nThe order of the list is oldest/base layer first, and most-recent/top layer last.","summary":"<p>Layers returns the ordered collection of filesystem layers that comprise this image.</p>","abstract":true,"args":[],"args_string":" : Array(V1::Layer)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L6","def":{"name":"layers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(V1::Layer)","visibility":"Public","body":""}},{"id":"manifest:V1::Manifest-instance-method","html_id":"manifest:V1::Manifest-instance-method","name":"manifest","doc":"manifest returns this image's Manifest","summary":"<p>manifest returns this image's Manifest</p>","abstract":true,"args":[],"args_string":" : V1::Manifest","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L21","def":{"name":"manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Manifest","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":"MediaType of this image's manifest.","summary":"<p>MediaType of this image's manifest.</p>","abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L8","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"raw_config_file:Bytes-instance-method","html_id":"raw_config_file:Bytes-instance-method","name":"raw_config_file","doc":"raw_config_file returns the serialized bytes of ConfigFile","summary":"<p>raw_config_file returns the serialized bytes of ConfigFile</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L15","def":{"name":"raw_config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}},{"id":"raw_manifest:Bytes-instance-method","html_id":"raw_manifest:Bytes-instance-method","name":"raw_manifest","doc":"raw_manifest returns the serialized bytes of Manifes","summary":"<p>raw_manifest returns the serialized bytes of Manifes</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/image.cr#L23","def":{"name":"raw_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/ImageIndex","path":"V1/ImageIndex.html","kind":"module","full_name":"V1::ImageIndex","name":"ImageIndex","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/index.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"ImageIndex defines the interface for interacting with an OCI image index.","summary":"<p>ImageIndex defines the interface for interacting with an OCI image index.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":"Digest returns the sha256 of this index's manifest","summary":"<p>Digest returns the sha256 of this index's manifest</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L10","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"image(h:V1::Hash):V1::Image-instance-method","html_id":"image(h:V1::Hash):V1::Image-instance-method","name":"image","doc":"image returns a v1.Image that this ImageIndex references","summary":"<p>image returns a v1.Image that this ImageIndex references</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : V1::Image","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L16","def":{"name":"image","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Image","visibility":"Public","body":""}},{"id":"image_index(h:V1::Hash):V1::ImageIndex-instance-method","html_id":"image_index(h:V1::Hash):V1::ImageIndex-instance-method","name":"image_index","doc":"image returns a v1.ImageIndex that this ImageIndex references","summary":"<p>image returns a v1.ImageIndex that this ImageIndex references</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : V1::ImageIndex","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L18","def":{"name":"image_index","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::ImageIndex","visibility":"Public","body":""}},{"id":"index_manifest:V1::IndexManifest-instance-method","html_id":"index_manifest:V1::IndexManifest-instance-method","name":"index_manifest","doc":"index_manifest returns this image index's manifest object","summary":"<p>index_manifest returns this image index's manifest object</p>","abstract":true,"args":[],"args_string":" : V1::IndexManifest","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L12","def":{"name":"index_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::IndexManifest","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":"MediaType of this image's manifest.","summary":"<p>MediaType of this image's manifest.</p>","abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L7","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"raw_manifest:Bytes-instance-method","html_id":"raw_manifest:Bytes-instance-method","name":"raw_manifest","doc":"raw_manifest returns the serialized bytes of IndexManifest","summary":"<p>raw_manifest returns the serialized bytes of IndexManifest</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/index.cr#L14","def":{"name":"raw_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/IndexManifest","path":"V1/IndexManifest.html","kind":"struct","full_name":"V1::IndexManifest","name":"IndexManifest","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/manifest.cr","line_number":24,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"IndexManifest represents an OCI image index in a structured way.","summary":"<p>IndexManifest represents an OCI image index in a structured way.</p>","class_methods":[],"constructors":[{"id":"new(schema_version:Int,manifests,media_type=nil,annotations=nil)-class-method","html_id":"new(schema_version:Int,manifests,media_type=nil,annotations=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"schema_version","doc":null,"default_value":"","external_name":"schema_version","restriction":"Int"},{"name":"manifests","doc":null,"default_value":"","external_name":"manifests","restriction":""},{"name":"media_type","doc":null,"default_value":"nil","external_name":"media_type","restriction":""},{"name":"annotations","doc":null,"default_value":"nil","external_name":"annotations","restriction":""}],"args_string":"(schema_version : Int, manifests, media_type = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr#L32","def":{"name":"new","args":[{"name":"schema_version","doc":null,"default_value":"","external_name":"schema_version","restriction":"Int"},{"name":"manifests","doc":null,"default_value":"","external_name":"manifests","restriction":""},{"name":"media_type","doc":null,"default_value":"nil","external_name":"media_type","restriction":""},{"name":"annotations","doc":null,"default_value":"nil","external_name":"annotations","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(schema_version, manifests, media_type, annotations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_192:JSON::PullParser)-class-method","html_id":"new(__temp_192:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_192","doc":null,"default_value":"","external_name":"__temp_192","restriction":"::JSON::PullParser"}],"args_string":"(__temp_192 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_192","doc":null,"default_value":"","external_name":"__temp_192","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_192)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"annotations:::Hash(String,String)?-instance-method","html_id":"annotations:::Hash(String,String)?-instance-method","name":"annotations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, String)?","source_link":null,"def":{"name":"annotations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, String) | ::Nil","visibility":"Public","body":"@annotations"}},{"id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","html_id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","name":"annotations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"args_string":"(_annotations : ::Hash(String, String)?)","source_link":null,"def":{"name":"annotations=","args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@annotations = _annotations"}},{"id":"manifests:Array(Descriptor)-instance-method","html_id":"manifests:Array(Descriptor)-instance-method","name":"manifests","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Descriptor)","source_link":null,"def":{"name":"manifests","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Descriptor)","visibility":"Public","body":"@manifests"}},{"id":"manifests=(_manifests:Array(Descriptor))-instance-method","html_id":"manifests=(_manifests:Array(Descriptor))-instance-method","name":"manifests=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_manifests","doc":null,"default_value":"","external_name":"_manifests","restriction":"Array(Descriptor)"}],"args_string":"(_manifests : Array(Descriptor))","source_link":null,"def":{"name":"manifests=","args":[{"name":"_manifests","doc":null,"default_value":"","external_name":"_manifests","restriction":"Array(Descriptor)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@manifests = _manifests"}},{"id":"media_type:Types::MediaType?-instance-method","html_id":"media_type:Types::MediaType?-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Types::MediaType?","source_link":null,"def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType | ::Nil","visibility":"Public","body":"@media_type"}},{"id":"media_type=(_media_type:Types::MediaType?)-instance-method","html_id":"media_type=(_media_type:Types::MediaType?)-instance-method","name":"media_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType | ::Nil"}],"args_string":"(_media_type : Types::MediaType?)","source_link":null,"def":{"name":"media_type=","args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@media_type = _media_type"}},{"id":"schema_version:Int64?-instance-method","html_id":"schema_version:Int64?-instance-method","name":"schema_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"schema_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@schema_version"}},{"id":"schema_version=(_schema_version:Int64?)-instance-method","html_id":"schema_version=(_schema_version:Int64?)-instance-method","name":"schema_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_schema_version","doc":null,"default_value":"","external_name":"_schema_version","restriction":"Int64 | ::Nil"}],"args_string":"(_schema_version : Int64?)","source_link":null,"def":{"name":"schema_version=","args":[{"name":"_schema_version","doc":null,"default_value":"","external_name":"_schema_version","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@schema_version = _schema_version"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _schema_version = @schema_version\n  if _schema_version.nil?\n  else\n    json.field(\"schemaVersion\") do\n      _schema_version.to_json(json)\n    end\n  end\n  _media_type = @media_type\n  if _media_type.nil?\n  else\n    json.field(\"mediaType\") do\n      if _media_type\n        Types::MediaType.to_json(_media_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _manifests = @manifests\n  if _manifests.nil?\n  else\n    json.field(\"manifests\") do\n      _manifests.to_json(json)\n    end\n  end\n  _annotations = @annotations\n  if _annotations.nil?\n  else\n    json.field(\"annotations\") do\n      _annotations.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","path":"V1/Layer.html","kind":"module","full_name":"V1::Layer","name":"Layer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/layer.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/MountableLayer","kind":"class","full_name":"V1::Remote::MountableLayer","name":"MountableLayer"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream/Layer","kind":"class","full_name":"V1::Stream::Layer","name":"Layer"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball/Layer","kind":"class","full_name":"V1::Tarball::Layer","name":"Layer"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compressed:IO-instance-method","html_id":"compressed:IO-instance-method","name":"compressed","doc":"Compressed returns an io.ReadCloser for the compressed layer contents.","summary":"<p>Compressed returns an io.ReadCloser for the compressed layer contents.</p>","abstract":true,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L10","def":{"name":"compressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}},{"id":"diff_id:V1::Hash-instance-method","html_id":"diff_id:V1::Hash-instance-method","name":"diff_id","doc":"DiffID returns the Hash of the uncompressed layer.","summary":"<p>DiffID returns the Hash of the uncompressed layer.</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L8","def":{"name":"diff_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":"Digest returns the Hash of the compressed layer.","summary":"<p>Digest returns the Hash of the compressed layer.</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L6","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":"MediaType returns the media type of the layer","summary":"<p>MediaType returns the media type of the layer</p>","abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L16","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"Size returns the compressed size of the layer","summary":"<p>Size returns the compressed size of the layer</p>","abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L14","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"uncompressed:IO-instance-method","html_id":"uncompressed:IO-instance-method","name":"uncompressed","doc":"Uncompressed returns an io.ReadCloser for the uncompressed layer contents.","summary":"<p>Uncompressed returns an io.ReadCloser for the uncompressed layer contents.</p>","abstract":true,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/layer.cr#L12","def":{"name":"uncompressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Logger","path":"V1/Logger.html","kind":"module","full_name":"V1::Logger","name":"Logger","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/logger.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[{"id":"debug(msg)-class-method","html_id":"debug(msg)-class-method","name":"debug","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr#L16","def":{"name":"debug","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.debug(msg)"}},{"id":"error(msg)-class-method","html_id":"error(msg)-class-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr#L28","def":{"name":"error","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.error(msg)"}},{"id":"fatal(msg)-class-method","html_id":"fatal(msg)-class-method","name":"fatal","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr#L24","def":{"name":"fatal","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.fatal(msg)"}},{"id":"info(msg)-class-method","html_id":"info(msg)-class-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr#L12","def":{"name":"info","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.info(msg)"}},{"id":"warn(msg)-class-method","html_id":"warn(msg)-class-method","name":"warn","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"args_string":"(msg)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/logger.cr#L20","def":{"name":"warn","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.warn(msg)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Manifest","path":"V1/Manifest.html","kind":"struct","full_name":"V1::Manifest","name":"Manifest","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/manifest.cr","line_number":8,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Manifest represents the OCI image manifest in a structured way.","summary":"<p>Manifest represents the OCI image manifest in a structured way.</p>","class_methods":[],"constructors":[{"id":"new(schema_version:Int,media_type,config)-class-method","html_id":"new(schema_version:Int,media_type,config)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"schema_version","doc":null,"default_value":"","external_name":"schema_version","restriction":"Int"},{"name":"media_type","doc":null,"default_value":"","external_name":"media_type","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""}],"args_string":"(schema_version : Int, media_type, config)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/manifest.cr#L17","def":{"name":"new","args":[{"name":"schema_version","doc":null,"default_value":"","external_name":"schema_version","restriction":"Int"},{"name":"media_type","doc":null,"default_value":"","external_name":"media_type","restriction":""},{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(schema_version, media_type, config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_179:JSON::PullParser)-class-method","html_id":"new(__temp_179:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_179","doc":null,"default_value":"","external_name":"__temp_179","restriction":"::JSON::PullParser"}],"args_string":"(__temp_179 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_179","doc":null,"default_value":"","external_name":"__temp_179","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_179)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"annotations:::Hash(String,String)?-instance-method","html_id":"annotations:::Hash(String,String)?-instance-method","name":"annotations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, String)?","source_link":null,"def":{"name":"annotations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, String) | ::Nil","visibility":"Public","body":"@annotations"}},{"id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","html_id":"annotations=(_annotations:::Hash(String,String)?)-instance-method","name":"annotations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"args_string":"(_annotations : ::Hash(String, String)?)","source_link":null,"def":{"name":"annotations=","args":[{"name":"_annotations","doc":null,"default_value":"","external_name":"_annotations","restriction":"::Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@annotations = _annotations"}},{"id":"config:Descriptor-instance-method","html_id":"config:Descriptor-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Descriptor","source_link":null,"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Descriptor","visibility":"Public","body":"@config"}},{"id":"config=(_config:Descriptor)-instance-method","html_id":"config=(_config:Descriptor)-instance-method","name":"config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"Descriptor"}],"args_string":"(_config : Descriptor)","source_link":null,"def":{"name":"config=","args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"Descriptor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config = _config"}},{"id":"layers:Array(Descriptor)-instance-method","html_id":"layers:Array(Descriptor)-instance-method","name":"layers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Descriptor)","source_link":null,"def":{"name":"layers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Descriptor)","visibility":"Public","body":"@layers"}},{"id":"layers=(_layers:Array(Descriptor))-instance-method","html_id":"layers=(_layers:Array(Descriptor))-instance-method","name":"layers=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_layers","doc":null,"default_value":"","external_name":"_layers","restriction":"Array(Descriptor)"}],"args_string":"(_layers : Array(Descriptor))","source_link":null,"def":{"name":"layers=","args":[{"name":"_layers","doc":null,"default_value":"","external_name":"_layers","restriction":"Array(Descriptor)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layers = _layers"}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Types::MediaType","source_link":null,"def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":"@media_type"}},{"id":"media_type=(_media_type:Types::MediaType)-instance-method","html_id":"media_type=(_media_type:Types::MediaType)-instance-method","name":"media_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType"}],"args_string":"(_media_type : Types::MediaType)","source_link":null,"def":{"name":"media_type=","args":[{"name":"_media_type","doc":null,"default_value":"","external_name":"_media_type","restriction":"Types::MediaType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@media_type = _media_type"}},{"id":"schema_version:Int64?-instance-method","html_id":"schema_version:Int64?-instance-method","name":"schema_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"schema_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@schema_version"}},{"id":"schema_version=(_schema_version:Int64?)-instance-method","html_id":"schema_version=(_schema_version:Int64?)-instance-method","name":"schema_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_schema_version","doc":null,"default_value":"","external_name":"_schema_version","restriction":"Int64 | ::Nil"}],"args_string":"(_schema_version : Int64?)","source_link":null,"def":{"name":"schema_version=","args":[{"name":"_schema_version","doc":null,"default_value":"","external_name":"_schema_version","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@schema_version = _schema_version"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _schema_version = @schema_version\n  if _schema_version.nil?\n  else\n    json.field(\"schemaVersion\") do\n      _schema_version.to_json(json)\n    end\n  end\n  _media_type = @media_type\n  if _media_type.nil?\n  else\n    json.field(\"mediaType\") do\n      if _media_type\n        Types::MediaType.to_json(_media_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _config = @config\n  if _config.nil?\n  else\n    json.field(\"config\") do\n      _config.to_json(json)\n    end\n  end\n  _layers = @layers\n  if _layers.nil?\n  else\n    json.field(\"layers\") do\n      _layers.to_json(json)\n    end\n  end\n  _annotations = @annotations\n  if _annotations.nil?\n  else\n    json.field(\"annotations\") do\n      _annotations.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Mutate","path":"V1/Mutate.html","kind":"module","full_name":"V1::Mutate","name":"Mutate","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/mutate/image.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/image.cr"},{"filename":"v1/mutate/mutate.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr"},{"filename":"v1/mutate/rebase.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/rebase.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"WHITEOUT_PREFIX","name":"WHITEOUT_PREFIX","value":"\".wh.\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Mutate","kind":"module","full_name":"V1::Mutate","name":"Mutate"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module provides facilities for mutating v1.Images of any kind.","summary":"<p>Module provides facilities for mutating v1.Images of any kind.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"append(base:V1::Image,adds:Array(Addendum))-instance-method","html_id":"append(base:V1::Image,adds:Array(Addendum))-instance-method","name":"append","doc":"append will apply the list of Addendum to the base image","summary":"<p>append will apply the list of Addendum to the base image</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"adds","doc":null,"default_value":"","external_name":"adds","restriction":"Array(Addendum)"}],"args_string":"(base : V1::Image, adds : Array(Addendum))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L20","def":{"name":"append","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"adds","doc":null,"default_value":"","external_name":"adds","restriction":"Array(Addendum)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if adds.size > 0\nelse\n  return base\nend\nvalidate(adds)\nImage.new(base: base, adds: adds)\n"}},{"id":"append_layers(base:V1::Image,layers:Array(V1::Layer))-instance-method","html_id":"append_layers(base:V1::Image,layers:Array(V1::Layer))-instance-method","name":"append_layers","doc":"append_layers applies layers to a base image","summary":"<p>append_layers applies layers to a base image</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Array(V1::Layer)"}],"args_string":"(base : V1::Image, layers : Array(V1::Layer))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L13","def":{"name":"append_layers","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Array(V1::Layer)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"additions = Array(Addendum).new(layers.size)\nlayers.each do |l|\n  additions << Addendum.new(layer: l)\nend\nappend(base, additions)\n"}},{"id":"canonical(img:V1::Image)-instance-method","html_id":"canonical(img:V1::Image)-instance-method","name":"canonical","doc":"canonical is a helper function to combine Time and configFile\nto remove any randomness during a docker build.","summary":"<p>canonical is a helper function to combine Time and configFile to remove any randomness during a docker build.</p>","abstract":false,"args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"args_string":"(img : V1::Image)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L196","def":{"name":"canonical","args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"created = (Time.unix(0)).shift(0, 0)\nimg = time(img, created)\ncf = img.config_file\ncfg = cf.dup\ncfg.container = \"\"\ncfg.config.hostname = \"\"\ncfg.container_config.hostname = \"\"\ncfg.docker_version = \"\"\nconfig_file(img, cfg)\n"}},{"id":"config(base:V1::Image,cfg:V1::Config)-instance-method","html_id":"config(base:V1::Image,cfg:V1::Config)-instance-method","name":"config","doc":"config mutates the provided V1::Image to have the provided V1::Config","summary":"<p>config mutates the provided V1::Image to have the provided V1::Config</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"cfg","doc":null,"default_value":"","external_name":"cfg","restriction":"V1::Config"}],"args_string":"(base : V1::Image, cfg : V1::Config)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L31","def":{"name":"config","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"cfg","doc":null,"default_value":"","external_name":"cfg","restriction":"V1::Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cf = base.config_file\ncf.config = cfg\nconfig_file(base, cf)\n"}},{"id":"config_file(base:V1::Image,cfg:V1::ConfigFile)-instance-method","html_id":"config_file(base:V1::Image,cfg:V1::ConfigFile)-instance-method","name":"config_file","doc":"config_file mutates the provided V1::Image to have the provided V1::ConfigFile","summary":"<p>config_file mutates the provided V1::Image to have the provided V1::ConfigFile</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"cfg","doc":null,"default_value":"","external_name":"cfg","restriction":"V1::ConfigFile"}],"args_string":"(base : V1::Image, cfg : V1::ConfigFile)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L38","def":{"name":"config_file","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"cfg","doc":null,"default_value":"","external_name":"cfg","restriction":"V1::ConfigFile"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = base.manifest\nImage.new(base: base, manifest: m, config_file: cfg)\n"}},{"id":"created_at(base:V1::Image,created:Time)-instance-method","html_id":"created_at(base:V1::Image,created:Time)-instance-method","name":"created_at","doc":"created_at mutates the provided V1::Image to have the provided Time","summary":"<p>created_at mutates the provided V1::Image to have the provided Time</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"created","doc":null,"default_value":"","external_name":"created","restriction":"Time"}],"args_string":"(base : V1::Image, created : Time)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L48","def":{"name":"created_at","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":"V1::Image"},{"name":"created","doc":null,"default_value":"","external_name":"created","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cf = base.config_file\ncfg = cf.dup\ncfg.created = created\nconfig_file(base, cfg)\n"}},{"id":"extract(img:V1::Image,w:IO):Nil-instance-method","html_id":"extract(img:V1::Image,w:IO):Nil-instance-method","name":"extract","doc":null,"summary":null,"abstract":false,"args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"args_string":"(img : V1::Image, w : IO) : Nil","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L84","def":{"name":"extract","args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Crystar::Writer.open(w) do |tw|\n  file_map = ::Hash(String, Bool).new\n  layers = img.layers\n  (layers.size - 1).downto(0) do |i|\n    layer = layers[i]\n    layer_reader = layer.uncompressed\n    Crystar::Reader.open(layer_reader) do |tr|\n      tr.each_entry do |hdr|\n        basename = Path[hdr.name].basename\n        dirname = Path[hdr.name].dirname\n        tombstone = basename.starts_with?(WHITEOUT_PREFIX)\n        if tombstone\n          basename = basename[WHITEOUT_PREFIX.size..]\n        end\n        name = hdr.flag.chr == Crystar::DIR ? hdr.name : (Path[dirname].join(basename)).to_s\n        if file_map.has_key?(name)\n          next\n        end\n        if in_whiteout_dir(file_map, name)\n          next\n        end\n        file_map[name] = tombstone || (!(hdr.flag.chr == Crystar::DIR))\n        if !tombstone\n          tw.write_header(hdr)\n          if hdr.size > 0\n            tw.write(V1::Util.read_all(hdr.io))\n          end\n        end\n      end\n    end\n  end\nend"}},{"id":"extract(img:V1::Image)-instance-method","html_id":"extract(img:V1::Image)-instance-method","name":"extract","doc":"extract takes an image and returns an io.ReadCloser containing the image's\nflattened filesystem.\n\nCallers can read the filesystem contents by passing the reader to\nCrystar::Reader, or io.Copy it directly to some output.\n\nIf a caller doesn't read the full contents, they should Close it to free up\nresources used during extraction.\n\nAdapted from https:#github.com/google/containerregistry/blob/master/client/v2_2/docker_image_.py#L731","summary":"<p>extract takes an image and returns an io.ReadCloser containing the image's flattened filesystem.</p>","abstract":false,"args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"args_string":"(img : V1::Image)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L71","def":{"name":"extract","args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pr, pw = IO.pipe\nspawn do\n  extract(img, pw)\n  pw.close\nend\npr\n"}},{"id":"in_whiteout_dir(map:::Hash(String,Bool),file:String)-instance-method","html_id":"in_whiteout_dir(map:::Hash(String,Bool),file:String)-instance-method","name":"in_whiteout_dir","doc":null,"summary":null,"abstract":false,"args":[{"name":"map","doc":null,"default_value":"","external_name":"map","restriction":"::Hash(String, Bool)"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"args_string":"(map : ::Hash(String, Bool), file : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L121","def":{"name":"in_whiteout_dir","args":[{"name":"map","doc":null,"default_value":"","external_name":"map","restriction":"::Hash(String, Bool)"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  if file.blank?\n    break\n  end\n  dirname = Path[file].dirname\n  if file == dirname\n    break\n  end\n  if (  (map.has_key?(dirname)) && map[dirname])\n    return true\n  end\n  file = dirname\nend\nfalse\n"}},{"id":"layer_time(layer:V1::Layer,t:Time)-instance-method","html_id":"layer_time(layer:V1::Layer,t:Time)-instance-method","name":"layer_time","doc":null,"summary":null,"abstract":false,"args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":"V1::Layer"},{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Time"}],"args_string":"(layer : V1::Layer, t : Time)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L172","def":{"name":"layer_time","args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":"V1::Layer"},{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lr = layer.uncompressed\nw = IO::Memory.new\nCrystar::Writer.open(w) do |tw|\n  Crystar::Reader.open(lr) do |tr|\n    tr.each_entry do |hdr|\n      hdr.mod_time = t\n      tw.write_header(hdr)\n      if hdr.flag.chr == Crystar::REG\n        tw.write(V1::Util.read_all(hdr.io))\n      end\n    end\n  end\nend\nb = w.to_slice\nopener = Proc(IO).new do\n  V1::Util.gzip_reader_closer(V1::Util::NoOpCloser.new(IO::Memory.new(b)))\nend\nlayer = Tarball::Layer.from_opener(opener)\nlayer\n"}},{"id":"rebase(orig:V1::Image,old_base:V1::Image,new_base:V1::Image)-instance-method","html_id":"rebase(orig:V1::Image,old_base:V1::Image,new_base:V1::Image)-instance-method","name":"rebase","doc":"rebase returns a new V1::Image where the old_base in orig is replaced by new_base","summary":"<p>rebase returns a new V1::Image where the old_base in orig is replaced by new_base</p>","abstract":false,"args":[{"name":"orig","doc":null,"default_value":"","external_name":"orig","restriction":"V1::Image"},{"name":"old_base","doc":null,"default_value":"","external_name":"old_base","restriction":"V1::Image"},{"name":"new_base","doc":null,"default_value":"","external_name":"new_base","restriction":"V1::Image"}],"args_string":"(orig : V1::Image, old_base : V1::Image, new_base : V1::Image)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/rebase.cr#L5","def":{"name":"rebase","args":[{"name":"orig","doc":null,"default_value":"","external_name":"orig","restriction":"V1::Image"},{"name":"old_base","doc":null,"default_value":"","external_name":"old_base","restriction":"V1::Image"},{"name":"new_base","doc":null,"default_value":"","external_name":"new_base","restriction":"V1::Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"orig_layers = orig.layers\nold_base_layers = old_base.layers\nif old_base_layers.size > orig_layers.size\n  raise(\"image #{orig} is not based on #{old_base} (too few layers)\")\nend\nold_base_layers.each_with_index do |l, i|\n  old_layer_digest = l.digest\n  orig_layer_digest = orig_layers[i].digest\n  if old_layer_digest == orig_layer_digest\n  else\n    raise(\"image #{orig} is not based on #{old_base} (layer #{i} mismatch)\")\n  end\nend\norig_config = orig.config_file\nif orig_config.nil?\n  raise(\"unable to get config file of orig image\")\nelse\n  rebased_image = config(Empty::IMAGE, orig_config.config.dup)\n  new_base_layers = new_base.layers\n  new_config = new_base.config_file\n  new_base_layers.each_with_index do |l, i|\n    rebased_image = append(rebased_image, [Addendum.new(layer: l, history: new_config.try do |__arg0|\n      __arg0.history.try(&.[](i))\n    end)])\n  end\n  start = old_base_layers.size\n  orig_layers[start..].each_with_index do |l, i|\n    rebased_image = append(rebased_image, [Addendum.new(layer: l, history: orig_config.try do |__arg2|\n      __arg2.history.try(&.[](start + i))\n    end)])\n  end\n  rebased_image\nend\n"}},{"id":"time(img:V1::Image,t:Time)-instance-method","html_id":"time(img:V1::Image,t:Time)-instance-method","name":"time","doc":"time sets all timestamps in an image to the given timestamp.","summary":"<p>time sets all timestamps in an image to the given timestamp.</p>","abstract":false,"args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Time"}],"args_string":"(img : V1::Image, t : Time)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L133","def":{"name":"time","args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_image = Empty::IMAGE\nlayers = img.layers\nnew_layers = Array(V1::Layer).new\nlayers.each do |layer|\n  new_layer = layer_time(layer, t)\n  new_layers << new_layer\nend\nnew_image = append_layers(new_image, new_layers)\nocf = img.config_file\nif ocf.nil?\n  raise(\"Unable to get config file of image\")\nelse\n  cf = new_image.config_file\n  if !cf.nil?\n    cfg = cf.dup\n    if !ocf.config.nil?\n      cfg.config = ocf.config\n    end\n    if !ocf.container_config.nil?\n      cfg.container_config = ocf.container_config\n    end\n    cfg.created = t\n    cfg.history.try(&.each do |h|\n      h.created = t\n    end)\n    config_file(new_image, cfg)\n  end\nend\n"}},{"id":"validate(adds:Array(Addendum)):Nil-instance-method","html_id":"validate(adds:Array(Addendum)):Nil-instance-method","name":"validate","doc":null,"summary":null,"abstract":false,"args":[{"name":"adds","doc":null,"default_value":"","external_name":"adds","restriction":"Array(Addendum)"}],"args_string":"(adds : Array(Addendum)) : Nil","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L55","def":{"name":"validate","args":[{"name":"adds","doc":null,"default_value":"","external_name":"adds","restriction":"Array(Addendum)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"adds.each do |add|\n  if add.layer.nil?\n    raise(\"Unable to add a nil layer to the image\")\n  end\nend"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Mutate/Addendum","path":"V1/Mutate/Addendum.html","kind":"struct","full_name":"V1::Mutate::Addendum","name":"Addendum","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/mutate/mutate.cr","line_number":10,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Mutate","kind":"module","full_name":"V1::Mutate","name":"Mutate"},"doc":"Addendum contains layers and history to be appended to a base image","summary":"<p>Addendum contains layers and history to be appended to a base image</p>","class_methods":[],"constructors":[{"id":"new(layer:V1::Layer,history:V1::History?=nil)-class-method","html_id":"new(layer:V1::Layer,history:V1::History?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":"V1::Layer"},{"name":"history","doc":null,"default_value":"nil","external_name":"history","restriction":"V1::History | ::Nil"}],"args_string":"(layer : V1::Layer, history : V1::History? = <span class=\"n\">nil</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L10","def":{"name":"new","args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":"V1::Layer"},{"name":"history","doc":null,"default_value":"nil","external_name":"history","restriction":"V1::History | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(layer, history)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L10","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@layer.clone, @history.clone)"}},{"id":"copy_with(layer_layer=@layer,history_history=@history)-instance-method","html_id":"copy_with(layer_layer=@layer,history_history=@history)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_layer","doc":null,"default_value":"@layer","external_name":"layer","restriction":""},{"name":"_history","doc":null,"default_value":"@history","external_name":"history","restriction":""}],"args_string":"(layer _layer = @layer, history _history = @history)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/mutate/mutate.cr#L10","def":{"name":"copy_with","args":[{"name":"_layer","doc":null,"default_value":"@layer","external_name":"layer","restriction":""},{"name":"_history","doc":null,"default_value":"@history","external_name":"history","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_layer, _history)"}},{"id":"history:V1::History?-instance-method","html_id":"history:V1::History?-instance-method","name":"history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::History?","source_link":null,"def":{"name":"history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::History | ::Nil","visibility":"Public","body":"@history"}},{"id":"layer:V1::Layer-instance-method","html_id":"layer:V1::Layer-instance-method","name":"layer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Layer","source_link":null,"def":{"name":"layer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":"@layer"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","path":"V1/Partial.html","kind":"module","full_name":"V1::Partial","name":"Partial","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/partial.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/partial.cr"},{"filename":"v1/partial/image.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/image.cr"},{"filename":"v1/partial/with.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"},{"filename":"v1/partial/compressed.cr","line_number":8,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr"},{"filename":"v1/partial/uncompressed.cr","line_number":9,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Partial defines methods for building up a V1::Image from\nminimal subsets that are sufficient for defining a V1::Image.","summary":"<p>Module Partial defines methods for building up a V1::Image from minimal subsets that are sufficient for defining a V1::Image.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blob_size(i:WithManifest,h:V1::Hash)-instance-method","html_id":"blob_size(i:WithManifest,h:V1::Hash)-instance-method","name":"blob_size","doc":"blob_size is a helper for implementing v1.Image","summary":"<p>blob_size is a helper for implementing v1.Image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifest"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(i : WithManifest, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L171","def":{"name":"blob_size","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifest"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = i.manifest\nm.layers.each_with_index do |l, _|\n  if l.digest == h\n    return l.size\n  end\nend\nraise(\"blob #{h} not found\")\n"}},{"id":"blob_to_diff_id(i:WithManifestAndConfigFile,h:V1::Hash)-instance-method","html_id":"blob_to_diff_id(i:WithManifestAndConfigFile,h:V1::Hash)-instance-method","name":"blob_to_diff_id","doc":"blob_to_diff_id is a helper for mapping between compressed\nand uncompressed blob hashes.","summary":"<p>blob_to_diff_id is a helper for mapping between compressed and uncompressed blob hashes.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifestAndConfigFile"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(i : WithManifestAndConfigFile, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L191","def":{"name":"blob_to_diff_id","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifestAndConfigFile"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"blobs = fs_layers(i)\ndiff_ids = diff_ids(i)\nif blobs.size == diff_ids.size\nelse\n  raise(\"mismatched fs layers (#{blobs.size}) and diff ids (#{diff_ids.size})\")\nend\nblobs.each_with_index do |blob, idx|\n  if blob == h\n    return diff_ids[idx]\n  end\nend\nraise(\"unknown blob #{h}\")\n"}},{"id":"compressed_to_image(cic:CompressedImageCore)-instance-method","html_id":"compressed_to_image(cic:CompressedImageCore)-instance-method","name":"compressed_to_image","doc":"compressed_to_image fills in the missing methods from a CompressedImageCore\nso that it implements v1.Image","summary":"<p>compressed_to_image fills in the missing methods from a CompressedImageCore so that it implements v1.Image</p>","abstract":false,"args":[{"name":"cic","doc":null,"default_value":"","external_name":"cic","restriction":"CompressedImageCore"}],"args_string":"(cic : CompressedImageCore)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/partial.cr#L14","def":{"name":"compressed_to_image","args":[{"name":"cic","doc":null,"default_value":"","external_name":"cic","restriction":"CompressedImageCore"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CompressedImageExtender.new(cic)"}},{"id":"compressed_to_layer(ul)-instance-method","html_id":"compressed_to_layer(ul)-instance-method","name":"compressed_to_layer","doc":"fills in the missing methods from a compressed layer, so that\nit implements V1::Layer","summary":"<p>fills in the missing methods from a compressed layer, so that it implements V1::Layer</p>","abstract":false,"args":[{"name":"ul","doc":null,"default_value":"","external_name":"ul","restriction":""}],"args_string":"(ul)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/partial.cr#L8","def":{"name":"compressed_to_layer","args":[{"name":"ul","doc":null,"default_value":"","external_name":"ul","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CompressedLayerExtender.new(ul)"}},{"id":"config_file(i:WithRawConfigFile)-instance-method","html_id":"config_file(i:WithRawConfigFile)-instance-method","name":"config_file","doc":"config_file is a helper for implementing v1 image","summary":"<p>config_file is a helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawConfigFile"}],"args_string":"(i : WithRawConfigFile)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L11","def":{"name":"config_file","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawConfigFile"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b = i.raw_config_file\nV1.parse_config_file(IO::Memory.new(b))\n"}},{"id":"config_layer(i)-instance-method","html_id":"config_layer(i)-instance-method","name":"config_layer","doc":"ConfigLayer implements v1.Layer from the raw config bytes.\nThis is so that clients (e.g. remote) can access the config as a blob.","summary":"<p>ConfigLayer implements v1.Layer from the raw config bytes.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L67","def":{"name":"config_layer","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !(i.responds_to?(:raw_config_file))\n  pp(i)\n  raise(\"Image doesn't comply with Partial::WithRawConfigFile protocol\")\nend\nh = config_name(i.as(WithRawConfigFile))\nrcfg = i.raw_config_file\nif rcfg.nil?\n  raise(\"Unable to get raw config file\")\nelse\n  ConfigLayer.new(hash: h, content: rcfg)\nend\n"}},{"id":"config_name(i:WithRawConfigFile)-instance-method","html_id":"config_name(i:WithRawConfigFile)-instance-method","name":"config_name","doc":"config_name is a helper for implementing v1 image","summary":"<p>config_name is a helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawConfigFile"}],"args_string":"(i : WithRawConfigFile)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L17","def":{"name":"config_name","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawConfigFile"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  b = i.raw_config_file\n  if b.nil?\n    raise(\"\")\n  else\n    h, _ = V1::Hash.sha256(IO::Memory.new(b))\n    h\n  end\nrescue exception\n  V1::Hash.new(\"\", \"\")\nend"}},{"id":"diff_ids(i:WithConfigFile)-instance-method","html_id":"diff_ids(i:WithConfigFile)-instance-method","name":"diff_ids","doc":"helper for implementing v1 image","summary":"<p>helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithConfigFile"}],"args_string":"(i : WithConfigFile)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L89","def":{"name":"diff_ids","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithConfigFile"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cfg = i.config_file\nif (cfg.nil?)\n  raise(\"config file not found. returned nil\")\nelse\n  cfg.rootfs.diff_ids\nend\n"}},{"id":"diff_to_blob(i:WithManifestAndConfigFile,h:V1::Hash)-instance-method","html_id":"diff_to_blob(i:WithManifestAndConfigFile,h:V1::Hash)-instance-method","name":"diff_to_blob","doc":"diff_to_blob is a helper for mapping between uncompressed and compressed blob hashes","summary":"<p>diff_to_blob is a helper for mapping between uncompressed and compressed blob hashes</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifestAndConfigFile"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(i : WithManifestAndConfigFile, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L204","def":{"name":"diff_to_blob","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifestAndConfigFile"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"blobs = fs_layers(i)\ndiff_ids = diff_ids(i)\nif blobs.size == diff_ids.size\nelse\n  raise(\"mismatched fs layers (#{blobs.size}) and diff ids (#{diff_ids.size})\")\nend\ndiff_ids.each_with_index do |diff, idx|\n  if diff == h\n    return blobs[idx]\n  end\nend\nraise(\"unknown diffID #{h}\")\n"}},{"id":"digest(i:WithRawManifest)-instance-method","html_id":"digest(i:WithRawManifest)-instance-method","name":"digest","doc":"digest is helper for implementing v1 image","summary":"<p>digest is helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawManifest"}],"args_string":"(i : WithRawManifest)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L123","def":{"name":"digest","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawManifest"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  mb = i.raw_manifest\n  if mb.nil?\n    raise(\"\")\n  else\n    digest, _ = V1::Hash.sha256(IO::Memory.new(mb))\n    digest\n  end\nrescue exception\n  V1::Hash.new(\"\", \"\")\nend"}},{"id":"fs_layers(mf:WithManifest)-instance-method","html_id":"fs_layers(mf:WithManifest)-instance-method","name":"fs_layers","doc":"fs_layers is a helper for implementing v1 image","summary":"<p>fs_layers is a helper for implementing v1 image</p>","abstract":false,"args":[{"name":"mf","doc":null,"default_value":"","external_name":"mf","restriction":"WithManifest"}],"args_string":"(mf : WithManifest)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L159","def":{"name":"fs_layers","args":[{"name":"mf","doc":null,"default_value":"","external_name":"mf","restriction":"WithManifest"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = mf.manifest\nif m.nil?\n  raise(\"Unable to get manifest\")\nelse\n  fsl = Array(V1::Hash).new(m.layers.size)\n  m.layers.each do |l|\n    fsl << l.digest\n  end\n  fsl\nend\n"}},{"id":"layer(wul:WithUncompressedLayer,h:V1::Hash)-instance-method","html_id":"layer(wul:WithUncompressedLayer,h:V1::Hash)-instance-method","name":"layer","doc":"Layer is the same as Blob, but takes the \"diff id\".","summary":"<p>Layer is the same as Blob, but takes the \"diff id\".</p>","abstract":false,"args":[{"name":"wul","doc":null,"default_value":"","external_name":"wul","restriction":"WithUncompressedLayer"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(wul : WithUncompressedLayer, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L111","def":{"name":"layer","args":[{"name":"wul","doc":null,"default_value":"","external_name":"wul","restriction":"WithUncompressedLayer"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = wul.uncompressed_layer(h)\nV1::Util.gzip_reader_closer(rc)\n"}},{"id":"manifest(i:WithRawManifest)-instance-method","html_id":"manifest(i:WithRawManifest)-instance-method","name":"manifest","doc":"manifest is a helper for implementing v1 image","summary":"<p>manifest is a helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawManifest"}],"args_string":"(i : WithRawManifest)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L136","def":{"name":"manifest","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithRawManifest"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b = i.raw_manifest\nif (b)\n  io = IO::Memory.new(b)\nelse\n  io = IO::Memory.new\nend\nV1.parse_manifest(io)\n"}},{"id":"raw_config_file(i:WithConfigFile):Bytes-instance-method","html_id":"raw_config_file(i:WithConfigFile):Bytes-instance-method","name":"raw_config_file","doc":"helper for implementing v1 image","summary":"<p>helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithConfigFile"}],"args_string":"(i : WithConfigFile) : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L99","def":{"name":"raw_config_file","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithConfigFile"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"cfg = i.config_file\ncfg.to_json.to_slice.dup\n"}},{"id":"raw_manifest(i:WithManifest)-instance-method","html_id":"raw_manifest(i:WithManifest)-instance-method","name":"raw_manifest","doc":"raw_manifest is a helper for implementing v1 image","summary":"<p>raw_manifest is a helper for implementing v1 image</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifest"}],"args_string":"(i : WithManifest)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L154","def":{"name":"raw_manifest","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"WithManifest"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"i.manifest.try do |__arg0|\n  __arg0.to_json.to_slice.dup\nend"}},{"id":"uncompressed_blob(b:WithBlob,h:V1::Hash)-instance-method","html_id":"uncompressed_blob(b:WithBlob,h:V1::Hash)-instance-method","name":"uncompressed_blob","doc":"uncompressed_blob returns an IO for streaming the blob's contents\nuncompressed","summary":"<p>uncompressed_blob returns an IO for streaming the blob's contents uncompressed</p>","abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"WithBlob"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(b : WithBlob, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L224","def":{"name":"uncompressed_blob","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"WithBlob"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = b.blob(h)\nV1::Util.gunzip_read_closer(rc)\n"}},{"id":"uncompressed_to_image(uic:UncompressedImageCore)-instance-method","html_id":"uncompressed_to_image(uic:UncompressedImageCore)-instance-method","name":"uncompressed_to_image","doc":"fills in the missing methods from an uncompressedimagecore so that it implements V1::Image","summary":"<p>fills in the missing methods from an uncompressedimagecore so that it implements V1::Image</p>","abstract":false,"args":[{"name":"uic","doc":null,"default_value":"","external_name":"uic","restriction":"UncompressedImageCore"}],"args_string":"(uic : UncompressedImageCore)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/partial.cr#L19","def":{"name":"uncompressed_to_image","args":[{"name":"uic","doc":null,"default_value":"","external_name":"uic","restriction":"UncompressedImageCore"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UncompressedImageExtender.new(uic)"}},{"id":"uncompressed_to_layer(ul:UncompressedLayer)-instance-method","html_id":"uncompressed_to_layer(ul:UncompressedLayer)-instance-method","name":"uncompressed_to_layer","doc":"uncompressed_to_layer fills int he missing methods from an uncompressed layer\nso that it implements V1::Layer","summary":"<p>uncompressed_to_layer fills int he missing methods from an uncompressed layer so that it implements V1::Layer</p>","abstract":false,"args":[{"name":"ul","doc":null,"default_value":"","external_name":"ul","restriction":"UncompressedLayer"}],"args_string":"(ul : UncompressedLayer)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/partial.cr#L25","def":{"name":"uncompressed_to_layer","args":[{"name":"ul","doc":null,"default_value":"","external_name":"ul","restriction":"UncompressedLayer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UnCompressedLayerExtender.new(ul)"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/CompressedImageCore","path":"V1/Partial/CompressedImageCore.html","kind":"module","full_name":"V1::Partial::CompressedImageCore","name":"CompressedImageCore","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/ImageCore","kind":"module","full_name":"V1::Partial::ImageCore","name":"ImageCore"}],"locations":[{"filename":"v1/partial/compressed.cr","line_number":11,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/ImageCore","kind":"module","full_name":"V1::Partial::ImageCore","name":"ImageCore"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"CompressedImageCore represents the base minimum interface a natively\ncompressed image must implement for us to produce a v1.Image.","summary":"<p>CompressedImageCore represents the base minimum interface a natively compressed image must implement for us to produce a v1.Image.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"layer_by_digest(h:V1::Hash):CompressedLayer-instance-method","html_id":"layer_by_digest(h:V1::Hash):CompressedLayer-instance-method","name":"layer_by_digest","doc":"variation on the V1 Image method, which returns\na compressed layer instead","summary":"<p>variation on the V1 Image method, which returns a compressed layer instead</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : CompressedLayer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L19","def":{"name":"layer_by_digest","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CompressedLayer","visibility":"Public","body":""}},{"id":"raw_manifest:Bytes-instance-method","html_id":"raw_manifest:Bytes-instance-method","name":"raw_manifest","doc":"returns the serialized bytes of the manifest.","summary":"<p>returns the serialized bytes of the manifest.</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L15","def":{"name":"raw_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/CompressedLayer","path":"V1/Partial/CompressedLayer.html","kind":"module","full_name":"V1::Partial::CompressedLayer","name":"CompressedLayer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/compressed.cr","line_number":24,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream/Layer","kind":"class","full_name":"V1::Stream::Layer","name":"Layer"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"CompressedLayer represents the bare minimum interface a natively\ncompressed layer must implement for us to produce a v1.Layer","summary":"<p>CompressedLayer represents the bare minimum interface a natively compressed layer must implement for us to produce a v1.Layer</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"compressed:IO-instance-method","html_id":"compressed:IO-instance-method","name":"compressed","doc":"returns an IO for the compressed layer","summary":"<p>returns an IO for the compressed layer</p>","abstract":true,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L28","def":{"name":"compressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}},{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":" returns the Hash of the compressed layer.","summary":"<p>returns the Hash of the compressed layer.</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L26","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":"returns the media type of compressed layer","summary":"<p>returns the media type of compressed layer</p>","abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L32","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"returns the compressed size of the layer","summary":"<p>returns the compressed size of the layer</p>","abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/compressed.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/ImageCore","path":"V1/Partial/ImageCore.html","kind":"module","full_name":"V1::Partial::ImageCore","name":"ImageCore","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/image.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/image.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/CompressedImageCore","kind":"module","full_name":"V1::Partial::CompressedImageCore","name":"CompressedImageCore"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/UncompressedImageCore","kind":"module","full_name":"V1::Partial::UncompressedImageCore","name":"UncompressedImageCore"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"imageCore is the core set of properties without which we cannot build a v1.Image","summary":"<p>imageCore is the core set of properties without which we cannot build a v1.Image</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/image.cr#L8","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"raw_config_file:Bytes-instance-method","html_id":"raw_config_file:Bytes-instance-method","name":"raw_config_file","doc":"returns the serialized bytes of this image's config file.","summary":"<p>returns the serialized bytes of this image's config file.</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/image.cr#L7","def":{"name":"raw_config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/UncompressedImageCore","path":"V1/Partial/UncompressedImageCore.html","kind":"module","full_name":"V1::Partial::UncompressedImageCore","name":"UncompressedImageCore","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/ImageCore","kind":"module","full_name":"V1::Partial::ImageCore","name":"ImageCore"}],"locations":[{"filename":"v1/partial/uncompressed.cr","line_number":72,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/ImageCore","kind":"module","full_name":"V1::Partial::ImageCore","name":"ImageCore"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"UncompressedImageCore represents the bare minimum interface a natively\nuncompressed image must implement for us to produce V1::Image","summary":"<p>UncompressedImageCore represents the bare minimum interface a natively uncompressed image must implement for us to produce V1::Image</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"layer_by_diff_id(h:V1::Hash):UncompressedLayer-instance-method","html_id":"layer_by_diff_id(h:V1::Hash):UncompressedLayer-instance-method","name":"layer_by_diff_id","doc":"layer_by_diff_id is a variation on the V1.image method, which returns\nan UncompressedLayer instead.","summary":"<p>layer_by_diff_id is a variation on the V1.image method, which returns an UncompressedLayer instead.</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : UncompressedLayer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr#L77","def":{"name":"layer_by_diff_id","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UncompressedLayer","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/UncompressedLayer","path":"V1/Partial/UncompressedLayer.html","kind":"module","full_name":"V1::Partial::UncompressedLayer","name":"UncompressedLayer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/uncompressed.cr","line_number":12,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"UncompressedLayer represents the bare minimum interface a natively\nuncompressed layer must implement for us to produce a v1.Layer","summary":"<p>UncompressedLayer represents the bare minimum interface a natively uncompressed layer must implement for us to produce a v1.Layer</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"diff_id:V1::Hash-instance-method","html_id":"diff_id:V1::Hash-instance-method","name":"diff_id","doc":"diff_id returns the Hash of the uncompressed layer.","summary":"<p>diff_id returns the Hash of the uncompressed layer.</p>","abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr#L14","def":{"name":"diff_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":"returns the mediaType for the compressed layer","summary":"<p>returns the mediaType for the compressed layer</p>","abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr#L20","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"uncompressed:IO-instance-method","html_id":"uncompressed:IO-instance-method","name":"uncompressed","doc":"uncompressed returns an IO for the uncompressed layer contents","summary":"<p>uncompressed returns an IO for the uncompressed layer contents</p>","abstract":true,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/uncompressed.cr#L17","def":{"name":"uncompressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithBlob","path":"V1/Partial/WithBlob.html","kind":"module","full_name":"V1::Partial::WithBlob","name":"WithBlob","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":217,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithBlob defines the subset of v1.Image used by these helper methods","summary":"<p>WithBlob defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blob(h:V1::Hash):IO-instance-method","html_id":"blob(h:V1::Hash):IO-instance-method","name":"blob","doc":"returns an IO for streaming the blob's content","summary":"<p>returns an IO for streaming the blob's content</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L219","def":{"name":"blob","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithConfigFile","path":"V1/Partial/WithConfigFile.html","kind":"module","full_name":"V1::Partial::WithConfigFile","name":"WithConfigFile","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":83,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithManifestAndConfigFile","kind":"module","full_name":"V1::Partial::WithManifestAndConfigFile","name":"WithManifestAndConfigFile"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":" WithConfigFile defines the subset of v1.Image used by these helper methods","summary":"<p>WithConfigFile defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"config_file:V1::ConfigFile-instance-method","html_id":"config_file:V1::ConfigFile-instance-method","name":"config_file","doc":"returns image config file","summary":"<p>returns image config file</p>","abstract":true,"args":[],"args_string":" : V1::ConfigFile","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L85","def":{"name":"config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::ConfigFile","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithDiffID","path":"V1/Partial/WithDiffID.html","kind":"module","full_name":"V1::Partial::WithDiffID","name":"WithDiffID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":230,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"defines the subset of v1.Layer for exposing the DiffID method.","summary":"<p>defines the subset of v1.Layer for exposing the DiffID method.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"diff_id:V1::Hash-instance-method","html_id":"diff_id:V1::Hash-instance-method","name":"diff_id","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L231","def":{"name":"diff_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithManifest","path":"V1/Partial/WithManifest.html","kind":"module","full_name":"V1::Partial::WithManifest","name":"WithManifest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":148,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithManifest defines the subset of v1.Image used by these helper methods","summary":"<p>WithManifest defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"manifest:V1::Manifest-instance-method","html_id":"manifest:V1::Manifest-instance-method","name":"manifest","doc":"returns this image's manifest object","summary":"<p>returns this image's manifest object</p>","abstract":true,"args":[],"args_string":" : V1::Manifest","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L150","def":{"name":"manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Manifest","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithManifestAndConfigFile","path":"V1/Partial/WithManifestAndConfigFile.html","kind":"module","full_name":"V1::Partial::WithManifestAndConfigFile","name":"WithManifestAndConfigFile","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithConfigFile","kind":"module","full_name":"V1::Partial::WithConfigFile","name":"WithConfigFile"}],"locations":[{"filename":"v1/partial/with.cr","line_number":182,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithConfigFile","kind":"module","full_name":"V1::Partial::WithConfigFile","name":"WithConfigFile"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithManifestAndConfigFile defines the subset of v1.Image used by these helper methods","summary":"<p>WithManifestAndConfigFile defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"manifest:V1::Manifest-instance-method","html_id":"manifest:V1::Manifest-instance-method","name":"manifest","doc":"returns this image's manifest object","summary":"<p>returns this image's manifest object</p>","abstract":true,"args":[],"args_string":" : V1::Manifest","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L186","def":{"name":"manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Manifest","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithRawConfigFile","path":"V1/Partial/WithRawConfigFile.html","kind":"module","full_name":"V1::Partial::WithRawConfigFile","name":"WithRawConfigFile","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/MountableImage","kind":"class","full_name":"V1::Remote::MountableImage","name":"MountableImage"}],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithRawConfigFile defines the subset of v1.Image used by these helper methods","summary":"<p>WithRawConfigFile defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"raw_config_file:Bytes-instance-method","html_id":"raw_config_file:Bytes-instance-method","name":"raw_config_file","doc":"returns the serialized bytes of this image's config file.","summary":"<p>returns the serialized bytes of this image's config file.</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L7","def":{"name":"raw_config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithRawManifest","path":"V1/Partial/WithRawManifest.html","kind":"module","full_name":"V1::Partial::WithRawManifest","name":"WithRawManifest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":117,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithRawManifest defines the subset of v1.Image used by these helper methods","summary":"<p>WithRawManifest defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"raw_manifest:Bytes-instance-method","html_id":"raw_manifest:Bytes-instance-method","name":"raw_manifest","doc":"returns the serialized bytes of this image's config file.","summary":"<p>returns the serialized bytes of this image's config file.</p>","abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L119","def":{"name":"raw_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithUncompressedLayer","path":"V1/Partial/WithUncompressedLayer.html","kind":"module","full_name":"V1::Partial::WithUncompressedLayer","name":"WithUncompressedLayer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/partial/with.cr","line_number":105,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial","kind":"module","full_name":"V1::Partial","name":"Partial"},"doc":"WithUncompressedLayer defines the subset of v1.Image used by these helper methods","summary":"<p>WithUncompressedLayer defines the subset of v1.Image used by these helper methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"uncompressed_layer(h:V1::Hash):IO-instance-method","html_id":"uncompressed_layer(h:V1::Hash):IO-instance-method","name":"uncompressed_layer","doc":"is like UncompressedBlob, but takes the \"diff id\".","summary":"<p>is like UncompressedBlob, but takes the \"diff id\".</p>","abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(h : V1::Hash) : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/partial/with.cr#L107","def":{"name":"uncompressed_layer","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Platform","path":"V1/Platform.html","kind":"struct","full_name":"V1::Platform","name":"Platform","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/platform.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/platform.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Represents runtime requirements for an image.\nSee: https://docs.docker.com/registry/spec/manifest-v2-2/#manifest-list","summary":"<p>Represents runtime requirements for an image.</p>","class_methods":[],"constructors":[{"id":"new(__temp_164:JSON::PullParser)-class-method","html_id":"new(__temp_164:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_164","doc":null,"default_value":"","external_name":"__temp_164","restriction":"::JSON::PullParser"}],"args_string":"(__temp_164 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_164","doc":null,"default_value":"","external_name":"__temp_164","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_164)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(architecture=&quot;amd64&quot;,os=&quot;linux&quot;,os_features=[]ofString,features=[]ofString)-class-method","html_id":"new(architecture=&amp;quot;amd64&amp;quot;,os=&amp;quot;linux&amp;quot;,os_features=[]ofString,features=[]ofString)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"architecture","doc":null,"default_value":"\"amd64\"","external_name":"architecture","restriction":""},{"name":"os","doc":null,"default_value":"\"linux\"","external_name":"os","restriction":""},{"name":"os_features","doc":null,"default_value":"[] of String","external_name":"os_features","restriction":""},{"name":"features","doc":null,"default_value":"[] of String","external_name":"features","restriction":""}],"args_string":"(architecture = <span class=\"s\">&quot;amd64&quot;</span>, os = <span class=\"s\">&quot;linux&quot;</span>, os_features = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, features = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/platform.cr#L15","def":{"name":"new","args":[{"name":"architecture","doc":null,"default_value":"\"amd64\"","external_name":"architecture","restriction":""},{"name":"os","doc":null,"default_value":"\"linux\"","external_name":"os","restriction":""},{"name":"os_features","doc":null,"default_value":"[] of String","external_name":"os_features","restriction":""},{"name":"features","doc":null,"default_value":"[] of String","external_name":"features","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(architecture, os, os_features, features)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"architecture:String-instance-method","html_id":"architecture:String-instance-method","name":"architecture","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"architecture","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@architecture"}},{"id":"architecture=(_architecture:String)-instance-method","html_id":"architecture=(_architecture:String)-instance-method","name":"architecture=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_architecture","doc":null,"default_value":"","external_name":"_architecture","restriction":"String"}],"args_string":"(_architecture : String)","source_link":null,"def":{"name":"architecture=","args":[{"name":"_architecture","doc":null,"default_value":"","external_name":"_architecture","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@architecture = _architecture"}},{"id":"can_run(required:self)-instance-method","html_id":"can_run(required:self)-instance-method","name":"can_run","doc":null,"summary":null,"abstract":false,"args":[{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"self"}],"args_string":"(required : <span class=\"k\">self</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/platform.cr#L18","def":{"name":"can_run","args":[{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if required.nil?\n  return true\nend\nif ((required.architecture != architecture) || (required.os != os)) || (required.os_version && (required.os_version != os_version))\n  ((required.variant && (required.variant != variant)) || (required.os_features && (!(required.os_features.to_set.subset?(os_features.to_set))))) || (required.features && (!(required.features.to_set.subset?(features.to_set))))\n  return false\nend\ntrue\n"}},{"id":"compatible_with(target:self)-instance-method","html_id":"compatible_with(target:self)-instance-method","name":"compatible_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"self"}],"args_string":"(target : <span class=\"k\">self</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/platform.cr#L32","def":{"name":"compatible_with","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"target.can_run(self)"}},{"id":"features:Array(String)-instance-method","html_id":"features:Array(String)-instance-method","name":"features","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"features","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@features"}},{"id":"features=(_features:Array(String))-instance-method","html_id":"features=(_features:Array(String))-instance-method","name":"features=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"args_string":"(_features : Array(String))","source_link":null,"def":{"name":"features=","args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@features = _features"}},{"id":"os:String-instance-method","html_id":"os:String-instance-method","name":"os","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"os","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@os"}},{"id":"os=(_os:String)-instance-method","html_id":"os=(_os:String)-instance-method","name":"os=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"args_string":"(_os : String)","source_link":null,"def":{"name":"os=","args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os = _os"}},{"id":"os_features:Array(String)-instance-method","html_id":"os_features:Array(String)-instance-method","name":"os_features","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"os_features","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@os_features"}},{"id":"os_features=(_os_features:Array(String))-instance-method","html_id":"os_features=(_os_features:Array(String))-instance-method","name":"os_features=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os_features","doc":null,"default_value":"","external_name":"_os_features","restriction":"Array(String)"}],"args_string":"(_os_features : Array(String))","source_link":null,"def":{"name":"os_features=","args":[{"name":"_os_features","doc":null,"default_value":"","external_name":"_os_features","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os_features = _os_features"}},{"id":"os_version:String?-instance-method","html_id":"os_version:String?-instance-method","name":"os_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"os_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@os_version"}},{"id":"os_version=(_os_version:String?)-instance-method","html_id":"os_version=(_os_version:String?)-instance-method","name":"os_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os_version","doc":null,"default_value":"","external_name":"_os_version","restriction":"String | ::Nil"}],"args_string":"(_os_version : String?)","source_link":null,"def":{"name":"os_version=","args":[{"name":"_os_version","doc":null,"default_value":"","external_name":"_os_version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os_version = _os_version"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _architecture = @architecture\n  if _architecture.nil?\n  else\n    json.field(\"architecture\") do\n      _architecture.to_json(json)\n    end\n  end\n  _os = @os\n  if _os.nil?\n  else\n    json.field(\"os\") do\n      _os.to_json(json)\n    end\n  end\n  _os_version = @os_version\n  if _os_version.nil?\n  else\n    json.field(\"os.version\") do\n      _os_version.to_json(json)\n    end\n  end\n  _os_features = @os_features\n  if _os_features.nil?\n  else\n    json.field(\"os.features\") do\n      _os_features.to_json(json)\n    end\n  end\n  _variant = @variant\n  if _variant.nil?\n  else\n    json.field(\"variant\") do\n      _variant.to_json(json)\n    end\n  end\n  _features = @features\n  if _features.nil?\n  else\n    json.field(\"features\") do\n      _features.to_json(json)\n    end\n  end\nend"}},{"id":"variant:String?-instance-method","html_id":"variant:String?-instance-method","name":"variant","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"variant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@variant"}},{"id":"variant=(_variant:String?)-instance-method","html_id":"variant=(_variant:String?)-instance-method","name":"variant=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_variant","doc":null,"default_value":"","external_name":"_variant","restriction":"String | ::Nil"}],"args_string":"(_variant : String?)","source_link":null,"def":{"name":"variant=","args":[{"name":"_variant","doc":null,"default_value":"","external_name":"_variant","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@variant = _variant"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Random","path":"V1/Random.html","kind":"module","full_name":"V1::Random","name":"Random","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/random/image.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/random/image.cr"},{"filename":"v1/random/index.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/random/index.cr"},{"filename":"v1/random/random.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/random/random.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Random","kind":"module","full_name":"V1::Random","name":"Random"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Random provides a facility for synthesizing pseudo-random images.","summary":"<p>Module Random provides a facility for synthesizing pseudo-random images.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"image(size:Int64,layers:Int64)-instance-method","html_id":"image(size:Int64,layers:Int64)-instance-method","name":"image","doc":"image returns a pseudo-randomly generated Image.","summary":"<p>image returns a pseudo-randomly generated Image.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Int64"}],"args_string":"(size : Int64, layers : Int64)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/random/random.cr#L6","def":{"name":"image","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"layerz = ::Hash(V1::Hash, V1::Partial::UncompressedLayer).new\n0.upto(layers - 1) do |i|\n  buf = IO::Memory.new\n  Crystar::Writer.open(buf) do |tw|\n    hdr = Crystar::Header.new(name: \"random_file_#{i}.txt\", size: size, flag: Crystar::REGA.ord.to_u8)\n    tw.write_header(hdr)\n    tw.write(::Random::Secure.random_bytes(size))\n  end\n  buf.rewind\n  h, _ = V1::Hash.sha256(buf)\n  layerz[h] = UncompressedLayer.new(diff_id: h, content: buf.to_slice)\nend\ncfg = V1::ConfigFile.new(architecture: \"amd64\", os: \"linux\", rootfs: V1::RootFS.new(type: \"layers\", diff_ids: Array(String).new.tap do |arr|\n  layerz.each_key do |k|\n    arr << k.to_s\n  end\nend), history: Array(V1::History).new.tap do |arr|\n  0.upto(layers - 1) do |i|\n    arr << V1::History.new(author: \"V1::Random.image\", comment: \"this is a random history #{i}\", created_by: \"random\", created: Time.utc)\n  end\nend, config: V1::Config.new)\nV1::Partial.uncompressed_to_image(Image.new(config: cfg, layers: layerz))\n"}},{"id":"index(size:Int,layers:Int,count:Int)-instance-method","html_id":"index(size:Int,layers:Int,count:Int)-instance-method","name":"index","doc":"Index returns a pseudo-randomly generated ImageIndex with count images, each\nhaving the given number of layers of size byteSize.","summary":"<p>Index returns a pseudo-randomly generated ImageIndex with count images, each having the given number of layers of size byteSize.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"args_string":"(size : Int, layers : Int, count : Int)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/random/random.cr#L51","def":{"name":"index","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"manifest = V1::IndexManifest.new(schema_version: 2, manifests: Array(V1::Descriptor).new)\nimages = ::Hash(V1::Hash, V1::Image).new\n0.upto(count - 1) do |_|\n  img = image(size.to_i64, layers.to_i64)\n  raw_manifest = img.raw_manifest\n  if (  rm = raw_manifest)\n    digest, digest_size = V1::Hash.sha256(IO::Memory.new(rm))\n    media_type = img.media_type\n    manifest.manifests << V1::Descriptor.new(digest: digest, size: digest_size, media_type: media_type)\n    images[digest] = img\n  else\n    raise(\"Unable to get Raw manifest\")\n  end\nend\nRandomIndex.new(images: images, manifest: manifest)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","path":"V1/Remote.html","kind":"module","full_name":"V1::Remote","name":"Remote","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/remote/write.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/write.cr"},{"filename":"v1/remote/descriptor.cr","line_number":8,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr"},{"filename":"v1/remote/image.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/image.cr"},{"filename":"v1/remote/index.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/index.cr"},{"filename":"v1/remote/list.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/list.cr"},{"filename":"v1/remote/mount.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr"},{"filename":"v1/remote/options.cr","line_number":8,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr"},{"filename":"v1/remote/remote.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_PLATFORM","name":"DEFAULT_PLATFORM","value":"V1::Platform.new(architecture: \"amd64\", os: \"linux\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Remote provides facilities for reading/writing v1.Images from/to a remote image registry.","summary":"<p>Module Remote provides facilities for reading/writing v1.Images from/to a remote image registry.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"delete(ref:Name::References,*options:Option):Nil-instance-method","html_id":"delete(ref:Name::References,*options:Option):Nil-instance-method","name":"delete","doc":"delete removes the specified image reference from the remote registry.","summary":"<p>delete removes the specified image reference from the remote registry.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, *options : Option) : Nil","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L19","def":{"name":"delete","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"o = make_options(ref.registry, *options)\nscopes = [ref.scope(Transport::DELETE_SCOPE)]\ntr = Transport.new_transport(ref.as_repository.registry, o.auth, o.client, scopes)\nfetcher = Fetcher.new(ref, tr.client)\nuri = fetcher.uri(\"manifests\", ref.identifier)\nresp = fetcher.delete(uri)\nif resp.success?\nelse\n  raise(\"unrecognized status code during DELETE: #{resp.status}; #{resp.body}\")\nend\n"}},{"id":"get(ref:Name::References,*options:Option)-instance-method","html_id":"get(ref:Name::References,*options:Option)-instance-method","name":"get","doc":"Get returns a remote.Descriptor for the given reference. The response from\nthe registry is left un-interpreted, for the most part. This is useful for\nquerying what kind of artifact a reference represents.","summary":"<p>Get returns a remote.Descriptor for the given reference.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, *options : Option)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L60","def":{"name":"get","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"acceptable = [Types::DOCKERMANIFESTSCHEMA2, Types::OCIMANIFESTSCHEMA1, Types::DOCKERMANIFESTLIST, Types::OCIIMAGEINDEX, Types::DOCKERMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA1SIGNED]\n_get(ref, acceptable, *options)\n"}},{"id":"image(ref:Name::References,*options:Option):V1::Image-instance-method","html_id":"image(ref:Name::References,*options:Option):V1::Image-instance-method","name":"image","doc":"image provides access to remote image reference.","summary":"<p>image provides access to remote image reference.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, *options : Option) : V1::Image","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L7","def":{"name":"image","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"V1::Image","visibility":"Public","body":"acceptable = [Types::DOCKERMANIFESTSCHEMA2, Types::OCIMANIFESTSCHEMA1, Types::DOCKERMANIFESTLIST, Types::OCIIMAGEINDEX]\ndesc = _get(ref, acceptable, *options)\ndesc.image\n"}},{"id":"index(ref:Name::References,*options:Option)-instance-method","html_id":"index(ref:Name::References,*options:Option)-instance-method","name":"index","doc":"Index provides access to a remote index reference.","summary":"<p>Index provides access to a remote index reference.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, *options : Option)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L31","def":{"name":"index","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"acceptable = [Types::DOCKERMANIFESTLIST, Types::OCIIMAGEINDEX]\ndesc = _get(ref, acceptable, *options)\ndesc.image_index\n"}},{"id":"list(repo:Name::Repository,*opts:Option)-instance-method","html_id":"list(repo:Name::Repository,*opts:Option)-instance-method","name":"list","doc":"List calls /tags/list for the given repository, returning the list of tags\nin the \"tags\" property.","summary":"<p>List calls /tags/list for the given repository, returning the list of tags in the \"tags\" property.</p>","abstract":false,"args":[{"name":"repo","doc":null,"default_value":"","external_name":"repo","restriction":"Name::Repository"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":"Option"}],"args_string":"(repo : Name::Repository, *opts : Option)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L39","def":{"name":"list","args":[{"name":"repo","doc":null,"default_value":"","external_name":"repo","restriction":"Name::Repository"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":"Option"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = make_options(repo.registry, *opts)\ntr = Transport.new_transport(repo.registry, o.auth, o.client, [repo.scope(Transport::PULL_SCOPE)])\nfetcher = Fetcher.new(repo, tr.client)\nuri = fetcher.uri(\"tags\", \"list\")\nresp = fetcher.get(uri)\nerr = Transport.check_error(resp, 200)\nif err.nil?\nelse\n  raise(err)\nend\ntags = Tags.from_json(resp.body)\ntags.tags\n"}},{"id":"scopes_for_uploading_image(ref:Name::References,layers:Array(V1::Layer))-instance-method","html_id":"scopes_for_uploading_image(ref:Name::References,layers:Array(V1::Layer))-instance-method","name":"scopes_for_uploading_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Array(V1::Layer)"}],"args_string":"(ref : Name::References, layers : Array(V1::Layer))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L143","def":{"name":"scopes_for_uploading_image","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"layers","doc":null,"default_value":"","external_name":"layers","restriction":"Array(V1::Layer)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope_set = ::Hash(String, String).new\nlayers.each_with_index do |l, _|\n  if l.is_a?(V1::Remote::MountableLayer)\n    ml = l.as(V1::Remote::MountableLayer)\n    if ml.reference.as_repository != ref.as_repository\n      scope_set[ml.reference.scope(Transport::PULL_SCOPE)] = \"\"\n    end\n  end\nend\nscopes = Array(String).new\nscopes << (ref.scope(Transport::PUSH_SCOPE))\nscopes = scopes + scope_set.keys\nscopes\n"}},{"id":"with_auth(auth:Authn::Authenticator)-instance-method","html_id":"with_auth(auth:Authn::Authenticator)-instance-method","name":"with_auth","doc":"functional option for overriding the default authenticator for remove operations\nThe default authenticator is Authn::Anonymous","summary":"<p>functional option for overriding the default authenticator for remove operations The default authenticator is Authn::Anonymous</p>","abstract":false,"args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"Authn::Authenticator"}],"args_string":"(auth : Authn::Authenticator)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr#L33","def":{"name":"with_auth","args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"Authn::Authenticator"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Option.new do |o|\n  o.auth = auth\nend"}},{"id":"with_auth_from_keychain(keys:Authn::Keychain)-instance-method","html_id":"with_auth_from_keychain(keys:Authn::Keychain)-instance-method","name":"with_auth_from_keychain","doc":"functional option for overriding the default authenticator for remote operations,\nusing an Authn::KeyChain to find credentials\n\nThe default authenticator is Authn::Anonymous","summary":"<p>functional option for overriding the default authenticator for remote operations, using an Authn::KeyChain to find credentials</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Authn::Keychain"}],"args_string":"(keys : Authn::Keychain)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr#L41","def":{"name":"with_auth_from_keychain","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Authn::Keychain"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Option.new do |o|\n  o.keychain = keys\nend"}},{"id":"with_platform(p:V1::Platform)-instance-method","html_id":"with_platform(p:V1::Platform)-instance-method","name":"with_platform","doc":"a functional option for overriding the default platform that Image and\nDescriptor.Image use for resolving an index to an image.\n\nThe default platform is amd64/linux","summary":"<p>a functional option for overriding the default platform that Image and Descriptor.Image use for resolving an index to an image.</p>","abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"V1::Platform"}],"args_string":"(p : V1::Platform)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr#L49","def":{"name":"with_platform","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"V1::Platform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Option.new do |o|\n  o.platform = p\nend"}},{"id":"with_transport(t:Cossack::Client)-instance-method","html_id":"with_transport(t:Cossack::Client)-instance-method","name":"with_transport","doc":"functional option for overriding default transport for remote operations","summary":"<p>functional option for overriding default transport for remote operations</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Cossack::Client"}],"args_string":"(t : Cossack::Client)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr#L27","def":{"name":"with_transport","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Cossack::Client"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Option.new do |o|\n  o.client = t\nend"}},{"id":"write(ref:Name::References,img:V1::Image,*options:Option)-instance-method","html_id":"write(ref:Name::References,img:V1::Image,*options:Option)-instance-method","name":"write","doc":"write pushes the provided img to the specified image reference","summary":"<p>write pushes the provided img to the specified image reference</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, img : V1::Image, *options : Option)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L72","def":{"name":"write","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ls = img.layers\no = make_options(ref.registry, *options)\nscopes = scopes_for_uploading_image(ref, ls)\ntr = Transport.new_transport(ref.registry, o.auth, o.client, scopes)\nw = Writer.new(ref: ref, client: tr.client)\nuploaded = ::Hash(V1::Hash, Bool).new\ng = V1::Util::Group.new\nls.each_with_index do |l, _|\n  begin\n    h = l.digest\n    if h && (h != V1::Hash.empty)\n      if (uploaded.has_key?(h)) && uploaded[h]\n        V1::Logger.info(\"Skipping uploaded layer : #{h.to_s}\")\n        next\n      end\n      uploaded[h] = true\n    end\n  rescue\n  end\n  proc = ->(x : V1::Layer) do\n    -> do\n      w.upload_one(x)\n    end\n  end\n  g.spawn(proc.call(l))\nend\nbegin\n  l = Partial.config_layer(img)\n  proc = ->(x : V1::Layer) do\n    -> do\n      w.upload_one(x)\n    end\n  end\n  g.spawn(proc.call(l))\n  exc = g.wait\n  if exc.nil?\n  else\n    raise(exc)\n  end\nrescue Stream::ExNotComputed\n  exc = g.wait\n  if exc.nil?\n  else\n    raise(exc)\n  end\n  l = Partial.config_layer(img)\n  w.upload_one(l)\nend\nw.commit_image(img)\n"}},{"id":"write_index(ref:Name::References,ii:V1::ImageIndex,*options:Option)-instance-method","html_id":"write_index(ref:Name::References,ii:V1::ImageIndex,*options:Option)-instance-method","name":"write_index","doc":"write_index pushes the provided ImageIndex to the specified image reference.\nwrite_index will attempt to push all of the referenced manifests before\nattempting to push the ImageIndex, to retain referential integrity.","summary":"<p>write_index pushes the provided ImageIndex to the specified image reference.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"ii","doc":null,"default_value":"","external_name":"ii","restriction":"V1::ImageIndex"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"args_string":"(ref : Name::References, ii : V1::ImageIndex, *options : Option)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/remote.cr#L165","def":{"name":"write_index","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"ii","doc":null,"default_value":"","external_name":"ii","restriction":"V1::ImageIndex"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"Option"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = ii.index_manifest\no = make_options(ref.registry, *options)\nscopes = [ref.scope(Transport::PUSH_SCOPE)]\ntr = Transport.new_transport(ref.registry, o.auth, o.client, scopes)\nw = Writer.new(ref: ref, client: tr.client)\nindex.manifests.each_with_index do |desc, _|\n  ref = Name::Reference.parse_reference(\"#{ref.as_repository.name}@#{desc.digest.to_s}\", true)\n  exists = w.check_existing_manifest(desc.digest, desc.media_type)\n  if exists\n    V1::Logger.info(\"existing manifest: #{desc.digest.to_s}\")\n    next\n  end\n  case desc.media_type\n  when Types::OCIIMAGEINDEX, Types::DOCKERMANIFESTLIST\n    ii = ii.image_index(desc.digest)\n    write_index(ref, ii, with_auth(o.auth))\n  when Types::OCIMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA2\n    img = ii.image(desc.digest)\n    write(ref, img, with_auth(o.auth))\n  end\nend\nw.commit_image(ii)\n"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Descriptor","path":"V1/Remote/Descriptor.html","kind":"class","full_name":"V1::Remote::Descriptor","name":"Descriptor","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/descriptor.cr","line_number":9,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(fetcher,v1,manifest,platform)-class-method","html_id":"new(fetcher,v1,manifest,platform)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"fetcher","doc":null,"default_value":"","external_name":"fetcher","restriction":""},{"name":"v1","doc":null,"default_value":"","external_name":"v1","restriction":""},{"name":"manifest","doc":null,"default_value":"","external_name":"manifest","restriction":""},{"name":"platform","doc":null,"default_value":"","external_name":"platform","restriction":""}],"args_string":"(fetcher, v1, manifest, platform)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L20","def":{"name":"new","args":[{"name":"fetcher","doc":null,"default_value":"","external_name":"fetcher","restriction":""},{"name":"v1","doc":null,"default_value":"","external_name":"v1","restriction":""},{"name":"manifest","doc":null,"default_value":"","external_name":"manifest","restriction":""},{"name":"platform","doc":null,"default_value":"","external_name":"platform","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(fetcher, v1, manifest, platform)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"digest(*args,**options)-instance-method","html_id":"digest(*args,**options)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.digest(*args, **options)"}},{"id":"digest(*args,**options,&block)-instance-method","html_id":"digest(*args,**options,&amp;block)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.digest(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"image-instance-method","html_id":"image-instance-method","name":"image","doc":"Image converts the Descriptor into a v1.Image.\n\nIf the fetched artifact is already an image, it will just return it.\n\nIf the fetched artifact is an index, it will attempt to resolve the index to\na child image with the appropriate platform.\n\nSee WithPlatform to set the desired platform.","summary":"<p>Image converts the Descriptor into a v1.Image.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L31","def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case @v1.media_type\nwhen Types::DOCKERMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA1SIGNED\n  raise(\"unsupported media type : #{@v1.media_type.to_s}\")\nwhen Types::OCIIMAGEINDEX, Types::DOCKERMANIFESTLIST\n  return remote_index.image_by_platform(@platform)\nwhen Types::OCIMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA2\nelse\n  V1::Logger.info(\"unhandled media type : #{@v1.media_type.to_s}\")\nend\nimg_core = V1::Partial.compressed_to_image(remote_image)\nMountableImage.new(image: img_core, reference: @fetcher.ref)\n"}},{"id":"image_index-instance-method","html_id":"image_index-instance-method","name":"image_index","doc":"ImageIndex converts the Descriptor into a v1.ImageIndex.","summary":"<p>ImageIndex converts the Descriptor into a v1.ImageIndex.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L56","def":{"name":"image_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case @v1.media_type\nwhen Types::DOCKERMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA1SIGNED\n  raise(\"unsupported media type : #{@v1.media_type.to_s}\")\nwhen Types::OCIMANIFESTSCHEMA1, Types::DOCKERMANIFESTSCHEMA2\n  raise(\"unexpected media type for image_index: #{@v1.media_type.to_s}; call image instead.\")\nwhen Types::OCIIMAGEINDEX, Types::DOCKERMANIFESTLIST\nelse\n  V1::Logger.info(\"unhandled media type : #{@v1.media_type.to_s}\")\nend\nremote_index\n"}},{"id":"manifest:Slice(UInt8)-instance-method","html_id":"manifest:Slice(UInt8)-instance-method","name":"manifest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L17","def":{"name":"manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@manifest"}},{"id":"media_type(*args,**options)-instance-method","html_id":"media_type(*args,**options)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.media_type(*args, **options)"}},{"id":"media_type(*args,**options,&block)-instance-method","html_id":"media_type(*args,**options,&amp;block)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.media_type(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"platform:V1::Platform-instance-method","html_id":"platform:V1::Platform-instance-method","name":"platform","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Platform","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L17","def":{"name":"platform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@platform"}},{"id":"remote_image-instance-method","html_id":"remote_image-instance-method","name":"remote_image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L76","def":{"name":"remote_image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"f = Fetcher.new(@fetcher.ref, @fetcher.client)\nRemoteImage.new(fetcher: f, manifest: @manifest, media_type: @v1.media_type)\n"}},{"id":"remote_index-instance-method","html_id":"remote_index-instance-method","name":"remote_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L81","def":{"name":"remote_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"f = Fetcher.new(@fetcher.ref, @fetcher.client)\nRemoteIndex.new(fetcher: f, manifest: @manifest, media_type: @v1.media_type)\n"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.size(*args, **options)"}},{"id":"size(*args,**options,&block)-instance-method","html_id":"size(*args,**options,&amp;block)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/descriptor.cr#L18","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@v1.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Manifest","path":"V1/Remote/Manifest.html","kind":"module","full_name":"V1::Remote::Manifest","name":"Manifest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/remote/write.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/write.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/write.cr#L7","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":""}},{"id":"media_type:Types::MediaType-instance-method","html_id":"media_type:Types::MediaType-instance-method","name":"media_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Types::MediaType","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/write.cr#L6","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Types::MediaType","visibility":"Public","body":""}},{"id":"raw_manifest:Bytes-instance-method","html_id":"raw_manifest:Bytes-instance-method","name":"raw_manifest","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bytes","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/write.cr#L5","def":{"name":"raw_manifest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/MountableImage","path":"V1/Remote/MountableImage.html","kind":"class","full_name":"V1::Remote::MountableImage","name":"MountableImage","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Image","kind":"module","full_name":"V1::Image","name":"Image"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithRawConfigFile","kind":"module","full_name":"V1::Partial::WithRawConfigFile","name":"WithRawConfigFile"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/mount.cr","line_number":18,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Image","kind":"module","full_name":"V1::Image","name":"Image"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/WithRawConfigFile","kind":"module","full_name":"V1::Partial::WithRawConfigFile","name":"WithRawConfigFile"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":"mountableImage wraps the v1.Layer references returned by the embedded v1.Image\nin MountableLayer's so that remote.Write might attempt to mount them from their\nsource repository.","summary":"<p>mountableImage wraps the v1.Layer references returned by the embedded v1.Image in MountableLayer's so that remote.Write might attempt to mount them from their source repository.</p>","class_methods":[],"constructors":[{"id":"new(image,reference)-class-method","html_id":"new(image,reference)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":""},{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":""}],"args_string":"(image, reference)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L26","def":{"name":"new","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":""},{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(image, reference)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"config_file(*args,**options)-instance-method","html_id":"config_file(*args,**options)-instance-method","name":"config_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"config_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.config_file(*args, **options)"}},{"id":"config_file(*args,**options,&block)-instance-method","html_id":"config_file(*args,**options,&amp;block)-instance-method","name":"config_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"config_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.config_file(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"config_name(*args,**options)-instance-method","html_id":"config_name(*args,**options)-instance-method","name":"config_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"config_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.config_name(*args, **options)"}},{"id":"config_name(*args,**options,&block)-instance-method","html_id":"config_name(*args,**options,&amp;block)-instance-method","name":"config_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"config_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.config_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"digest(*args,**options)-instance-method","html_id":"digest(*args,**options)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.digest(*args, **options)"}},{"id":"digest(*args,**options,&block)-instance-method","html_id":"digest(*args,**options,&amp;block)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.digest(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"layer_by_diff_id(d:V1::Hash)-instance-method","html_id":"layer_by_diff_id(d:V1::Hash)-instance-method","name":"layer_by_diff_id","doc":"Layer_by_diff_id implements v1.Image","summary":"<p>Layer_by_diff_id implements v1.Image</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"V1::Hash"}],"args_string":"(d : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L50","def":{"name":"layer_by_diff_id","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l = @image.layer_by_diff_id(d)\nMountableLayer.new(l, @reference)\n"}},{"id":"layer_by_digest(d:V1::Hash)-instance-method","html_id":"layer_by_digest(d:V1::Hash)-instance-method","name":"layer_by_digest","doc":"Layer_by_digest implements v1.Image","summary":"<p>Layer_by_digest implements v1.Image</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"V1::Hash"}],"args_string":"(d : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L40","def":{"name":"layer_by_digest","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l = @image.layer_by_digest(d)\nif l.nil?\n  raise(\"Unable to retrieve layer with digest #{d.to_s}\")\nelse\n  MountableLayer.new(l, @reference)\nend\n"}},{"id":"layers-instance-method","html_id":"layers-instance-method","name":"layers","doc":"Layers implements v1.Image","summary":"<p>Layers implements v1.Image</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L30","def":{"name":"layers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ls = @image.layers\nmls = Array(V1::Layer).new(ls.size)\nls.each_with_index do |l, _|\n  mls << (MountableLayer.new(l, @reference))\nend\nmls\n"}},{"id":"manifest(*args,**options)-instance-method","html_id":"manifest(*args,**options)-instance-method","name":"manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"manifest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.manifest(*args, **options)"}},{"id":"manifest(*args,**options,&block)-instance-method","html_id":"manifest(*args,**options,&amp;block)-instance-method","name":"manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"manifest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.manifest(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"media_type(*args,**options,&block)-instance-method","html_id":"media_type(*args,**options,&amp;block)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.media_type(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"media_type(*args,**options)-instance-method","html_id":"media_type(*args,**options)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.media_type(*args, **options)"}},{"id":"raw_config_file(*args,**options,&block)-instance-method","html_id":"raw_config_file(*args,**options,&amp;block)-instance-method","name":"raw_config_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"raw_config_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.raw_config_file(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"raw_config_file(*args,**options)-instance-method","html_id":"raw_config_file(*args,**options)-instance-method","name":"raw_config_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"raw_config_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.raw_config_file(*args, **options)"}},{"id":"raw_manifest(*args,**options)-instance-method","html_id":"raw_manifest(*args,**options)-instance-method","name":"raw_manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"raw_manifest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.raw_manifest(*args, **options)"}},{"id":"raw_manifest(*args,**options,&block)-instance-method","html_id":"raw_manifest(*args,**options,&amp;block)-instance-method","name":"raw_manifest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L24","def":{"name":"raw_manifest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@image.raw_manifest(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/MountableLayer","path":"V1/Remote/MountableLayer.html","kind":"class","full_name":"V1::Remote::MountableLayer","name":"MountableLayer","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/mount.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":"MountableLayer wraps a v1.Layer in a shim that enables the layer to be\n\"mounted\" when published to another registry.","summary":"<p>MountableLayer wraps a v1.Layer in a shim that enables the layer to be \"mounted\" when published to another registry.</p>","class_methods":[],"constructors":[{"id":"new(layer,reference)-class-method","html_id":"new(layer,reference)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":""},{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":""}],"args_string":"(layer, reference)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L11","def":{"name":"new","args":[{"name":"layer","doc":null,"default_value":"","external_name":"layer","restriction":""},{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(layer, reference)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compressed(*args,**options)-instance-method","html_id":"compressed(*args,**options)-instance-method","name":"compressed","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"compressed","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.compressed(*args, **options)"}},{"id":"compressed(*args,**options,&block)-instance-method","html_id":"compressed(*args,**options,&amp;block)-instance-method","name":"compressed","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"compressed","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.compressed(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"diff_id(*args,**options)-instance-method","html_id":"diff_id(*args,**options)-instance-method","name":"diff_id","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"diff_id","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.diff_id(*args, **options)"}},{"id":"diff_id(*args,**options,&block)-instance-method","html_id":"diff_id(*args,**options,&amp;block)-instance-method","name":"diff_id","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"diff_id","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.diff_id(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"digest(*args,**options)-instance-method","html_id":"digest(*args,**options)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.digest(*args, **options)"}},{"id":"digest(*args,**options,&block)-instance-method","html_id":"digest(*args,**options,&amp;block)-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"digest","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.digest(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"layer:V1::Layer-instance-method","html_id":"layer:V1::Layer-instance-method","name":"layer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Layer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L8","def":{"name":"layer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Layer","visibility":"Public","body":"@layer"}},{"id":"media_type(*args,**options)-instance-method","html_id":"media_type(*args,**options)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.media_type(*args, **options)"}},{"id":"media_type(*args,**options,&block)-instance-method","html_id":"media_type(*args,**options,&amp;block)-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"media_type","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.media_type(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"reference:Name::References-instance-method","html_id":"reference:Name::References-instance-method","name":"reference","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Name::References","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Name::References","visibility":"Public","body":"@reference"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.size(*args, **options)"}},{"id":"size(*args,**options,&block)-instance-method","html_id":"size(*args,**options,&amp;block)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"uncompressed(*args,**options)-instance-method","html_id":"uncompressed(*args,**options)-instance-method","name":"uncompressed","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"uncompressed","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.uncompressed(*args, **options)"}},{"id":"uncompressed(*args,**options,&block)-instance-method","html_id":"uncompressed(*args,**options,&amp;block)-instance-method","name":"uncompressed","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/mount.cr#L9","def":{"name":"uncompressed","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@layer.uncompressed(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Option","path":"V1/Remote/Option.html","kind":"alias","full_name":"V1::Remote::Option","name":"Option","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/remote/options.cr","line_number":24,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/options.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"Proc(V1::Remote::Options, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","path":"V1/Remote/Transport.html","kind":"module","full_name":"V1::Remote::Transport","name":"Transport","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/remote/transport/basic.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr"},{"filename":"v1/remote/transport/bearer.cr","line_number":8,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr"},{"filename":"v1/remote/transport/error.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/error.cr"},{"filename":"v1/remote/transport/ping.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr"},{"filename":"v1/remote/transport/scope.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/scope.cr"},{"filename":"v1/remote/transport/transport.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ANONYMOUS","name":"ANONYMOUS","value":"Challenge[\"anonymous\"]","doc":null,"summary":null},{"id":"BASIC","name":"BASIC","value":"Challenge[\"basic\"]","doc":null,"summary":null},{"id":"BEARER","name":"BEARER","value":"Challenge[\"bearer\"]","doc":null,"summary":null},{"id":"CATALOG_SCOPE","name":"CATALOG_SCOPE","value":"\"catalog\"","doc":null,"summary":null},{"id":"DELETE_SCOPE","name":"DELETE_SCOPE","value":"PUSH_SCOPE","doc":"For now DELETE is PUSH, which is the read/write ACL.","summary":"<p>For now DELETE is PUSH, which is the read/write ACL.</p>"},{"id":"PULL_SCOPE","name":"PULL_SCOPE","value":"\"pull\"","doc":"Scopes suitable to qualify each Repository","summary":"<p>Scopes suitable to qualify each Repository</p>"},{"id":"PUSH_SCOPE","name":"PUSH_SCOPE","value":"\"push,pull\"","doc":null,"summary":null},{"id":"TRANSPORT_NAME","name":"TRANSPORT_NAME","value":"\"crystal-containerregistry\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote","kind":"module","full_name":"V1::Remote","name":"Remote"},"doc":null,"summary":null,"class_methods":[{"id":"check_error(resp,*codes):RegistryError?-class-method","html_id":"check_error(resp,*codes):RegistryError?-class-method","name":"check_error","doc":"check_error returns a structured error if the response status is not in codes.","summary":"<p>check_error returns a structured error if the response status is not in codes.</p>","abstract":false,"args":[{"name":"resp","doc":null,"default_value":"","external_name":"resp","restriction":""},{"name":"codes","doc":null,"default_value":"","external_name":"codes","restriction":""}],"args_string":"(resp, *codes) : RegistryError?","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/error.cr#L44","def":{"name":"check_error","args":[{"name":"resp","doc":null,"default_value":"","external_name":"resp","restriction":""},{"name":"codes","doc":null,"default_value":"","external_name":"codes","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"RegistryError | ::Nil","visibility":"Public","body":"codes.each do |code|\n  if resp.status == code\n    return nil\n  end\nend\nbegin\n  err = Error.from_json(resp.body)\n  RegistryError.new(err.to_s)\nrescue exception\n  RegistryError.new(\"unsupported status code: #{resp.status}; body: #{resp.body}\")\nend\n"}},{"id":"verbose_http-class-method","html_id":"verbose_http-class-method","name":"verbose_http","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L6","def":{"name":"verbose_http","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@verbose_http"}},{"id":"verbose_http=(verbose_http)-class-method","html_id":"verbose_http=(verbose_http)-class-method","name":"verbose_http=","doc":null,"summary":null,"abstract":false,"args":[{"name":"verbose_http","doc":null,"default_value":"","external_name":"verbose_http","restriction":""}],"args_string":"(verbose_http)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L10","def":{"name":"verbose_http=","args":[{"name":"verbose_http","doc":null,"default_value":"","external_name":"verbose_http","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@verbose_http = verbose_http"}}],"constructors":[],"instance_methods":[{"id":"new_transport(reg:Name::Registry,auth:Authn::Authenticator,client:Cossack::Client,scopes:Array(String))-instance-method","html_id":"new_transport(reg:Name::Registry,auth:Authn::Authenticator,client:Cossack::Client,scopes:Array(String))-instance-method","name":"new_transport","doc":null,"summary":null,"abstract":false,"args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":"Name::Registry"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"Authn::Authenticator"},{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"Cossack::Client"},{"name":"scopes","doc":null,"default_value":"","external_name":"scopes","restriction":"Array(String)"}],"args_string":"(reg : Name::Registry, auth : Authn::Authenticator, client : Cossack::Client, scopes : Array(String))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L94","def":{"name":"new_transport","args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":"Name::Registry"},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":"Authn::Authenticator"},{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"Cossack::Client"},{"name":"scopes","doc":null,"default_value":"","external_name":"scopes","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pr = ping(reg, client)\ncase pr.challenge.canonical\nwhen ANONYMOUS\n  Anonymous.new(client)\nwhen BASIC\n  Basic.new(client, auth, reg.reg_name)\nwhen BEARER\n  if pr.parameters.has_key?(\"realm\")\n  else\n    raise(\"malformed www-authenticate, missing realm\")\n  end\n  service = pr.parameters.fetch(\"service\", reg.to_s)\n  scope = pr.parameters[\"scope\"]?\n  if (  s = scope)\n    scopes = [s]\n  end\n  bt = Bearer.new(client: client, basic: auth, realm: pr.parameters[\"realm\"], registry: reg, service: service, scopes: scopes, scheme: pr.scheme)\n  bt.refresh\n  bt\nelse\n  raise(\"Unrecognized challenge: #{pr.challenge}\")\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Anonymous","path":"V1/Remote/Transport/Anonymous.html","kind":"class","full_name":"V1::Remote::Transport::Anonymous","name":"Anonymous","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/basic.cr","line_number":9,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client)-class-method","html_id":"new(client)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""}],"args_string":"(client)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L12","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"client:Cossack::Client-instance-method","html_id":"client:Cossack::Client-instance-method","name":"client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Cossack::Client","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L12","def":{"name":"client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Client","visibility":"Public","body":"@client"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","path":"V1/Remote/Transport/AuthHandler.html","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler","abstract":true,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/basic.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Anonymous","kind":"class","full_name":"V1::Remote::Transport::Anonymous","name":"Anonymous"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Basic","kind":"class","full_name":"V1::Remote::Transport::Basic","name":"Basic"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Bearer","kind":"class","full_name":"V1::Remote::Transport::Bearer","name":"Bearer"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"client:Cossack::Client-instance-method","html_id":"client:Cossack::Client-instance-method","name":"client","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Cossack::Client","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L6","def":{"name":"client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Client","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Basic","path":"V1/Remote/Transport/Basic.html","kind":"class","full_name":"V1::Remote::Transport::Basic","name":"Basic","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/basic.cr","line_number":16,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client,auth,target)-class-method","html_id":"new(client,auth,target)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"args_string":"(client, auth, target)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L21","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""},{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client, auth, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(auth,target)-class-method","html_id":"new(auth,target)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"args_string":"(auth, target)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L25","def":{"name":"new","args":[{"name":"auth","doc":null,"default_value":"","external_name":"auth","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(auth, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth:Authn::Authenticator-instance-method","html_id":"auth:Authn::Authenticator-instance-method","name":"auth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Authn::Authenticator","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L20","def":{"name":"auth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Authn::Authenticator","visibility":"Public","body":"@auth"}},{"id":"client:Cossack::Client-instance-method","html_id":"client:Cossack::Client-instance-method","name":"client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Cossack::Client","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L19","def":{"name":"client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Client","visibility":"Public","body":"@client"}},{"id":"target:String?-instance-method","html_id":"target:String?-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/basic.cr#L21","def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@target"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Bearer","path":"V1/Remote/Transport/Bearer.html","kind":"class","full_name":"V1::Remote::Transport::Bearer","name":"Bearer","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/AuthHandler","kind":"class","full_name":"V1::Remote::Transport::AuthHandler","name":"AuthHandler"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/bearer.cr","line_number":9,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(client,basic,registry,realm,service,scopes,scheme,bearer=Authn::Bearer.new(&quot;&quot;))-class-method","html_id":"new(client,basic,registry,realm,service,scopes,scheme,bearer=Authn::Bearer.new(&amp;quot;&amp;quot;))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""},{"name":"basic","doc":null,"default_value":"","external_name":"basic","restriction":""},{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":""},{"name":"realm","doc":null,"default_value":"","external_name":"realm","restriction":""},{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":""},{"name":"scopes","doc":null,"default_value":"","external_name":"scopes","restriction":""},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":""},{"name":"bearer","doc":null,"default_value":"Authn::Bearer.new(\"\")","external_name":"bearer","restriction":""}],"args_string":"(client, basic, registry, realm, service, scopes, scheme, bearer = <span class=\"t\">Authn</span><span class=\"t\">::</span><span class=\"t\">Bearer</span>.<span class=\"k\">new</span>(<span class=\"s\">&quot;&quot;</span>))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L25","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":""},{"name":"basic","doc":null,"default_value":"","external_name":"basic","restriction":""},{"name":"registry","doc":null,"default_value":"","external_name":"registry","restriction":""},{"name":"realm","doc":null,"default_value":"","external_name":"realm","restriction":""},{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":""},{"name":"scopes","doc":null,"default_value":"","external_name":"scopes","restriction":""},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":""},{"name":"bearer","doc":null,"default_value":"Authn::Bearer.new(\"\")","external_name":"bearer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client, basic, registry, realm, service, scopes, scheme, bearer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bearer:Authn::Bearer-instance-method","html_id":"bearer:Authn::Bearer-instance-method","name":"bearer","doc":"Holds the bearer response from the token service.","summary":"<p>Holds the bearer response from the token service.</p>","abstract":false,"args":[],"args_string":" : Authn::Bearer","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L16","def":{"name":"bearer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Authn::Bearer","visibility":"Public","body":"@bearer"}},{"id":"client:Cossack::Client-instance-method","html_id":"client:Cossack::Client-instance-method","name":"client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Cossack::Client","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L12","def":{"name":"client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Client","visibility":"Public","body":"@client"}},{"id":"realm:String-instance-method","html_id":"realm:String-instance-method","name":"realm","doc":"See https://tools.ietf.org/html/rfc6750#section-3","summary":"<p>See https://tools.ietf.org/html/rfc6750#section-3</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L20","def":{"name":"realm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@realm"}},{"id":"refresh-instance-method","html_id":"refresh-instance-method","name":"refresh","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L52","def":{"name":"refresh","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"uri = URI.parse(@realm)\nclient = Cossack::Client.new do |c|\n  c.use(StdoutLogger)\n  c.use(Cossack::CookieJarMiddleware, cookie_jar: c.cookies)\n  c.use(RedirectionMiddleware)\nend\nBasic.new(client, @basic, uri.host)\nparams = ::Hash {\"scope\" => @scopes, \"service\" => [@service]}\nquery = IO::Memory.new\n(HTTP::Params.new(params)).to_s(query)\nauth_uri = URI.new(host: uri.host, port: uri.port, scheme: uri.scheme, query: query.to_s, path: uri.path)\nresp = client.get(auth_uri.to_s)\nerr = Transport.check_error(resp, 200)\nif err.nil?\nelse\n  raise(err)\nend\nbegin\n  response = TokenResponse.from_json(resp.body)\nrescue exception\n  raise(exception)\nend\nif !response.token.blank?\n  bearer = Authn::Bearer.new(response.token)\nelse\n  if !response.access_token.blank?\n    bearer = Authn::Bearer.new(response.access_token)\n  else\n    raise(\"no token in bearer response:\\n #{resp.body}\")\n  end\nend\nset_bearer(bearer)\n"}},{"id":"registry:Name::Registry-instance-method","html_id":"registry:Name::Registry-instance-method","name":"registry","doc":"Registry to which we send bearer tokens.","summary":"<p>Registry to which we send bearer tokens.</p>","abstract":false,"args":[],"args_string":" : Name::Registry","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L18","def":{"name":"registry","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Name::Registry","visibility":"Public","body":"@registry"}},{"id":"scheme:String-instance-method","html_id":"scheme:String-instance-method","name":"scheme","doc":"Scheme we should use, determined by ping response.","summary":"<p>Scheme we should use, determined by ping response.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L25","def":{"name":"scheme","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@scheme"}},{"id":"scopes:Array(String)-instance-method","html_id":"scopes:Array(String)-instance-method","name":"scopes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L23","def":{"name":"scopes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@scopes"}},{"id":"update(resp)-instance-method","html_id":"update(resp)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"resp","doc":null,"default_value":"","external_name":"resp","restriction":""}],"args_string":"(resp)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/bearer.cr#L33","def":{"name":"update","args":[{"name":"resp","doc":null,"default_value":"","external_name":"resp","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if resp.status == 401\nelse\n  return\nend\nif (wac = resp.headers[\"WWW-Authenticate\"]?)\n  parts = wac.split(' ', 2)\n  if parts.size == 2\n    c = Challenge[parts[0]].canonical\n    if c == BEARER\n    else\n      return\n    end\n    pr = Transport.parse_challenge(parts[1])\n    @service = pr.fetch(\"service\", @service)\n    @realm = pr.fetch(\"realm\", @realm)\n    if (    s = pr[\"scope\"]?)\n      @scopes = [s]\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/Challenge","path":"V1/Remote/Transport/Challenge.html","kind":"struct","full_name":"V1::Remote::Transport::Challenge","name":"Challenge","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/ping.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[{"id":"[](challenge)-class-method","html_id":"[](challenge)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":""}],"args_string":"(challenge)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L9","def":{"name":"[]","args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(challenge)"}}],"constructors":[{"id":"new(challenge:String)-class-method","html_id":"new(challenge:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"}],"args_string":"(challenge : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L6","def":{"name":"new","args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(challenge)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"canonical-instance-method","html_id":"canonical-instance-method","name":"canonical","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L13","def":{"name":"canonical","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@challenge = @challenge.downcase\nself\n"}},{"id":"challenge:String-instance-method","html_id":"challenge:String-instance-method","name":"challenge","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"challenge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@challenge"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L6","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@challenge.clone)"}},{"id":"copy_with(challenge_challenge=@challenge)-instance-method","html_id":"copy_with(challenge_challenge=@challenge)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_challenge","doc":null,"default_value":"@challenge","external_name":"challenge","restriction":""}],"args_string":"(challenge _challenge = @challenge)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L6","def":{"name":"copy_with","args":[{"name":"_challenge","doc":null,"default_value":"@challenge","external_name":"challenge","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_challenge)"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L7","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @challenge.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/PingResp","path":"V1/Remote/Transport/PingResp.html","kind":"struct","full_name":"V1::Remote::Transport::PingResp","name":"PingResp","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/ping.cr","line_number":18,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(challenge:Challenge,parameters:::Hash(String,String),scheme:String)-class-method","html_id":"new(challenge:Challenge,parameters:::Hash(String,String),scheme:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"Challenge"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"::Hash(String, String)"},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":"String"}],"args_string":"(challenge : Challenge, parameters : ::Hash(String, String), scheme : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L18","def":{"name":"new","args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"Challenge"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"::Hash(String, String)"},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(challenge, parameters, scheme)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(challenge,scheme,parameters={}ofString=>String)-class-method","html_id":"new(challenge,scheme,parameters={}ofString=&gt;String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":""},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":""},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":""}],"args_string":"(challenge, scheme, parameters = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L25","def":{"name":"new","args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":""},{"name":"scheme","doc":null,"default_value":"","external_name":"scheme","restriction":""},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(challenge, scheme, parameters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"challenge:Challenge-instance-method","html_id":"challenge:Challenge-instance-method","name":"challenge","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Challenge","source_link":null,"def":{"name":"challenge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Challenge","visibility":"Public","body":"@challenge"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L18","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@challenge.clone, @parameters.clone, @scheme.clone)"}},{"id":"copy_with(challenge_challenge=@challenge,parameters_parameters=@parameters,scheme_scheme=@scheme)-instance-method","html_id":"copy_with(challenge_challenge=@challenge,parameters_parameters=@parameters,scheme_scheme=@scheme)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_challenge","doc":null,"default_value":"@challenge","external_name":"challenge","restriction":""},{"name":"_parameters","doc":null,"default_value":"@parameters","external_name":"parameters","restriction":""},{"name":"_scheme","doc":null,"default_value":"@scheme","external_name":"scheme","restriction":""}],"args_string":"(challenge _challenge = @challenge, parameters _parameters = @parameters, scheme _scheme = @scheme)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/ping.cr#L18","def":{"name":"copy_with","args":[{"name":"_challenge","doc":null,"default_value":"@challenge","external_name":"challenge","restriction":""},{"name":"_parameters","doc":null,"default_value":"@parameters","external_name":"parameters","restriction":""},{"name":"_scheme","doc":null,"default_value":"@scheme","external_name":"scheme","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_challenge, _parameters, _scheme)"}},{"id":"parameters:::Hash(String,String)-instance-method","html_id":"parameters:::Hash(String,String)-instance-method","name":"parameters","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Hash(String, String)","source_link":null,"def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Hash(String, String)","visibility":"Public","body":"@parameters"}},{"id":"scheme:String-instance-method","html_id":"scheme:String-instance-method","name":"scheme","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"scheme","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@scheme"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/RedirectionMiddleware","path":"V1/Remote/Transport/RedirectionMiddleware.html","kind":"class","full_name":"V1::Remote::Transport::RedirectionMiddleware","name":"RedirectionMiddleware","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Cossack/Middleware","kind":"class","full_name":"Cossack::Middleware","name":"Middleware"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Cossack/Middleware","kind":"class","full_name":"Cossack::Middleware","name":"Middleware"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/transport.cr","line_number":16,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(app,limit:Number=5)-class-method","html_id":"new(app,limit:Number=5)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"app","doc":null,"default_value":"","external_name":"app","restriction":""},{"name":"limit","doc":null,"default_value":"5","external_name":"limit","restriction":"Number"}],"args_string":"(app, limit : Number = <span class=\"n\">5</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L19","def":{"name":"new","args":[{"name":"app","doc":null,"default_value":"","external_name":"app","restriction":""},{"name":"limit","doc":null,"default_value":"5","external_name":"limit","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(app, limit)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(request:Cossack::Request):Cossack::Response-instance-method","html_id":"call(request:Cossack::Request):Cossack::Response-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Cossack::Request"}],"args_string":"(request : Cossack::Request) : Cossack::Response","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L23","def":{"name":"call","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Cossack::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Response","visibility":"Public","body":"current_request = request\ncount = 0\nresponse = app.call(request)\nmethod, should_redirect, include_body = redirect_behavior(request, response)\nwhile should_redirect && count < @limit\n  count = count + 1\n  if Transport.verbose_http\n    V1::Logger.debug(\"Redirecting #{count}\")\n  end\n  redirect_uri = URI.parse(response.headers[\"Location\"])\n  merge_uri!(redirect_uri, current_request.uri)\n  current_request = Cossack::Request.new(method, redirect_uri, current_request.headers, include_body ? request.body : nil, current_request.options)\n  response = app.call(current_request)\n  method, should_redirect, include_body = redirect_behavior(current_request, response)\nend\nresponse\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/RegistryError","path":"V1/Remote/Transport/RegistryError.html","kind":"class","full_name":"V1::Remote::Transport::RegistryError","name":"RegistryError","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/error.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/error.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport/StdoutLogger","path":"V1/Remote/Transport/StdoutLogger.html","kind":"class","full_name":"V1::Remote::Transport::StdoutLogger","name":"StdoutLogger","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Cossack/Middleware","kind":"class","full_name":"Cossack::Middleware","name":"Middleware"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Cossack/Middleware","kind":"class","full_name":"Cossack::Middleware","name":"Middleware"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/remote/transport/transport.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Remote/Transport","kind":"module","full_name":"V1::Remote::Transport","name":"Transport"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(request:Cossack::Request):Cossack::Response-instance-method","html_id":"call(request:Cossack::Request):Cossack::Response-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Cossack::Request"}],"args_string":"(request : Cossack::Request) : Cossack::Response","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/remote/transport/transport.cr#L7","def":{"name":"call","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Cossack::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cossack::Response","visibility":"Public","body":"if Transport.verbose_http\nelse\n  return app.call(request)\nend\nputs(V1::Util.dump_request(request, false))\n(app.call(request)).tap do |response|\n  puts(V1::Util.dump_response(response, false))\nend\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/RootFS","path":"V1/RootFS.html","kind":"struct","full_name":"V1::RootFS","name":"RootFS","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/config.cr","line_number":47,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"RootFS holds the ordered list of file system deltas that comprise the\ncontainer image's root filesystem.","summary":"<p>RootFS holds the ordered list of file system deltas that comprise the container image's root filesystem.</p>","class_methods":[],"constructors":[{"id":"new(type,diff_ids)-class-method","html_id":"new(type,diff_ids)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"diff_ids","doc":null,"default_value":"","external_name":"diff_ids","restriction":""}],"args_string":"(type, diff_ids)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L54","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"diff_ids","doc":null,"default_value":"","external_name":"diff_ids","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, diff_ids)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_95:JSON::PullParser)-class-method","html_id":"new(__temp_95:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_95","doc":null,"default_value":"","external_name":"__temp_95","restriction":"::JSON::PullParser"}],"args_string":"(__temp_95 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_95","doc":null,"default_value":"","external_name":"__temp_95","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_95)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"diff_ids-instance-method","html_id":"diff_ids-instance-method","name":"diff_ids","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L56","def":{"name":"diff_ids","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = Array(V1::Hash).new(@diff_ids.size)\n@diff_ids.each_with_index do |d, _|\n  res << (V1::Hash.new(d))\nend\nres\n"}},{"id":"diff_ids=(_diff_ids:Array(String))-instance-method","html_id":"diff_ids=(_diff_ids:Array(String))-instance-method","name":"diff_ids=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_diff_ids","doc":null,"default_value":"","external_name":"_diff_ids","restriction":"Array(String)"}],"args_string":"(_diff_ids : Array(String))","source_link":null,"def":{"name":"diff_ids=","args":[{"name":"_diff_ids","doc":null,"default_value":"","external_name":"_diff_ids","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@diff_ids = _diff_ids"}},{"id":"diff_ids=(arr:Array(V1::Hash))-instance-method","html_id":"diff_ids=(arr:Array(V1::Hash))-instance-method","name":"diff_ids=","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(V1::Hash)"}],"args_string":"(arr : Array(V1::Hash))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/config.cr#L64","def":{"name":"diff_ids=","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(V1::Hash)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@diff_ids.clear\narr.each do |d|\n  @diff_ids << d.to_s\nend\n"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _diff_ids = @diff_ids\n  if _diff_ids.nil?\n  else\n    json.field(\"diff_ids\") do\n      _diff_ids.to_json(json)\n    end\n  end\nend"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}},{"id":"type=(_type:String)-instance-method","html_id":"type=(_type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"args_string":"(_type : String)","source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream","path":"V1/Stream.html","kind":"module","full_name":"V1::Stream","name":"Stream","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/stream/layer.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr"},{"filename":"v1/stream/stream.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/stream.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Stream provides streaming implementation of V1::Layer","summary":"<p>Module Stream provides streaming implementation of V1::Layer</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream/ExConsumed","path":"V1/Stream/ExConsumed.html","kind":"class","full_name":"V1::Stream::ExConsumed","name":"ExConsumed","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/stream/stream.cr","line_number":10,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/stream.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream","kind":"module","full_name":"V1::Stream","name":"Stream"},"doc":"ExConsumed is returned by Compressed when the underlying stream has\nalready been consumed and closed.","summary":"<p>ExConsumed is returned by Compressed when the underlying stream has already been consumed and closed.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream/ExNotComputed","path":"V1/Stream/ExNotComputed.html","kind":"class","full_name":"V1::Stream::ExNotComputed","name":"ExNotComputed","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/stream/stream.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/stream.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream","kind":"module","full_name":"V1::Stream","name":"Stream"},"doc":"ExNotComputed is returned when the requested value is not yet\ncomputed because the stream has not been consumed yet","summary":"<p>ExNotComputed is returned when the requested value is not yet computed because the stream has not been consumed yet</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream/Layer","path":"V1/Stream/Layer.html","kind":"class","full_name":"V1::Stream::Layer","name":"Layer","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/CompressedLayer","kind":"module","full_name":"V1::Partial::CompressedLayer","name":"CompressedLayer"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/stream/layer.cr","line_number":7,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Partial/CompressedLayer","kind":"module","full_name":"V1::Partial::CompressedLayer","name":"CompressedLayer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Stream","kind":"module","full_name":"V1::Stream","name":"Stream"},"doc":"Layer is a streaming implementation of V1::Layer.","summary":"<p>Layer is a streaming implementation of V1::Layer.</p>","class_methods":[],"constructors":[{"id":"new(blob)-class-method","html_id":"new(blob)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"blob","doc":null,"default_value":"","external_name":"blob","restriction":""}],"args_string":"(blob)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L18","def":{"name":"new","args":[{"name":"blob","doc":null,"default_value":"","external_name":"blob","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(blob)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"blob:IO-instance-method","html_id":"blob:IO-instance-method","name":"blob","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L13","def":{"name":"blob","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@blob"}},{"id":"compressed-instance-method","html_id":"compressed-instance-method","name":"compressed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L57","def":{"name":"compressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @consumed\n  raise(ExConsumed.new(\"stream was already consumed\"))\nend\nCompressedReader.new(self)\n"}},{"id":"consumed:Bool-instance-method","html_id":"consumed:Bool-instance-method","name":"consumed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L14","def":{"name":"consumed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@consumed"}},{"id":"consumed=(consumed:Bool)-instance-method","html_id":"consumed=(consumed:Bool)-instance-method","name":"consumed=","doc":null,"summary":null,"abstract":false,"args":[{"name":"consumed","doc":null,"default_value":"","external_name":"consumed","restriction":"Bool"}],"args_string":"(consumed : Bool)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L18","def":{"name":"consumed=","args":[{"name":"consumed","doc":null,"default_value":"","external_name":"consumed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@consumed = consumed"}},{"id":"diff_id-instance-method","html_id":"diff_id-instance-method","name":"diff_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L31","def":{"name":"diff_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mu.synchronize do\n  if (  d = @diff_id)\n    d\n  else\n    raise(ExNotComputed.new(\"value not computed until stream is consumed\"))\n  end\nend"}},{"id":"diff_id=(diff_id:V1::Hash?)-instance-method","html_id":"diff_id=(diff_id:V1::Hash?)-instance-method","name":"diff_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"diff_id","doc":null,"default_value":"","external_name":"diff_id","restriction":"V1::Hash | ::Nil"}],"args_string":"(diff_id : V1::Hash?)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L21","def":{"name":"diff_id=","args":[{"name":"diff_id","doc":null,"default_value":"","external_name":"diff_id","restriction":"V1::Hash | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@diff_id = diff_id"}},{"id":"digest-instance-method","html_id":"digest-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L21","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mu.synchronize do\n  if (  d = @digest)\n    d\n  else\n    raise(ExNotComputed.new(\"value not computed until stream is consumed\"))\n  end\nend"}},{"id":"digest=(digest:V1::Hash?)-instance-method","html_id":"digest=(digest:V1::Hash?)-instance-method","name":"digest=","doc":null,"summary":null,"abstract":false,"args":[{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":"V1::Hash | ::Nil"}],"args_string":"(digest : V1::Hash?)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L20","def":{"name":"digest=","args":[{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":"V1::Hash | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@digest = digest"}},{"id":"media_type-instance-method","html_id":"media_type-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L48","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Types::DOCKERLAYER"}},{"id":"mu:Mutex-instance-method","html_id":"mu:Mutex-instance-method","name":"mu","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mutex","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L15","def":{"name":"mu","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mutex","visibility":"Public","body":"@mu"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L41","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mu.synchronize do\n  if @size == 0\n    raise(ExNotComputed.new(\"value not computed until stream is consumed\"))\n  end\n  @size\nend"}},{"id":"size=(size:Int64)-instance-method","html_id":"size=(size:Int64)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"args_string":"(size : Int64)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L22","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}},{"id":"uncompressed-instance-method","html_id":"uncompressed-instance-method","name":"uncompressed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/stream/layer.cr#L53","def":{"name":"uncompressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Not Implemented: Stream::Layer#uncompressed not yet implemented\")"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball","path":"V1/Tarball.html","kind":"module","full_name":"V1::Tarball","name":"Tarball","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/tarball/image.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/image.cr"},{"filename":"v1/tarball/layer.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr"},{"filename":"v1/tarball/tarball.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/tarball.cr"},{"filename":"v1/tarball/write.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball","kind":"module","full_name":"V1::Tarball","name":"Tarball"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module Tarball provides facilities for reading/writing v1.Images from/to a tarball on-disk.","summary":"<p>Module Tarball provides facilities for reading/writing v1.Images from/to a tarball on-disk.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dedup_ref_to_image(ref_to_image:::Hash(Name::References,V1::Image))-instance-method","html_id":"dedup_ref_to_image(ref_to_image:::Hash(Name::References,V1::Image))-instance-method","name":"dedup_ref_to_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"}],"args_string":"(ref_to_image : ::Hash(Name::References, V1::Image))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L98","def":{"name":"dedup_ref_to_image","args":[{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"image_to_tags = ::Hash(V1::Image, Array(String)).new\nref_to_image.each do |ref, img|\n  if ref.is_a?(Name::Tag)\n    tag = ref.as(Name::Tag)\n    if image_to_tags.has_key?(img)\n      tags = image_to_tags[img]\n      image_to_tags[img] = tags << tag.to_s\n    else\n      image_to_tags[img] = [tag.to_s]\n    end\n  else\n    if !(image_to_tags.has_key?(img))\n      image_to_tags[img] = [] of String\n    end\n  end\nend\nimage_to_tags\n"}},{"id":"image(opener:Opener,tag:Name::Tag?)-instance-method","html_id":"image(opener:Opener,tag:Name::Tag?)-instance-method","name":"image","doc":"image exposes an image from the tarball at the provided path.","summary":"<p>image exposes an image from the tarball at the provided path.</p>","abstract":false,"args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"Name::Tag | ::Nil"}],"args_string":"(opener : Opener, tag : Name::Tag?)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/tarball.cr#L16","def":{"name":"image","args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"Name::Tag | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"img = Image.new(opener: opener, tag: tag)\nimg.load_tar_descriptor_and_config\ncompressed = img.are_layers_compressed\nif compressed\n  c = CompressedImage.new(img)\n  return Partial.compressed_to_image(c)\nend\nuc = UncompressedImage.new(img)\nPartial.uncompressed_to_image(uc)\n"}},{"id":"image_from_path(path:String,tag:Name::Tag?)-instance-method","html_id":"image_from_path(path:String,tag:Name::Tag?)-instance-method","name":"image_from_path","doc":"image_from_path returns a V1::Image from a tarball located on path.","summary":"<p>image_from_path returns a V1::Image from a tarball located on path.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"Name::Tag | ::Nil"}],"args_string":"(path : String, tag : Name::Tag?)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/tarball.cr#L11","def":{"name":"image_from_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"Name::Tag | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"image(path_opener(path), tag)"}},{"id":"multi_ref_write(ref_to_image:::Hash(Name::References,V1::Image),w:IO)-instance-method","html_id":"multi_ref_write(ref_to_image:::Hash(Name::References,V1::Image),w:IO)-instance-method","name":"multi_ref_write","doc":"multi_ref_write writes the contents of each image to the provided reader, in the compressed format.\nThe contents are written in the following format:\nOne manifest.json file at the top level containing information about several images.\nOne file for each layer, named after the layer's SHA.\nOne file for the config blob, named after its SHA.","summary":"<p>multi_ref_write writes the contents of each image to the provided reader, in the compressed format.</p>","abstract":false,"args":[{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"args_string":"(ref_to_image : ::Hash(Name::References, V1::Image), w : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L55","def":{"name":"multi_ref_write","args":[{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crystar::Writer.open(w) do |tf|\n  image_to_tags = dedup_ref_to_image(ref_to_image)\n  td = TarDescriptor.new(image_to_tags.size)\n  image_to_tags.each do |img, tags|\n    cfg_name = img.config_name\n    cfg_blob = img.raw_config_file\n    write_tar_entry(tf, cfg_name.to_s, IO::Memory.new(cfg_blob), cfg_blob.size.to_i64)\n    layers = img.layers\n    layer_files = Array(String).new(layers.size)\n    layers.each_with_index do |l, _|\n      d = l.digest\n      hex = d.hex\n      layer_files << \"#{hex}.tar.gz\"\n      r = l.compressed\n      blob_size = l.size\n      write_tar_entry(tf, layer_files[layer_files.size - 1], r, blob_size)\n    end\n    sitd = SingleImageTarDescriptor.new(config: cfg_name.to_s, repo_tags: tags, layers: layer_files)\n    td << sitd\n  end\n  td_bytes = td.to_json\n  write_tar_entry(tf, \"manifest.json\", IO::Memory.new(td_bytes), td_bytes.size.to_i64)\nend"}},{"id":"multi_ref_write_to_file(path:String,ref_to_image:::Hash(Name::References,V1::Image))-instance-method","html_id":"multi_ref_write_to_file(path:String,ref_to_image:::Hash(Name::References,V1::Image))-instance-method","name":"multi_ref_write_to_file","doc":"multi_ref_write_to_file writes in the compressed format to a tarball, on disk.\nThis is just syntactic sugar wrapping tarball.MultiRefWrite with a new file.","summary":"<p>multi_ref_write_to_file writes in the compressed format to a tarball, on disk.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"}],"args_string":"(path : String, ref_to_image : ::Hash(Name::References, V1::Image))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L26","def":{"name":"multi_ref_write_to_file","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"ref_to_image","doc":null,"default_value":"","external_name":"ref_to_image","restriction":"::Hash(Name::References, V1::Image)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path, \"w\") do |f|\n  multi_ref_write(ref_to_image, f)\nend"}},{"id":"multi_write(tag_to_image:::Hash(Name::Tag,V1::Image),w:IO)-instance-method","html_id":"multi_write(tag_to_image:::Hash(Name::Tag,V1::Image),w:IO)-instance-method","name":"multi_write","doc":"multi_write writes the contents of each image to the provided reader, in the compressed format.\nThe contents are written in the following format:\nOne manifest.json file at the top level containing information about several images.\nOne file for each layer, named after the layer's SHA.\nOne file for the config blob, named after its SHA.","summary":"<p>multi_write writes the contents of each image to the provided reader, in the compressed format.</p>","abstract":false,"args":[{"name":"tag_to_image","doc":null,"default_value":"","external_name":"tag_to_image","restriction":"::Hash(Name::Tag, V1::Image)"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"args_string":"(tag_to_image : ::Hash(Name::Tag, V1::Image), w : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L42","def":{"name":"multi_write","args":[{"name":"tag_to_image","doc":null,"default_value":"","external_name":"tag_to_image","restriction":"::Hash(Name::Tag, V1::Image)"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ref_to_image = ::Hash(Name::References, V1::Image).new(tag_to_image.size)\ntag_to_image.each do |k, v|\n  ref_to_image[k] = v\nend\nmulti_ref_write(ref_to_image, w)\n"}},{"id":"multi_write_to_file(path:String,tag_to_image:::Hash(Name::Hash,V1::Image))-instance-method","html_id":"multi_write_to_file(path:String,tag_to_image:::Hash(Name::Hash,V1::Image))-instance-method","name":"multi_write_to_file","doc":"multi_write_to_file writes in the compressed format to a tarball, on disk.\nThis is just syntactic sugar wrapping tarball.MultiWrite with a new file.","summary":"<p>multi_write_to_file writes in the compressed format to a tarball, on disk.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"tag_to_image","doc":null,"default_value":"","external_name":"tag_to_image","restriction":"::Hash(Name::Hash, V1::Image)"}],"args_string":"(path : String, tag_to_image : ::Hash(Name::Hash, V1::Image))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L16","def":{"name":"multi_write_to_file","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"tag_to_image","doc":null,"default_value":"","external_name":"tag_to_image","restriction":"::Hash(Name::Hash, V1::Image)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ref_to_image = Hash(Name::References, V1::Image).new(tag_to_image.size)\ntag_to_image.each do |k, v|\n  ref_to_image[k] = v\nend\nmulti_ref_write_to_file(path, ref_to_image)\n"}},{"id":"path_opener(path:String)-instance-method","html_id":"path_opener(path:String)-instance-method","name":"path_opener","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/tarball.cr#L6","def":{"name":"path_opener","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Opener.new do\n  File.open(path)\nend"}},{"id":"write(ref:Name::References,img:V1::Image,w:IO)-instance-method","html_id":"write(ref:Name::References,img:V1::Image,w:IO)-instance-method","name":"write","doc":"Write is a wrapper to write a single image and tag to a tarball.","summary":"<p>Write is a wrapper to write a single image and tag to a tarball.</p>","abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"args_string":"(ref : Name::References, img : V1::Image, w : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L33","def":{"name":"write","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"multi_ref_write(::Hash {ref => img}, w)"}},{"id":"write_tar_entry(tf:Crystar::Writer,path:String,r:IO,size:Int64)-instance-method","html_id":"write_tar_entry(tf:Crystar::Writer,path:String,r:IO,size:Int64)-instance-method","name":"write_tar_entry","doc":"write a file to the provided writer with a corresponding tar header","summary":"<p>write a file to the provided writer with a corresponding tar header</p>","abstract":false,"args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"Crystar::Writer"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"args_string":"(tf : Crystar::Writer, path : String, r : IO, size : Int64)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L118","def":{"name":"write_tar_entry","args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"Crystar::Writer"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hdr = Crystar::Header.new(mode: 420_i64, flag: Crystar::REG.ord.to_u8, size: size, name: path)\ntf.write_header(hdr)\ntf.write((V1::Util.read_all(r)).to_slice)\n"}},{"id":"write_to_file(path:String,ref:Name::References,img:V1::Image)-instance-method","html_id":"write_to_file(path:String,ref:Name::References,img:V1::Image)-instance-method","name":"write_to_file","doc":"write_to_file writes in the compressed format to a tarball, on disk.\nThis is just syntactic sugar wrapping tarball.Write with a new file.","summary":"<p>write_to_file writes in the compressed format to a tarball, on disk.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"args_string":"(path : String, ref : Name::References, img : V1::Image)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/write.cr#L8","def":{"name":"write_to_file","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"Name::References"},{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path, \"w\") do |f|\n  write(ref, img, f)\nend"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball/Layer","path":"V1/Tarball/Layer.html","kind":"class","full_name":"V1::Tarball::Layer","name":"Layer","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/tarball/layer.cr","line_number":6,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Layer","kind":"module","full_name":"V1::Layer","name":"Layer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball","kind":"module","full_name":"V1::Tarball","name":"Tarball"},"doc":null,"summary":null,"class_methods":[{"id":"compute_diff_id(opener:Opener,compressed:Bool)-class-method","html_id":"compute_diff_id(opener:Opener,compressed:Bool)-class-method","name":"compute_diff_id","doc":null,"summary":null,"abstract":false,"args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Bool"}],"args_string":"(opener : Opener, compressed : Bool)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L69","def":{"name":"compute_diff_id","args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = opener.call\nbegin\n  if !compressed\n    digest, _ = V1::Hash.sha256(rc)\n    return digest\n  end\n  reader = Gzip::Reader.new(rc)\n  diff_id, _ = V1::Hash.sha256(reader)\n  diff_id\nensure\n  rc.close\nend\n"}},{"id":"compute_digest(opener:Opener,compressed:Bool)-class-method","html_id":"compute_digest(opener:Opener,compressed:Bool)-class-method","name":"compute_digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Bool"}],"args_string":"(opener : Opener, compressed : Bool)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L58","def":{"name":"compute_digest","args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = opener.call\nbegin\n  if compressed\n    return V1::Hash.sha256(rc)\n  end\n  reader = V1::Util.gzip_reader_closer(V1::Util::NoOpCloser.new(rc))\n  V1::Hash.sha256(reader)\nensure\n  rc.close\nend\n"}},{"id":"from_file(path:String)-class-method","html_id":"from_file(path:String)-class-method","name":"from_file","doc":"from_file returns a V1::Layer given a tarball","summary":"<p>from_file returns a V1::Layer given a tarball</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L18","def":{"name":"from_file","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"opener = Opener.new do\n  File.open(path)\nend\nfrom_opener(opener)\n"}},{"id":"from_opener(opener:Opener)-class-method","html_id":"from_opener(opener:Opener)-class-method","name":"from_opener","doc":"from_opener returns a V1::Layer given an opener function","summary":"<p>from_opener returns a V1::Layer given an opener function</p>","abstract":false,"args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"}],"args_string":"(opener : Opener)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L26","def":{"name":"from_opener","args":[{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":"Opener"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = opener.call\nbegin\n  compressed = V1::Util.is_gzipped(rc)\n  digest, size = compute_digest(opener, compressed)\n  diff_id = compute_diff_id(opener, compressed)\n  Layer.new(digest: digest, diff_id: diff_id, size: size, compressed: compressed, opener: opener)\nensure\n  rc.close\nend\n"}},{"id":"from_reader(io:IO)-class-method","html_id":"from_reader(io:IO)-class-method","name":"from_reader","doc":"from_reader returns a V1::Layer given an IO","summary":"<p>from_reader returns a V1::Layer given an IO</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L46","def":{"name":"from_reader","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a = V1::Util.read_all(io)\nopener = Opener.new do\n  V1::Util::ReaderAndCloser.new(reader: IO::Memory.new(a), closer: -> do\n  end)\nend\nfrom_opener(opener)\n"}}],"constructors":[{"id":"new(digest,diff_id,size,opener,compressed)-class-method","html_id":"new(digest,diff_id,size,opener,compressed)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":""},{"name":"diff_id","doc":null,"default_value":"","external_name":"diff_id","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":""},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":""}],"args_string":"(digest, diff_id, size, opener, compressed)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L14","def":{"name":"new","args":[{"name":"digest","doc":null,"default_value":"","external_name":"digest","restriction":""},{"name":"diff_id","doc":null,"default_value":"","external_name":"diff_id","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"opener","doc":null,"default_value":"","external_name":"opener","restriction":""},{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(digest, diff_id, size, opener, compressed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compressed-instance-method","html_id":"compressed-instance-method","name":"compressed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L84","def":{"name":"compressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = opener.call\nif !@compressed\n  return V1::Util.gzip_reader_closer(rc)\nend\nrc\n"}},{"id":"diff_id:V1::Hash-instance-method","html_id":"diff_id:V1::Hash-instance-method","name":"diff_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L11","def":{"name":"diff_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":"@diff_id"}},{"id":"digest:V1::Hash-instance-method","html_id":"digest:V1::Hash-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V1::Hash","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L10","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V1::Hash","visibility":"Public","body":"@digest"}},{"id":"media_type-instance-method","html_id":"media_type-instance-method","name":"media_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L97","def":{"name":"media_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Types::DOCKERLAYER"}},{"id":"opener:Opener-instance-method","html_id":"opener:Opener-instance-method","name":"opener","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Opener","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L13","def":{"name":"opener","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Opener","visibility":"Public","body":"@opener"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L12","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}},{"id":"uncompressed-instance-method","html_id":"uncompressed-instance-method","name":"uncompressed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/layer.cr#L91","def":{"name":"uncompressed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rc = opener.call\nif @compressed\n  return V1::Util.gunzip_reader_closer(rc)\nend\nrc\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball/Opener","path":"V1/Tarball/Opener.html","kind":"alias","full_name":"V1::Tarball::Opener","name":"Opener","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/tarball/tarball.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/tarball.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"Proc(IO)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball","kind":"module","full_name":"V1::Tarball","name":"Tarball"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball/SingleImageTarDescriptor","path":"V1/Tarball/SingleImageTarDescriptor.html","kind":"struct","full_name":"V1::Tarball::SingleImageTarDescriptor","name":"SingleImageTarDescriptor","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/tarball/image.cr","line_number":200,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/image.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Tarball","kind":"module","full_name":"V1::Tarball","name":"Tarball"},"doc":"SingleImageTarDescriptor is the struct used to represent a single\nimage inside a `docker save` tarball.","summary":"<p>SingleImageTarDescriptor is the struct used to represent a single image inside a <code>docker save</code> tarball.</p>","class_methods":[],"constructors":[{"id":"new(__temp_273:JSON::PullParser)-class-method","html_id":"new(__temp_273:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_273","doc":null,"default_value":"","external_name":"__temp_273","restriction":"::JSON::PullParser"}],"args_string":"(__temp_273 : JSON::PullParser)","source_link":null,"def":{"name":"new","args":[{"name":"__temp_273","doc":null,"default_value":"","external_name":"__temp_273","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_273)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(config=&quot;&quot;,repo_tags=[]ofString,layers=[]ofString)-class-method","html_id":"new(config=&amp;quot;&amp;quot;,repo_tags=[]ofString,layers=[]ofString)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"config","doc":null,"default_value":"\"\"","external_name":"config","restriction":""},{"name":"repo_tags","doc":null,"default_value":"[] of String","external_name":"repo_tags","restriction":""},{"name":"layers","doc":null,"default_value":"[] of String","external_name":"layers","restriction":""}],"args_string":"(config = <span class=\"s\">&quot;&quot;</span>, repo_tags = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, layers = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/tarball/image.cr#L207","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"\"\"","external_name":"config","restriction":""},{"name":"repo_tags","doc":null,"default_value":"[] of String","external_name":"repo_tags","restriction":""},{"name":"layers","doc":null,"default_value":"[] of String","external_name":"layers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config, repo_tags, layers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"config:String-instance-method","html_id":"config:String-instance-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@config"}},{"id":"config=(_config:String)-instance-method","html_id":"config=(_config:String)-instance-method","name":"config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"String"}],"args_string":"(_config : String)","source_link":null,"def":{"name":"config=","args":[{"name":"_config","doc":null,"default_value":"","external_name":"_config","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config = _config"}},{"id":"layers:Array(String)-instance-method","html_id":"layers:Array(String)-instance-method","name":"layers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"layers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@layers"}},{"id":"layers=(_layers:Array(String))-instance-method","html_id":"layers=(_layers:Array(String))-instance-method","name":"layers=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_layers","doc":null,"default_value":"","external_name":"_layers","restriction":"Array(String)"}],"args_string":"(_layers : Array(String))","source_link":null,"def":{"name":"layers=","args":[{"name":"_layers","doc":null,"default_value":"","external_name":"_layers","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@layers = _layers"}},{"id":"repo_tags:Array(String)-instance-method","html_id":"repo_tags:Array(String)-instance-method","name":"repo_tags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"repo_tags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@repo_tags"}},{"id":"repo_tags=(_repo_tags:Array(String))-instance-method","html_id":"repo_tags=(_repo_tags:Array(String))-instance-method","name":"repo_tags=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_repo_tags","doc":null,"default_value":"","external_name":"_repo_tags","restriction":"Array(String)"}],"args_string":"(_repo_tags : Array(String))","source_link":null,"def":{"name":"repo_tags=","args":[{"name":"_repo_tags","doc":null,"default_value":"","external_name":"_repo_tags","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@repo_tags = _repo_tags"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _config = @config\n  if _config.nil?\n  else\n    json.field(\"Config\") do\n      _config.to_json(json)\n    end\n  end\n  _repo_tags = @repo_tags\n  if _repo_tags.nil?\n  else\n    json.field(\"RepoTags\") do\n      _repo_tags.to_json(json)\n    end\n  end\n  _layers = @layers\n  if _layers.nil?\n  else\n    json.field(\"Layers\") do\n      _layers.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Types","path":"V1/Types.html","kind":"module","full_name":"V1::Types","name":"Types","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/types/types.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DOCKERCONFIGJSON","name":"DOCKERCONFIGJSON","value":"MediaType[\"application/vnd.docker.container.image.v1+json\"]","doc":null,"summary":null},{"id":"DOCKERFOREIGNLAYER","name":"DOCKERFOREIGNLAYER","value":"MediaType[\"application/vnd.docker.image.rootfs.foreign.diff.tar.gzip\"]","doc":null,"summary":null},{"id":"DOCKERLAYER","name":"DOCKERLAYER","value":"MediaType[\"application/vnd.docker.image.rootfs.diff.tar.gzip\"]","doc":null,"summary":null},{"id":"DOCKERMANIFESTLIST","name":"DOCKERMANIFESTLIST","value":"MediaType[\"application/vnd.docker.distribution.manifest.list.v2+json\"]","doc":null,"summary":null},{"id":"DOCKERMANIFESTSCHEMA1","name":"DOCKERMANIFESTSCHEMA1","value":"MediaType[\"application/vnd.docker.distribution.manifest.v1+json\"]","doc":null,"summary":null},{"id":"DOCKERMANIFESTSCHEMA1SIGNED","name":"DOCKERMANIFESTSCHEMA1SIGNED","value":"MediaType[\"application/vnd.docker.distribution.manifest.v1+prettyjws\"]","doc":null,"summary":null},{"id":"DOCKERMANIFESTSCHEMA2","name":"DOCKERMANIFESTSCHEMA2","value":"MediaType[\"application/vnd.docker.distribution.manifest.v2+json\"]","doc":null,"summary":null},{"id":"DOCKERPLUGINCONFIG","name":"DOCKERPLUGINCONFIG","value":"MediaType[\"application/vnd.docker.plugin.v1+json\"]","doc":null,"summary":null},{"id":"DOCKERUNCOMPRESSEDLAYER","name":"DOCKERUNCOMPRESSEDLAYER","value":"MediaType[\"application/vnd.docker.image.rootfs.diff.tar\"]","doc":null,"summary":null},{"id":"OCICONFIGJSON","name":"OCICONFIGJSON","value":"MediaType[\"application/vnd.oci.image.config.v1+json\"]","doc":null,"summary":null},{"id":"OCICONTENTDESCRIPTOR","name":"OCICONTENTDESCRIPTOR","value":"MediaType[\"application/vnd.oci.descriptor.v1+json\"]","doc":null,"summary":null},{"id":"OCIIMAGEINDEX","name":"OCIIMAGEINDEX","value":"MediaType[\"application/vnd.oci.image.index.v1+json\"]","doc":null,"summary":null},{"id":"OCILAYER","name":"OCILAYER","value":"MediaType[\"application/vnd.oci.image.layer.v1.tar+gzip\"]","doc":null,"summary":null},{"id":"OCIMANIFESTSCHEMA1","name":"OCIMANIFESTSCHEMA1","value":"MediaType[\"application/vnd.oci.image.manifest.v1+json\"]","doc":null,"summary":null},{"id":"OCIRESTRICTEDLAYER","name":"OCIRESTRICTEDLAYER","value":"MediaType[\"application/vnd.oci.image.layer.nondistributable.v1.tar+gzip\"]","doc":null,"summary":null},{"id":"OCIUNCOMPRESSEDLAYER","name":"OCIUNCOMPRESSEDLAYER","value":"MediaType[\"application/vnd.oci.image.layer.v1.tar\"]","doc":null,"summary":null},{"id":"OCIUNCOMPRESSEDRESTRICTEDLAYER","name":"OCIUNCOMPRESSEDRESTRICTEDLAYER","value":"MediaType[\"application/vnd.oci.image.layer.nondistributable.v1.tar\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Types/MediaType","path":"V1/Types/MediaType.html","kind":"struct","full_name":"V1::Types::MediaType","name":"MediaType","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/types/types.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Types","kind":"module","full_name":"V1::Types","name":"Types"},"doc":null,"summary":null,"class_methods":[{"id":"[](str)-class-method","html_id":"[](str)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L5","def":{"name":"[]","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(str)"}},{"id":"from_json(pull:JSON::PullParser)-class-method","html_id":"from_json(pull:JSON::PullParser)-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L13","def":{"name":"from_json","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string = pull.read_string\nself[string]\n"}},{"id":"to_json(mtype:MediaType,json:JSON::Builder)-class-method","html_id":"to_json(mtype:MediaType,json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"mtype","doc":null,"default_value":"","external_name":"mtype","restriction":"MediaType"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(mtype : MediaType, json : JSON::Builder)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L22","def":{"name":"to_json","args":[{"name":"mtype","doc":null,"default_value":"","external_name":"mtype","restriction":"MediaType"},{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(mtype.to_s)"}},{"id":"to_json(json:JSON::Builder)-class-method","html_id":"to_json(json:JSON::Builder)-class-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L18","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(self.to_s)"}}],"constructors":[{"id":"new(str:String)-class-method","html_id":"new(str:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L2","def":{"name":"new","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L9","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pull.read_string"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L2","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@str.clone)"}},{"id":"copy_with(str_str=@str)-instance-method","html_id":"copy_with(str_str=@str)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_str","doc":null,"default_value":"@str","external_name":"str","restriction":""}],"args_string":"(str _str = @str)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L2","def":{"name":"copy_with","args":[{"name":"_str","doc":null,"default_value":"@str","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_str)"}},{"id":"str:String-instance-method","html_id":"str:String-instance-method","name":"str","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"str","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@str"}},{"id":"to_s:String-instance-method","html_id":"to_s:String-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L26","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@str"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/types/types.cr#L3","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @str.\n{{ call }}\n\n    \n"}}],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","path":"V1/Util.html","kind":"module","full_name":"V1::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/util/and_closer.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr"},{"filename":"v1/util/once.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/once.cr"},{"filename":"v1/util/sync.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr"},{"filename":"v1/util/util.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/util.cr"},{"filename":"v1/util/verify.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr"},{"filename":"v1/util/zip.cr","line_number":3,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/zip.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"GZIP_MAGIC_HEADER","name":"GZIP_MAGIC_HEADER","value":"Bytes[31, 139]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":null,"summary":null,"class_methods":[{"id":"read_all(r:IO)-class-method","html_id":"read_all(r:IO)-class-method","name":"read_all","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/once.cr#L25","def":{"name":"read_all","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\nbuf = Bytes.new(512)\nloop do\n  begin\n    n = r.read(buf)\n  rescue IO::EOFError\n    n = 0\n  end\n  if n == 0\n    break\n  end\n  io.write(buf[...n])\n  clear(buf)\nend\nio.to_slice\n"}},{"id":"verify_read_closer(r:IO,h:V1::Hash)-class-method","html_id":"verify_read_closer(r:IO,h:V1::Hash)-class-method","name":"verify_read_closer","doc":"verify_read_closer wraps the given IO to verify that its contents match\nthe provided V1::Hash before EOF is returned","summary":"<p>verify_read_closer wraps the given IO to verify that its contents match the provided V1::Hash before EOF is returned</p>","abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"args_string":"(r : IO, h : V1::Hash)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr#L48","def":{"name":"verify_read_closer","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"V1::Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"w = V1::Hash.hasher(h.algorithm)\nr2 = TeeReader.new(r, w)\nReaderAndCloser.new(reader: VerifyReader.new(r2, w, h), closer: -> do\n  r.close\nend)\n"}}],"constructors":[],"instance_methods":[{"id":"dump_request(req,body)-instance-method","html_id":"dump_request(req,body)-instance-method","name":"dump_request","doc":null,"summary":null,"abstract":false,"args":[{"name":"req","doc":null,"default_value":"","external_name":"req","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(req, body)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/util.cr#L18","def":{"name":"dump_request","args":[{"name":"req","doc":null,"default_value":"","external_name":"req","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sb = String::Builder.build do |str|\n  str << req.method\n  str << \" #{req.uri.path}\"\n  if req.uri.query.nil?\n  else\n    str << \"?#{req.uri.query}\"\n  end\n  str << \" HTTP/1.1 \\r\\n\"\n  str << \"Host: #{req.uri.host}\"\n  if (p = req.uri.port) && ((p != 80) || (p != 443))\n    str << \":#{req.uri.port}\"\n  end\n  str << \"\\r\\n\"\n  req.headers.each do |k, v|\n    str << \"#{k}: #{v}\\r\\n\"\n  end\n  if body\n    str << req.body\n    str << \"\\r\\n\"\n  end\n  str << \"\\r\\n\"\nend\nsb\n"}},{"id":"dump_response(res,body)-instance-method","html_id":"dump_response(res,body)-instance-method","name":"dump_response","doc":null,"summary":null,"abstract":false,"args":[{"name":"res","doc":null,"default_value":"","external_name":"res","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(res, body)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/util.cr#L39","def":{"name":"dump_response","args":[{"name":"res","doc":null,"default_value":"","external_name":"res","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sb = String::Builder.build do |str|\n  str << \"status code #{res.status}\\r\\n\"\n  res.headers.each do |k, v|\n    str << \"#{k}: #{v}\\r\\n\"\n  end\n  if body\n    str << res.body\n    str << \"\\r\\n\"\n  end\n  str << \"\\r\\n\"\nend\nsb\n"}},{"id":"gunzip_reader_closer(r:IO)-instance-method","html_id":"gunzip_reader_closer(r:IO)-instance-method","name":"gunzip_reader_closer","doc":"reads compressed input data from the IO and\nreturns an IO from which uncompressed data may be read","summary":"<p>reads compressed input data from the IO and returns an IO from which uncompressed data may be read</p>","abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/zip.cr#L35","def":{"name":"gunzip_reader_closer","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"gr = Gzip::Reader.new(r)\nReaderAndCloser.new(reader: gr, closer: -> do\n  gr.close\n  r.close\nend)\n"}},{"id":"gzip_reader_closer(r:IO,level)-instance-method","html_id":"gzip_reader_closer(r:IO,level)-instance-method","name":"gzip_reader_closer","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""}],"args_string":"(r : IO, level)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/zip.cr#L19","def":{"name":"gzip_reader_closer","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"},{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pr, pw = IO.pipe\nspawn do\n  begin\n    Gzip::Writer.open(pw, level: level, sync_close: true) do |gzip|\n      IO.copy(r, gzip)\n    end\n  ensure\n    r.close\n    pw.close\n  end\nend\npr\n"}},{"id":"gzip_reader_closer(r:IO)-instance-method","html_id":"gzip_reader_closer(r:IO)-instance-method","name":"gzip_reader_closer","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/zip.cr#L11","def":{"name":"gzip_reader_closer","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"gzip_reader_closer(r, Gzip::BEST_COMPRESSION)"}},{"id":"is_gzipped(r:IO)-instance-method","html_id":"is_gzipped(r:IO)-instance-method","name":"is_gzipped","doc":"detects whether the input stream is compressed","summary":"<p>detects whether the input stream is compressed</p>","abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"args_string":"(r : IO)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/zip.cr#L45","def":{"name":"is_gzipped","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"h = Bytes.new(2)\nr.read(h)\nh == GZIP_MAGIC_HEADER\n"}},{"id":"read_dir(dir:String)-instance-method","html_id":"read_dir(dir:String)-instance-method","name":"read_dir","doc":null,"summary":null,"abstract":false,"args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"String"}],"args_string":"(dir : String)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/util.cr#L13","def":{"name":"read_dir","args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"list = Dir.children(dir)\nlist.sort\n"}},{"id":"temp_dir(prefix:String,dir:String=Dir.tempdir)-instance-method","html_id":"temp_dir(prefix:String,dir:String=Dir.tempdir)-instance-method","name":"temp_dir","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"dir","doc":null,"default_value":"Dir.tempdir","external_name":"dir","restriction":"String"}],"args_string":"(prefix : String, dir : String = <span class=\"t\">Dir</span>.tempdir)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/util.cr#L4","def":{"name":"temp_dir","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"dir","doc":null,"default_value":"Dir.tempdir","external_name":"dir","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tempfile = File.tempfile(prefix)\npath = tempfile.path\ntempfile.delete\npath = Path[dir, path].to_s\nFileUtils.mkdir_p(path, mode: 448)\npath\n"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/Group","path":"V1/Util/Group.html","kind":"class","full_name":"V1::Util::Group","name":"Group","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/sync.cr","line_number":27,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":"A Group is a collection of fibers working on subtasks that are part of the same overall task.","summary":"<p>A Group is a collection of fibers working on subtasks that are part of the same overall task.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L32","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cancel:->?-instance-method","html_id":"cancel:-&gt;?-instance-method","name":"cancel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" :  -> ?","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L39","def":{"name":"cancel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cancel"}},{"id":"cancel=(f:Proc(Void))-instance-method","html_id":"cancel=(f:Proc(Void))-instance-method","name":"cancel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Proc(Void)"}],"args_string":"(f : Proc(Void))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L43","def":{"name":"cancel=","args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Proc(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cancel = f"}},{"id":"exception:Exception?-instance-method","html_id":"exception:Exception?-instance-method","name":"exception","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Exception?","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L32","def":{"name":"exception","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Exception | ::Nil","visibility":"Public","body":"@exception"}},{"id":"exception=(exception:Exception?)-instance-method","html_id":"exception=(exception:Exception?)-instance-method","name":"exception=","doc":null,"summary":null,"abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"Exception | ::Nil"}],"args_string":"(exception : Exception?)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L36","def":{"name":"exception=","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"Exception | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exception = exception"}},{"id":"spawn(f:Proc(Void))-instance-method","html_id":"spawn(f:Proc(Void))-instance-method","name":"spawn","doc":"spwan calls the given function in a new fiber.\n\nThe first call to return a non-nil exception cancels the group; its exception will be\nreturned by wait","summary":"<p>spwan calls the given function in a new fiber.</p>","abstract":false,"args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Proc(Void)"}],"args_string":"(f : Proc(Void))","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L64","def":{"name":"spawn","args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Proc(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wg.add(1)\nproc = ->(o : Group, ex : Exception) do\n  -> do\n    o.exception = ex\n    if (    c = o.cancel)\n      begin\n        c.call\n      rescue ex\n      end\n    end\n  end\nend\nspawn do\n  begin\n    f.call\n  rescue ex\n    @exc_once.do(proc.call(self, ex))\n  ensure\n    @wg.done\n  end\nend\n"}},{"id":"wait-instance-method","html_id":"wait-instance-method","name":"wait","doc":"wait blocks until all function calls from the Fiber method have returned, then\nreturns the first non-nil exception (if any) from them","summary":"<p>wait blocks until all function calls from the Fiber method have returned, then returns the first non-nil exception (if any) from them</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L49","def":{"name":"wait","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wg.wait\nif (c = @cancel)\n  begin\n    c.call\n  rescue\n  end\nend\n@exception\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/NoOpCloser","path":"V1/Util/NoOpCloser.html","kind":"class","full_name":"V1::Util::NoOpCloser","name":"NoOpCloser","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/ReaderAndCloser","kind":"class","full_name":"V1::Util::ReaderAndCloser","name":"ReaderAndCloser"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/ReaderAndCloser","kind":"class","full_name":"V1::Util::ReaderAndCloser","name":"ReaderAndCloser"},{"html_id":"github.com/naqvis/containerregistry.cr/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/and_closer.cr","line_number":28,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(r)-class-method","html_id":"new(r)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"args_string":"(r)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L31","def":{"name":"new","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(r)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L35","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"write(b:Bytes)-instance-method","html_id":"write(b:Bytes)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(b : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L39","def":{"name":"write","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(Error.new(\"NoOpReader: Can't write\"))"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L43","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @r.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/Once","path":"V1/Util/Once.html","kind":"struct","full_name":"V1::Util::Once","name":"Once","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/containerregistry.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/once.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/once.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/once.cr#L5","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"do(f:->Void)-instance-method","html_id":"do(f:-&gt;Void)-instance-method","name":"do","doc":null,"summary":null,"abstract":false,"args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"(-> Void)"}],"args_string":"(f :  -> Void)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/once.cr#L10","def":{"name":"do","args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"(-> Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @done.get == 1\n  return\nend\n@m.synchronize do\n  if @done.get == 0\n    begin\n      f.call\n    ensure\n      @done.add(1)\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/ReaderAndCloser","path":"V1/Util/ReaderAndCloser.html","kind":"class","full_name":"V1::Util::ReaderAndCloser","name":"ReaderAndCloser","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/and_closer.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/NoOpCloser","kind":"class","full_name":"V1::Util::NoOpCloser","name":"NoOpCloser"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":"implements IO read and close by reading from a particular\nIO reader and then calling the provided close method","summary":"<p>implements IO read and close by reading from a particular IO reader and then calling the provided close method</p>","class_methods":[],"constructors":[{"id":"new(reader,closer)-class-method","html_id":"new(reader,closer)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"reader","doc":null,"default_value":"","external_name":"reader","restriction":""},{"name":"closer","doc":null,"default_value":"","external_name":"closer","restriction":""}],"args_string":"(reader, closer)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L10","def":{"name":"new","args":[{"name":"reader","doc":null,"default_value":"","external_name":"reader","restriction":""},{"name":"closer","doc":null,"default_value":"","external_name":"closer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(reader, closer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L21","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closer.call"}},{"id":"read(b:Bytes)-instance-method","html_id":"read(b:Bytes)-instance-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(b : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L13","def":{"name":"read","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reader.read(b)"}},{"id":"reader:IO-instance-method","html_id":"reader:IO-instance-method","name":"reader","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L9","def":{"name":"reader","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@reader"}},{"id":"write(b:Bytes)-instance-method","html_id":"write(b:Bytes)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"args_string":"(b : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L17","def":{"name":"write","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(Error.new(\"ReaderAndCloser: Can't write\"))"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr#L25","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @reader.\n{{ call }}\n\n    \n"}}],"types":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/ReaderAndCloser/Closer","path":"V1/Util/ReaderAndCloser/Closer.html","kind":"alias","full_name":"V1::Util::ReaderAndCloser::Closer","name":"Closer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/util/and_closer.cr","line_number":5,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/and_closer.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":true,"aliased":"Proc(Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/ReaderAndCloser","kind":"class","full_name":"V1::Util::ReaderAndCloser","name":"ReaderAndCloser"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/TeeReader","path":"V1/Util/TeeReader.html","kind":"class","full_name":"V1::Util::TeeReader","name":"TeeReader","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/verify.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(r,w)-class-method","html_id":"new(r,w)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":""}],"args_string":"(r, w)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr#L8","def":{"name":"new","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(r, w)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"read(slice:Bytes)-instance-method","html_id":"read(slice:Bytes)-instance-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr#L11","def":{"name":"read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = @r.read(slice)\nif n == 0\nelse\n  @w.write(slice[0, n])\nend\nn\n"}},{"id":"write(slice:Bytes)-instance-method","html_id":"write(slice:Bytes)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/verify.cr#L17","def":{"name":"write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't write to V1::Util::TeeReader\"))"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util/WaitGroup","path":"V1/Util/WaitGroup.html","kind":"class","full_name":"V1::Util::WaitGroup","name":"WaitGroup","abstract":false,"superclass":{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/containerregistry.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/containerregistry.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"v1/util/sync.cr","line_number":4,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1/Util","kind":"module","full_name":"V1::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L5","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(n=1)-instance-method","html_id":"add(n=1)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""}],"args_string":"(n = <span class=\"n\">1</span>)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L10","def":{"name":"add","args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count.add(n)"}},{"id":"done-instance-method","html_id":"done-instance-method","name":"done","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L14","def":{"name":"done","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(-1)"}},{"id":"wait-instance-method","html_id":"wait-instance-method","name":"wait","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/util/sync.cr#L18","def":{"name":"wait","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  if @count.get == 0\n    return\n  end\n  sleep(@span)\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/naqvis/containerregistry.cr/V1/Validator","path":"V1/Validator.html","kind":"module","full_name":"V1::Validator","name":"Validator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"v1/validate/image.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/validate/image.cr"},{"filename":"v1/validate/index.cr","line_number":1,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/validate/index.cr"},{"filename":"v1/validate/validate.cr","line_number":2,"url":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/validate/validate.cr"}],"repository_name":"github.com/naqvis/containerregistry.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/containerregistry.cr/V1/Validator","kind":"module","full_name":"V1::Validator","name":"Validator"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/containerregistry.cr/V1","kind":"module","full_name":"V1","name":"V1"},"doc":"Module V1::Validate provides methods for validating image correctness.","summary":"<p>Module V1::Validate provides methods for validating image correctness.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(img:V1::Image)-instance-method","html_id":"validate(img:V1::Image)-instance-method","name":"validate","doc":null,"summary":null,"abstract":false,"args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"args_string":"(img : V1::Image)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/validate/validate.cr#L5","def":{"name":"validate","args":[{"name":"img","doc":null,"default_value":"","external_name":"img","restriction":"V1::Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"image(img)"}},{"id":"validate(idx:V1::ImageIndex)-instance-method","html_id":"validate(idx:V1::ImageIndex)-instance-method","name":"validate","doc":null,"summary":null,"abstract":false,"args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"V1::ImageIndex"}],"args_string":"(idx : V1::ImageIndex)","source_link":"https://github.com/naqvis/containerregistry.cr/blob/a1c753e83a5f0fa48d3851429ff10aadc85834cd/src/v1/validate/validate.cr#L9","def":{"name":"validate","args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"V1::ImageIndex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index(idx)"}}],"macros":[],"types":[]}]}]}}